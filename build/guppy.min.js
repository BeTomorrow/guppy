(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Guppy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
(function(e){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=e()}else if(typeof define==="function"&&define.amd){define([],e)}else{var t;if(typeof window!=="undefined"){t=window}else if(typeof global!=="undefined"){t=global}else if(typeof self!=="undefined"){t=self}else{t=this}t.katex=e()}})(function(){var e,t,r;return function e(t,r,a){function i(o,s){if(!r[o]){if(!t[o]){var l=typeof require=="function"&&require;if(!s&&l)return l(o,!0);if(n)return n(o,!0);var u=new Error("Cannot find module '"+o+"'");throw u.code="MODULE_NOT_FOUND",u}var h=r[o]={exports:{}};t[o][0].call(h.exports,function(e){var r=t[o][1][e];return i(r?r:e)},h,h.exports,e,t,r,a)}return r[o].exports}var n=typeof require=="function"&&require;for(var o=0;o<a.length;o++)i(a[o]);return i}({1:[function(e,t,r){"use strict";var a=e("./src/ParseError");var i=e("./src/Settings");var n=e("./src/buildTree");var o=e("./src/parseTree");var s=e("./src/utils");var l=function e(t,r,a){s.clearNode(r);var l=new i(a);var u=o(t,l);var h=n(u,t,l).toNode();r.appendChild(h)};if(typeof document!=="undefined"){if(document.compatMode!=="CSS1Compat"){typeof console!=="undefined"&&console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your "+"website has a suitable doctype.");l=function e(){throw new a("KaTeX doesn't work in quirks mode.")}}}var u=function e(t,r){var a=new i(r);var s=o(t,a);return n(s,t,a).toMarkup()};var h=function e(t,r){var a=new i(r);return o(t,a)};t.exports={render:l,renderToString:u,__parse:h,ParseError:a}},{"./src/ParseError":10,"./src/Settings":12,"./src/buildTree":17,"./src/parseTree":27,"./src/utils":31}],2:[function(e,t,r){t.exports={default:e("core-js/library/fn/json/stringify"),__esModule:true}},{"core-js/library/fn/json/stringify":3}],3:[function(e,t,r){var a=e("../../modules/_core"),i=a.JSON||(a.JSON={stringify:JSON.stringify});t.exports=function e(t){return i.stringify.apply(i,arguments)}},{"../../modules/_core":4}],4:[function(e,t,r){var a=t.exports={version:"2.4.0"};if(typeof __e=="number")__e=a},{}],5:[function(e,t,r){"use strict";function a(e){if(!e.__matchAtRelocatable){var t=e.source+"|()";var r="g"+(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"");e.__matchAtRelocatable=new RegExp(t,r)}return e.__matchAtRelocatable}function i(e,t,r){if(e.global||e.sticky){throw new Error("matchAt(...): Only non-global regexes are supported")}var i=a(e);i.lastIndex=r;var n=i.exec(t);if(n[n.length-1]==null){n.length=n.length-1;return n}else{return null}}t.exports=i},{}],6:[function(e,t,r){"use strict";var a=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty;var n=Object.prototype.propertyIsEnumerable;function o(e){if(e===null||e===undefined){throw new TypeError("Object.assign cannot be called with null or undefined")}return Object(e)}function s(){try{if(!Object.assign){return false}var e=new String("abc");e[5]="de";if(Object.getOwnPropertyNames(e)[0]==="5"){return false}var t={};for(var r=0;r<10;r++){t["_"+String.fromCharCode(r)]=r}var a=Object.getOwnPropertyNames(t).map(function(e){return t[e]});if(a.join("")!=="0123456789"){return false}var i={};"abcdefghijklmnopqrst".split("").forEach(function(e){i[e]=e});if(Object.keys(Object.assign({},i)).join("")!=="abcdefghijklmnopqrst"){return false}return true}catch(e){return false}}t.exports=s()?Object.assign:function(e,t){var r;var s=o(e);var l;for(var u=1;u<arguments.length;u++){r=Object(arguments[u]);for(var h in r){if(i.call(r,h)){s[h]=r[h]}}if(a){l=a(r);for(var p=0;p<l.length;p++){if(n.call(r,l[p])){s[l[p]]=r[l[p]]}}}}return s}},{}],7:[function(e,t,r){"use strict";var a=e("match-at");var i=e("./ParseError");function n(e){this.input=e;this.pos=0}function o(e,t,r,a){this.text=e;this.start=t;this.end=r;this.lexer=a}o.prototype.range=function(e,t){if(e.lexer!==this.lexer){return new o(t)}return new o(t,this.start,e.end,this.lexer)};var s=new RegExp("([ \r\n\t]+)|"+"([!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff]"+"|[\ud800-\udbff][\udc00-\udfff]"+"|\\\\(?:[a-zA-Z]+|[^\ud800-\udfff])"+")");n.prototype.lex=function(){var e=this.input;var t=this.pos;if(t===e.length){return new o("EOF",t,t,this)}var r=a(s,e,t);if(r===null){throw new i("Unexpected character: '"+e[t]+"'",new o(e[t],t,t+1,this))}var n=r[2]||" ";var l=this.pos;this.pos+=r[0].length;var u=this.pos;return new o(n,l,u,this)};t.exports=n},{"./ParseError":10,"match-at":5}],8:[function(e,t,r){"use strict";var a=e("./Lexer");var i=e("./macros");var n=e("./ParseError");var o=e("object-assign");function s(e,t){this.lexer=new a(e);this.macros=o({},i,t);this.stack=[];this.discardedWhiteSpace=[]}s.prototype.nextToken=function(){for(;;){if(this.stack.length===0){this.stack.push(this.lexer.lex())}var e=this.stack.pop();var t=e.text;if(!(t.charAt(0)==="\\"&&this.macros.hasOwnProperty(t))){return e}var r=void 0;var i=this.macros[t];if(typeof i==="string"){var o=0;if(i.indexOf("#")!==-1){var s=i.replace(/##/g,"");while(s.indexOf("#"+(o+1))!==-1){++o}}var l=new a(i);i=[];r=l.lex();while(r.text!=="EOF"){i.push(r);r=l.lex()}i.reverse();i.numArgs=o;this.macros[t]=i}if(i.numArgs){var u=[];var h=void 0;for(h=0;h<i.numArgs;++h){var p=this.get(true);if(p.text==="{"){var c=[];var v=1;while(v!==0){r=this.get(false);c.push(r);if(r.text==="{"){++v}else if(r.text==="}"){--v}else if(r.text==="EOF"){throw new n("End of input in macro argument",p)}}c.pop();c.reverse();u[h]=c}else if(p.text==="EOF"){throw new n("End of input expecting macro argument",e)}else{u[h]=[p]}}i=i.slice();for(h=i.length-1;h>=0;--h){r=i[h];if(r.text==="#"){if(h===0){throw new n("Incomplete placeholder at end of macro body",r)}r=i[--h];if(r.text==="#"){i.splice(h+1,1)}else if(/^[1-9]$/.test(r.text)){i.splice.apply(i,[h,2].concat(u[r.text-1]))}else{throw new n("Not a valid argument number",r)}}}}this.stack=this.stack.concat(i)}};s.prototype.get=function(e){this.discardedWhiteSpace=[];var t=this.nextToken();if(e){while(t.text===" "){this.discardedWhiteSpace.push(t);t=this.nextToken()}}return t};s.prototype.unget=function(e){this.stack.push(e);while(this.discardedWhiteSpace.length!==0){this.stack.push(this.discardedWhiteSpace.pop())}};t.exports=s},{"./Lexer":7,"./ParseError":10,"./macros":24,"object-assign":6}],9:[function(e,t,r){"use strict";var a=e("./fontMetrics");var i=6;var n=[[1,1,1],[2,1,1],[3,1,1],[4,2,1],[5,2,1],[6,3,1],[7,4,2],[8,6,3],[9,7,6],[10,8,7],[11,10,9]];var o=[.5,.6,.7,.8,.9,1,1.2,1.44,1.728,2.074,2.488];function s(e){this.style=e.style;this.color=e.color;this.size=e.size||i;this.textSize=e.textSize||this.size;this.phantom=e.phantom;this.font=e.font;this.sizeMultiplier=o[this.size-1];this._fontMetrics=null}s.prototype.extend=function(e){var t={style:this.style,size:this.size,textSize:this.textSize,color:this.color,phantom:this.phantom,font:this.font};for(var r in e){if(e.hasOwnProperty(r)){t[r]=e[r]}}return new s(t)};function l(e,t){return t.size<2?e:n[e-1][t.size-1]}s.prototype.havingStyle=function(e){if(this.style===e){return this}else{return this.extend({style:e,size:l(this.textSize,e)})}};s.prototype.havingCrampedStyle=function(){return this.havingStyle(this.style.cramp())};s.prototype.havingSize=function(e){if(this.size===e&&this.textSize===e){return this}else{return this.extend({style:this.style.text(),size:e,textSize:e})}};s.prototype.havingBaseStyle=function(e){e=e||this.style.text();var t=l(i,e);if(this.size===t&&this.textSize===i&&this.style===e){return this}else{return this.extend({style:e,size:t,baseSize:i})}};s.prototype.withColor=function(e){return this.extend({color:e})};s.prototype.withPhantom=function(){return this.extend({phantom:true})};s.prototype.withFont=function(e){return this.extend({font:e||this.font})};s.prototype.sizingClasses=function(e){if(e.size!==this.size){return["sizing","reset-size"+e.size,"size"+this.size]}else{return[]}};s.prototype.baseSizingClasses=function(){if(this.size!==i){return["sizing","reset-size"+this.size,"size"+i]}else{return[]}};s.prototype.fontMetrics=function(){if(!this._fontMetrics){this._fontMetrics=a.getFontMetrics(this.size)}return this._fontMetrics};var u={"katex-blue":"#6495ed","katex-orange":"#ffa500","katex-pink":"#ff00af","katex-red":"#df0030","katex-green":"#28ae7b","katex-gray":"gray","katex-purple":"#9d38bd","katex-blueA":"#ccfaff","katex-blueB":"#80f6ff","katex-blueC":"#63d9ea","katex-blueD":"#11accd","katex-blueE":"#0c7f99","katex-tealA":"#94fff5","katex-tealB":"#26edd5","katex-tealC":"#01d1c1","katex-tealD":"#01a995","katex-tealE":"#208170","katex-greenA":"#b6ffb0","katex-greenB":"#8af281","katex-greenC":"#74cf70","katex-greenD":"#1fab54","katex-greenE":"#0d923f","katex-goldA":"#ffd0a9","katex-goldB":"#ffbb71","katex-goldC":"#ff9c39","katex-goldD":"#e07d10","katex-goldE":"#a75a05","katex-redA":"#fca9a9","katex-redB":"#ff8482","katex-redC":"#f9685d","katex-redD":"#e84d39","katex-redE":"#bc2612","katex-maroonA":"#ffbde0","katex-maroonB":"#ff92c6","katex-maroonC":"#ed5fa6","katex-maroonD":"#ca337c","katex-maroonE":"#9e034e","katex-purpleA":"#ddd7ff","katex-purpleB":"#c6b9fc","katex-purpleC":"#aa87ff","katex-purpleD":"#7854ab","katex-purpleE":"#543b78","katex-mintA":"#f5f9e8","katex-mintB":"#edf2df","katex-mintC":"#e0e5cc","katex-grayA":"#f6f7f7","katex-grayB":"#f0f1f2","katex-grayC":"#e3e5e6","katex-grayD":"#d6d8da","katex-grayE":"#babec2","katex-grayF":"#888d93","katex-grayG":"#626569","katex-grayH":"#3b3e40","katex-grayI":"#21242c","katex-kaBlue":"#314453","katex-kaGreen":"#71B307"};s.prototype.getColor=function(){if(this.phantom){return"transparent"}else{return u[this.color]||this.color}};s.BASESIZE=i;t.exports=s},{"./fontMetrics":21}],10:[function(e,t,r){"use strict";function a(e,t){var r="KaTeX parse error: "+e;var i=void 0;var n=void 0;if(t&&t.lexer&&t.start<=t.end){var o=t.lexer.input;i=t.start;n=t.end;if(i===o.length){r+=" at end of input: "}else{r+=" at position "+(i+1)+": "}var s=o.slice(i,n).replace(/[^]/g,"$&\u0332");var l=void 0;if(i>15){l="\u2026"+o.slice(i-15,i)}else{l=o.slice(0,i)}var u=void 0;if(n+15<o.length){u=o.slice(n,n+15)+"\u2026"}else{u=o.slice(n)}r+=l+s+u}var h=new Error(r);h.name="ParseError";h.__proto__=a.prototype;h.position=i;return h}a.prototype.__proto__=Error.prototype;t.exports=a},{}],11:[function(e,t,r){"use strict";var a=e("./functions");var i=e("./environments");var n=e("./MacroExpander");var o=e("./symbols");var s=e("./utils");var l=e("./unicodeRegexes").cjkRegex;var u=e("./parseData");var h=e("./ParseError");function p(e,t){this.gullet=new n(e,t.macros);if(t.colorIsTextColor){this.gullet.macros["\\color"]="\\textcolor"}this.settings=t;this.leftrightDepth=0}var c=u.ParseNode;function v(e,t,r){this.result=e;this.isFunction=t;this.token=r}p.prototype.expect=function(e,t){if(this.nextToken.text!==e){throw new h("Expected '"+e+"', got '"+this.nextToken.text+"'",this.nextToken)}if(t!==false){this.consume()}};p.prototype.consume=function(){this.nextToken=this.gullet.get(this.mode==="math")};p.prototype.switchMode=function(e){this.gullet.unget(this.nextToken);this.mode=e;this.consume()};p.prototype.parse=function(){this.mode="math";this.consume();var e=this.parseInput();return e};p.prototype.parseInput=function(){var e=this.parseExpression(false);this.expect("EOF",false);return e};var f=["}","\\end","\\right","&","\\\\","\\cr"];p.prototype.parseExpression=function(e,t){var r=[];while(true){var i=this.nextToken;if(f.indexOf(i.text)!==-1){break}if(t&&i.text===t){break}if(e&&a[i.text]&&a[i.text].infix){break}var n=this.parseAtom();if(!n){if(!this.settings.throwOnError&&i.text[0]==="\\"){var o=this.handleUnsupportedCmd();r.push(o);continue}break}r.push(n)}return this.handleInfixNodes(r)};p.prototype.handleInfixNodes=function(e){var t=-1;var r=void 0;for(var a=0;a<e.length;a++){var i=e[a];if(i.type==="infix"){if(t!==-1){throw new h("only one infix operator per group",i.value.token)}t=a;r=i.value.replaceWith}}if(t!==-1){var n=void 0;var o=void 0;var s=e.slice(0,t);var l=e.slice(t+1);if(s.length===1&&s[0].type==="ordgroup"){n=s[0]}else{n=new c("ordgroup",s,this.mode)}if(l.length===1&&l[0].type==="ordgroup"){o=l[0]}else{o=new c("ordgroup",l,this.mode)}var u=this.callFunction(r,[n,o],null);return[new c(u.type,u,this.mode)]}else{return e}};var m=1;p.prototype.handleSupSubscript=function(e){var t=this.nextToken;var r=t.text;this.consume();var i=this.parseGroup();if(!i){if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){return this.handleUnsupportedCmd()}else{throw new h("Expected group after '"+r+"'",t)}}else if(i.isFunction){var n=a[i.result].greediness;if(n>m){return this.parseFunction(i)}else{throw new h("Got function '"+i.result+"' with no arguments "+"as "+e,t)}}else{return i.result}};p.prototype.handleUnsupportedCmd=function(){var e=this.nextToken.text;var t=[];for(var r=0;r<e.length;r++){t.push(new c("textord",e[r],"text"))}var a=new c("text",{body:t,type:"text"},this.mode);var i=new c("color",{color:this.settings.errorColor,value:[a],type:"color"},this.mode);this.consume();return i};p.prototype.parseAtom=function(){var e=this.parseImplicitGroup();if(this.mode==="text"){return e}var t=void 0;var r=void 0;while(true){var a=this.nextToken;if(a.text==="\\limits"||a.text==="\\nolimits"){if(!e||e.type!=="op"){throw new h("Limit controls must follow a math operator",a)}else{var i=a.text==="\\limits";e.value.limits=i;e.value.alwaysHandleSupSub=true}this.consume()}else if(a.text==="^"){if(t){throw new h("Double superscript",a)}t=this.handleSupSubscript("superscript")}else if(a.text==="_"){if(r){throw new h("Double subscript",a)}r=this.handleSupSubscript("subscript")}else if(a.text==="'"){if(t){throw new h("Double superscript",a)}var n=new c("textord","\\prime",this.mode);var o=[n];this.consume();while(this.nextToken.text==="'"){o.push(n);this.consume()}if(this.nextToken.text==="^"){o.push(this.handleSupSubscript("superscript"))}t=new c("ordgroup",o,this.mode)}else{break}}if(t||r){return new c("supsub",{base:e,sup:t,sub:r},this.mode)}else{return e}};var d=["\\tiny","\\sixptsize","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"];var g=["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"];var y={"\\rm":"mathrm","\\sf":"mathsf","\\tt":"mathtt","\\bf":"mathbf","\\it":"mathit"};p.prototype.parseImplicitGroup=function(){var e=this.parseSymbol();if(e==null){return this.parseFunction()}var t=e.result;if(t==="\\left"){var r=this.parseFunction(e);++this.leftrightDepth;var a=this.parseExpression(false);--this.leftrightDepth;this.expect("\\right",false);var n=this.parseFunction();return new c("leftright",{body:a,left:r.value.value,right:n.value.value},this.mode)}else if(t==="\\begin"){var o=this.parseFunction(e);var l=o.value.name;if(!i.hasOwnProperty(l)){throw new h("No such environment: "+l,o.value.nameGroup)}var u=i[l];var p=this.parseArguments("\\begin{"+l+"}",u);var v={mode:this.mode,envName:l,parser:this,positions:p.pop()};var f=u.handler(v,p);this.expect("\\end",false);var m=this.nextToken;var x=this.parseFunction();if(x.value.name!==l){throw new h("Mismatch: \\begin{"+l+"} matched "+"by \\end{"+x.value.name+"}",m)}f.position=x.position;return f}else if(s.contains(d,t)){this.consumeSpaces();var b=this.parseExpression(false);return new c("sizing",{size:s.indexOf(d,t)+1,value:b},this.mode)}else if(s.contains(g,t)){this.consumeSpaces();var w=this.parseExpression(true);return new c("styling",{style:t.slice(1,t.length-5),value:w},this.mode)}else if(t in y){var k=y[t];this.consumeSpaces();var z=this.parseExpression(true);if(k.slice(0,4)==="text"){return new c("text",{style:k,body:new c("ordgroup",z,this.mode)},this.mode)}else{return new c("font",{font:k,body:new c("ordgroup",z,this.mode)},this.mode)}}else if(t==="\\color"){var M=this.parseColorGroup(false);if(!M){throw new h("\\color not followed by color")}var S=this.parseExpression(true);return new c("color",{type:"color",color:M.result.value,value:S},this.mode)}else if(t==="$"){if(this.mode==="math"){throw new h("$ within math mode")}this.consume();var A=this.mode;this.switchMode("math");var N=this.parseExpression(false,"$");this.expect("$",true);this.switchMode(A);return new c("styling",{style:"text",value:N},"math")}else{return this.parseFunction(e)}};p.prototype.parseFunction=function(e){if(!e){e=this.parseGroup()}if(e){if(e.isFunction){var t=e.result;var r=a[t];if(this.mode==="text"&&!r.allowedInText){throw new h("Can't use function '"+t+"' in text mode",e.token)}var i=this.parseArguments(t,r);var n=e.token;var o=this.callFunction(t,i,i.pop(),n);return new c(o.type,o,this.mode)}else{return e.result}}else{return null}};p.prototype.callFunction=function(e,t,r,i){var n={funcName:e,parser:this,positions:r,token:i};return a[e].handler(n,t)};p.prototype.parseArguments=function(e,t){var r=t.numArgs+t.numOptionalArgs;if(r===0){return[[this.pos]]}var i=t.greediness;var n=[this.pos];var o=[];for(var s=0;s<r;s++){var l=this.nextToken;var u=t.argTypes&&t.argTypes[s];var p=void 0;if(s<t.numOptionalArgs){if(u){p=this.parseGroupOfType(u,true)}else{p=this.parseGroup(true)}if(!p){o.push(null);n.push(this.pos);continue}}else{if(u){p=this.parseGroupOfType(u)}else{p=this.parseGroup()}if(!p){if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){p=new v(this.handleUnsupportedCmd(this.nextToken.text),false)}else{throw new h("Expected group after '"+e+"'",l)}}}var c=void 0;if(p.isFunction){var f=a[p.result].greediness;if(f>i){c=this.parseFunction(p)}else{throw new h("Got function '"+p.result+"' as "+"argument to '"+e+"'",l)}}else{c=p.result}o.push(c);n.push(this.pos)}o.push(n);return o};p.prototype.parseGroupOfType=function(e,t){var r=this.mode;if(e==="original"){e=r}if(e==="color"){return this.parseColorGroup(t)}if(e==="size"){return this.parseSizeGroup(t)}if(e==="string"){var a=this.parseStringGroup("string",t);return new v(a.text,false)}this.switchMode(e);if(e==="text"){this.consumeSpaces()}var i=this.parseGroup(t);this.switchMode(r);return i};p.prototype.consumeSpaces=function(){while(this.nextToken.text===" "){this.consume()}};p.prototype.parseStringGroup=function(e,t){if(t&&this.nextToken.text!=="["){return null}var r=this.mode;this.mode="text";this.expect(t?"[":"{");var a="";var i=this.nextToken;var n=i;while(this.nextToken.text!==(t?"]":"}")){if(this.nextToken.text==="EOF"){throw new h("Unexpected end of input in "+e,i.range(this.nextToken,a))}n=this.nextToken;a+=n.text;this.consume()}this.mode=r;this.expect(t?"]":"}");return i.range(n,a)};p.prototype.parseRegexGroup=function(e,t){var r=this.mode;this.mode="text";var a=this.nextToken;var i=a;var n="";while(this.nextToken.text!=="EOF"&&e.test(n+this.nextToken.text)){i=this.nextToken;n+=i.text;this.consume()}if(n===""){throw new h("Invalid "+t+": '"+a.text+"'",a)}this.mode=r;return a.range(i,n)};p.prototype.parseColorGroup=function(e){var t=this.parseStringGroup("color",e);if(!t){return null}var r=/^(#[a-z0-9]+|[a-z]+)$/i.exec(t.text);if(!r){throw new h("Invalid color: '"+t.text+"'",t)}return new v(new c("color",r[0],this.mode),false)};p.prototype.parseSizeGroup=function(e){var t=void 0;if(!e&&this.nextToken.text!=="{"){t=this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,"size")}else{t=this.parseStringGroup("size",e)}if(!t){return null}var r=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t.text);if(!r){throw new h("Invalid size: '"+t.text+"'",t)}var a={number:+(r[1]+r[2]),unit:r[3]};if(a.unit!=="em"&&a.unit!=="ex"&&a.unit!=="mu"){throw new h("Invalid unit: '"+a.unit+"'",t)}return new v(new c("color",a,this.mode),false)};p.prototype.parseGroup=function(e){var t=this.nextToken;if(this.nextToken.text===(e?"[":"{")){this.consume();var r=this.parseExpression(false,e?"]":null);var a=this.nextToken;this.expect(e?"]":"}");if(this.mode==="text"){this.formLigatures(r)}return new v(new c("ordgroup",r,this.mode,t,a),false)}else{return e?null:this.parseSymbol()}};p.prototype.formLigatures=function(e){var t=e.length-1;for(var r=0;r<t;++r){var a=e[r];var i=a.value;if(i==="-"&&e[r+1].value==="-"){if(r+1<t&&e[r+2].value==="-"){e.splice(r,3,new c("textord","---","text",a,e[r+2]));t-=2}else{e.splice(r,2,new c("textord","--","text",a,e[r+1]));t-=1}}if((i==="'"||i==="`")&&e[r+1].value===i){e.splice(r,2,new c("textord",i+i,"text",a,e[r+1]));t-=1}}};p.prototype.parseSymbol=function(){var e=this.nextToken;if(a[e.text]){this.consume();return new v(e.text,true,e)}else if(o[this.mode][e.text]){this.consume();return new v(new c(o[this.mode][e.text].group,e.text,this.mode,e),false,e)}else if(this.mode==="text"&&l.test(e.text)){this.consume();return new v(new c("textord",e.text,this.mode,e),false,e)}else if(e.text==="$"){return new v(e.text,false,e)}else{return null}};p.prototype.ParseNode=c;t.exports=p},{"./MacroExpander":8,"./ParseError":10,"./environments":20,"./functions":23,"./parseData":26,"./symbols":29,"./unicodeRegexes":30,"./utils":31}],12:[function(e,t,r){"use strict";var a=e("./utils");function i(e){e=e||{};this.displayMode=a.deflt(e.displayMode,false);this.throwOnError=a.deflt(e.throwOnError,true);this.errorColor=a.deflt(e.errorColor,"#cc0000");this.macros=e.macros||{};this.colorIsTextColor=a.deflt(e.colorIsTextColor,false)}t.exports=i},{"./utils":31}],13:[function(e,t,r){"use strict";function a(e,t,r){this.id=e;this.size=t;this.cramped=r}a.prototype.sup=function(){return c[v[this.id]]};a.prototype.sub=function(){return c[f[this.id]]};a.prototype.fracNum=function(){return c[m[this.id]]};a.prototype.fracDen=function(){return c[d[this.id]]};a.prototype.cramp=function(){return c[g[this.id]]};a.prototype.text=function(){return c[y[this.id]]};a.prototype.isTight=function(){return this.size>=2};var i=0;var n=1;var o=2;var s=3;var l=4;var u=5;var h=6;var p=7;var c=[new a(i,0,false),new a(n,0,true),new a(o,1,false),new a(s,1,true),new a(l,2,false),new a(u,2,true),new a(h,3,false),new a(p,3,true)];var v=[l,u,l,u,h,p,h,p];var f=[u,u,u,u,p,p,p,p];var m=[o,s,l,u,h,p,h,p];var d=[s,s,u,u,p,p,p,p];var g=[n,n,s,s,u,u,p,p];var y=[i,n,o,s,o,s,o,s];t.exports={DISPLAY:c[i],TEXT:c[o],SCRIPT:c[l],SCRIPTSCRIPT:c[h]}},{}],14:[function(e,t,r){"use strict";var a=e("./domTree");var i=e("./fontMetrics");var n=e("./symbols");var o=e("./utils");var s=["\\imath","\\jmath","\\pounds"];var l=function e(t,r,a){if(n[a][t]&&n[a][t].replace){t=n[a][t].replace}return{value:t,metrics:i.getCharacterMetrics(t,r)}};var u=function e(t,r,i,n,o){var s=l(t,r,i);var u=s.metrics;t=s.value;var h=void 0;if(u){var p=u.italic;if(i==="text"){p=0}h=new a.symbolNode(t,u.height,u.depth,p,u.skew,o)}else{typeof console!=="undefined"&&console.warn("No character metrics for '"+t+"' in style '"+r+"'");h=new a.symbolNode(t,0,0,0,0,o)}if(n){h.maxFontSize=n.sizeMultiplier;if(n.style.isTight()){h.classes.push("mtight")}if(n.getColor()){h.style.color=n.getColor()}}return h};var h=function e(t,r,a,i){if(t==="\\"||n[r][t].font==="main"){return u(t,"Main-Regular",r,a,i)}else{return u(t,"AMS-Regular",r,a,i.concat(["amsrm"]))}};var p=function e(t,r,a,i,o){if(o==="mathord"){var s=c(t,r,a,i);return u(t,s.fontName,r,a,i.concat([s.fontClass]))}else if(o==="textord"){var l=n[r][t]&&n[r][t].font;if(l==="ams"){return u(t,"AMS-Regular",r,a,i.concat(["amsrm"]))}else{return u(t,"Main-Regular",r,a,i.concat(["mathrm"]))}}else{throw new Error("unexpected type: "+o+" in mathDefault")}};var c=function e(t,r,a,i){if(/[0-9]/.test(t.charAt(0))||o.contains(s,t)){return{fontName:"Main-Italic",fontClass:"mainit"}}else{return{fontName:"Math-Italic",fontClass:"mathit"}}};var v=function e(t,r,a){var i=t.mode;var n=t.value;var h=["mord"];var v=r.font;if(v){var f=void 0;if(v==="mathit"||o.contains(s,n)){f=c(n,i,r,h)}else{f=w[v]}if(l(n,f.fontName,i).metrics){return u(n,f.fontName,i,r,h.concat([f.fontClass||v]))}else{return p(n,i,r,h,a)}}else{return p(n,i,r,h,a)}};var f=function e(t){var r=0;var a=0;var i=0;if(t.children){for(var n=0;n<t.children.length;n++){if(t.children[n].height>r){r=t.children[n].height}if(t.children[n].depth>a){a=t.children[n].depth}if(t.children[n].maxFontSize>i){i=t.children[n].maxFontSize}}}t.height=r;t.depth=a;t.maxFontSize=i};var m=function e(t,r,i){var n=new a.span(t,r,i);f(n);return n};var d=function e(t,r){t.children=r.concat(t.children);f(t)};var g=function e(t,r){var i=new a.documentFragment(t,r);f(i);return i};var y=function e(t,r){var i=m([],[new a.symbolNode("\u200b")]);i.style.fontSize=r+"em";var n=m(["fontsize-ensurer"].concat(t.baseSizingClasses()),[i]);return n};var x=function e(t,r,i,n){var o=void 0;var s=void 0;var l=void 0;if(r==="individualShift"){var u=t;t=[u[0]];o=-u[0].shift-u[0].elem.depth;s=o;for(l=1;l<u.length;l++){var h=-u[l].shift-s-u[l].elem.depth;var p=h-(u[l-1].elem.height+u[l-1].elem.depth);s=s+h;t.push({type:"kern",size:p});t.push(u[l])}}else if(r==="top"){var c=i;for(l=0;l<t.length;l++){if(t[l].type==="kern"){c-=t[l].size}else{c-=t[l].elem.height+t[l].elem.depth}}o=c}else if(r==="bottom"){o=-i}else if(r==="shift"){o=-t[0].elem.depth-i}else if(r==="firstBaseline"){o=-t[0].elem.depth}else{o=0}var v=0;for(l=0;l<t.length;l++){if(t[l].type==="elem"){v=Math.max(v,t[l].elem.maxFontSize)}}var f=y(n,v);var d=[];s=o;for(l=0;l<t.length;l++){if(t[l].type==="kern"){s+=t[l].size}else{var g=t[l].elem;var x=-g.depth-s;s+=g.height+g.depth;var b=m([],[f,g]);b.height-=x;b.depth+=x;b.style.top=x+"em";d.push(b)}}var w=m(["baseline-fix"],[f,new a.symbolNode("\u200b")]);d.push(w);var k=m(["vlist"],d);k.height=Math.max(s,k.height);k.depth=Math.max(-o,k.depth);return k};var b={"\\qquad":{size:"2em",className:"qquad"},"\\quad":{size:"1em",className:"quad"},"\\enspace":{size:"0.5em",className:"enspace"},"\\;":{size:"0.277778em",className:"thickspace"},"\\:":{size:"0.22222em",className:"mediumspace"},"\\,":{size:"0.16667em",className:"thinspace"},"\\!":{size:"-0.16667em",className:"negativethinspace"}};var w={mathbf:{variant:"bold",fontName:"Main-Bold"},mathrm:{variant:"normal",fontName:"Main-Regular"},textit:{variant:"italic",fontName:"Main-Italic"},mathbb:{variant:"double-struck",fontName:"AMS-Regular"},mathcal:{variant:"script",fontName:"Caligraphic-Regular"},mathfrak:{variant:"fraktur",fontName:"Fraktur-Regular"},mathscr:{variant:"script",fontName:"Script-Regular"},mathsf:{variant:"sans-serif",fontName:"SansSerif-Regular"},mathtt:{variant:"monospace",fontName:"Typewriter-Regular"}};t.exports={fontMap:w,makeSymbol:u,mathsym:h,makeSpan:m,makeFragment:g,makeVList:x,makeOrd:v,prependChildren:d,spacingFunctions:b}},{"./domTree":19,"./fontMetrics":21,"./symbols":29,"./utils":31}],15:[function(e,t,r){"use strict";var a=e("babel-runtime/core-js/json/stringify");var i=n(a);function n(e){return e&&e.__esModule?e:{default:e}}var o=e("./ParseError");var s=e("./Style");var l=e("./buildCommon");var u=e("./delimiter");var h=e("./domTree");var p=e("./utils");var c=e("./stretchy");var v=l.makeSpan;var f=function e(t){return t instanceof h.span&&t.classes[0]==="mspace"};var m=function e(t){return t&&t.classes[0]==="mbin"};var d=function e(t,r){if(t){return p.contains(["mbin","mopen","mrel","mop","mpunct"],t.classes[0])}else{return r}};var g=function e(t,r){if(t){return p.contains(["mrel","mclose","mpunct"],t.classes[0])}else{return r}};var y=function e(t,r){var a=r;while(a<t.length&&f(t[a])){a++}if(a===r){return null}else{return t.splice(r,a-r)}};var x=function e(t,r,a){var i=[];for(var n=0;n<t.length;n++){var o=t[n];var s=q(o,r);if(s instanceof h.documentFragment){Array.prototype.push.apply(i,s.children)}else{i.push(s)}}for(var u=0;u<i.length;u++){var p=y(i,u);if(p){if(u<i.length){if(i[u]instanceof h.symbolNode){i[u]=v([].concat(i[u].classes),[i[u]])}l.prependChildren(i[u],p)}else{Array.prototype.push.apply(i,p);break}}}for(var c=0;c<i.length;c++){var f=1;var x=1;while(i[c-f]&&i[c-f].classes[0]==="cursor"){f++}while(i[c+x]&&i[c+x].classes[0]==="cursor"){x++}if(m(i[c])&&(d(i[c-f],a)||g(i[c+x],a))){i[c].classes[0]="mord"}}return i};var b=function e(t){if(t instanceof h.documentFragment){if(t.children.length){return e(t.children[t.children.length-1])}}else{if(p.contains(["mord","mop","mbin","mrel","mopen","mclose","mpunct","minner"],t.classes[0])){return t.classes[0]}}return null};var w=function e(t,r){if(!t.value.base){return false}else{var a=t.value.base;if(a.type==="op"){return a.value.limits&&(r.style.size===s.DISPLAY.size||a.value.alwaysHandleSupSub)}else if(a.type==="accent"){return z(a.value.base)}else if(a.type==="horizBrace"){var i=t.value.sub?false:true;return i===a.value.isOver}else{return null}}};var k=function e(t){if(!t){return false}else if(t.type==="ordgroup"){if(t.value.length===1){return e(t.value[0])}else{return t}}else if(t.type==="color"){if(t.value.value.length===1){return e(t.value.value[0])}else{return t}}else if(t.type==="font"){return e(t.value.body)}else{return t}};var z=function e(t){var r=k(t);return r.type==="mathord"||r.type==="textord"||r.type==="bin"||r.type==="rel"||r.type==="inner"||r.type==="open"||r.type==="close"||r.type==="punct"};var M=function e(t,r){var a=["nulldelimiter"].concat(t.baseSizingClasses());return v(r.concat(a))};var S={};S.mathord=function(e,t){return l.makeOrd(e,t,"mathord")};S.textord=function(e,t){return l.makeOrd(e,t,"textord")};S.bin=function(e,t){return l.mathsym(e.value,e.mode,t,["mbin"])};S.rel=function(e,t){return l.mathsym(e.value,e.mode,t,["mrel"])};S.open=function(e,t){return l.mathsym(e.value,e.mode,t,["mopen"])};S.close=function(e,t){return l.mathsym(e.value,e.mode,t,["mclose"])};S.inner=function(e,t){return l.mathsym(e.value,e.mode,t,["minner"])};S.punct=function(e,t){return l.mathsym(e.value,e.mode,t,["mpunct"])};S.ordgroup=function(e,t){return v(["mord"],x(e.value,t,true),t)};S.text=function(e,t){var r=t.withFont(e.value.style);var a=x(e.value.body,r,true);for(var i=0;i<a.length-1;i++){if(a[i].tryCombine(a[i+1])){a.splice(i+1,1);i--}}return v(["mord","text"],a,r)};S.xmlClass=function(e,t,r){var a=x(e.value.value,t,r);return new l.makeFragment(a,[e.value.cl])};S.color=function(e,t){var r=x(e.value.value,t.withColor(e.value.color),false);return new l.makeFragment(r)};S.supsub=function(e,t){if(w(e,t)){return S[e.value.base.type](e,t)}var r=q(e.value.base,t);var a=void 0;var i=void 0;var n=t.fontMetrics();var o=void 0;var u=0;var p=0;if(e.value.sup){o=t.havingStyle(t.style.sup());a=q(e.value.sup,o,t);if(!z(e.value.base)){u=r.height-o.fontMetrics().supDrop*o.sizeMultiplier/t.sizeMultiplier}}if(e.value.sub){o=t.havingStyle(t.style.sub());i=q(e.value.sub,o,t);if(!z(e.value.base)){p=r.depth+o.fontMetrics().subDrop*o.sizeMultiplier/t.sizeMultiplier}}var c=void 0;if(t.style===s.DISPLAY){c=n.sup1}else if(t.style.cramped){c=n.sup3}else{c=n.sup2}var f=t.sizeMultiplier;var m=.5/n.ptPerEm/f+"em";var d=void 0;if(!e.value.sup){p=Math.max(p,n.sub1,i.height-.8*n.xHeight);d=l.makeVList([{type:"elem",elem:i}],"shift",p,t);d.children[0].style.marginRight=m;if(r instanceof h.symbolNode){d.children[0].style.marginLeft=-r.italic+"em"}}else if(!e.value.sub){u=Math.max(u,c,a.depth+.25*n.xHeight);d=l.makeVList([{type:"elem",elem:a}],"shift",-u,t);d.children[0].style.marginRight=m}else{u=Math.max(u,c,a.depth+.25*n.xHeight);p=Math.max(p,n.sub2);var g=n.defaultRuleThickness;if(u-a.depth-(i.height-p)<4*g){p=4*g-(u-a.depth)+i.height;var y=.8*n.xHeight-(u-a.depth);if(y>0){u+=y;p-=y}}d=l.makeVList([{type:"elem",elem:i,shift:p},{type:"elem",elem:a,shift:-u}],"individualShift",null,t);if(r instanceof h.symbolNode){d.children[0].style.marginLeft=-r.italic+"em"}d.children[0].style.marginRight=m;d.children[1].style.marginRight=m}var x=b(r)||"mord";return v([x],[r,v(["msupsub"],[d])],t)};S.genfrac=function(e,t){var r=t.style;if(e.value.size==="display"){r=s.DISPLAY}else if(e.value.size==="text"){r=s.TEXT}var a=r.fracNum();var i=r.fracDen();var n=void 0;n=t.havingStyle(a);var o=q(e.value.numer,n,t);n=t.havingStyle(i);var h=q(e.value.denom,n,t);var p=void 0;if(e.value.hasBarLine){p=N("frac-line",t)}else{p=null}var c=p?p.height:0;var f=void 0;var m=void 0;var d=void 0;if(r.size===s.DISPLAY.size){f=t.fontMetrics().num1;if(c>0){m=3*c}else{m=7*t.fontMetrics().defaultRuleThickness}d=t.fontMetrics().denom1}else{if(c>0){f=t.fontMetrics().num2;m=c}else{f=t.fontMetrics().num3;m=3*t.fontMetrics().defaultRuleThickness;
}d=t.fontMetrics().denom2}var g=void 0;if(c===0){var y=f-o.depth-(h.height-d);if(y<m){f+=.5*(m-y);d+=.5*(m-y)}g=l.makeVList([{type:"elem",elem:h,shift:d},{type:"elem",elem:o,shift:-f}],"individualShift",null,t)}else{var x=t.fontMetrics().axisHeight;if(f-o.depth-(x+.5*c)<m){f+=m-(f-o.depth-(x+.5*c))}if(x-.5*c-(h.height-d)<m){d+=m-(x-.5*c-(h.height-d))}var b=-(x-.5*c);g=l.makeVList([{type:"elem",elem:h,shift:d},{type:"elem",elem:p,shift:b},{type:"elem",elem:o,shift:-f}],"individualShift",null,t)}n=t.havingStyle(r);g.height*=n.sizeMultiplier/t.sizeMultiplier;g.depth*=n.sizeMultiplier/t.sizeMultiplier;var w=void 0;if(r.size===s.DISPLAY.size){w=t.fontMetrics().delim1}else{w=t.fontMetrics().delim2}var k=void 0;var z=void 0;if(e.value.leftDelim==null){k=M(t,["mopen"])}else{k=u.customSizedDelim(e.value.leftDelim,w,true,t.havingStyle(r),e.mode,["mopen"])}if(e.value.rightDelim==null){z=M(t,["mclose"])}else{z=u.customSizedDelim(e.value.rightDelim,w,true,t.havingStyle(r),e.mode,["mclose"])}return v(["mord"].concat(n.sizingClasses(t)),[k,v(["mfrac"],[g]),z],t)};var A=function e(t,r){var a=t.number;if(t.unit==="ex"){a*=r.fontMetrics().emPerEx}else if(t.unit==="mu"){a/=18}return a};S.array=function(e,t){var r=void 0;var a=void 0;var i=e.value.body.length;var n=0;var s=new Array(i);var u=1/t.fontMetrics().ptPerEm;var h=5*u;var c=12*u;var f=3*u;var m=p.deflt(e.value.arraystretch,1);var d=m*c;var g=.7*d;var y=.3*d;var x=0;for(r=0;r<e.value.body.length;++r){var b=e.value.body[r];var w=g;var k=y;if(n<b.length){n=b.length}var z=new Array(b.length);for(a=0;a<b.length;++a){var M=q(b[a],t);if(k<M.depth){k=M.depth}if(w<M.height){w=M.height}z[a]=M}var S=0;if(e.value.rowGaps[r]){S=A(e.value.rowGaps[r].value,t);if(S>0){S+=y;if(k<S){k=S}S=0}}if(e.value.addJot){k+=f}z.height=w;z.depth=k;x+=w;z.pos=x;x+=k+S;s[r]=z}var N=x/2+t.fontMetrics().axisHeight;var T=e.value.cols||[];var C=[];var E=void 0;var O=void 0;for(a=0,O=0;a<n||O<T.length;++a,++O){var R=T[O]||{};var L=true;while(R.type==="separator"){if(!L){E=v(["arraycolsep"],[]);E.style.width=t.fontMetrics().doubleRuleSep+"em";C.push(E)}if(R.separator==="|"){var D=v(["vertical-separator"],[]);D.style.height=x+"em";D.style.verticalAlign=-(x-N)+"em";C.push(D)}else{throw new o("Invalid separator type: "+R.separator)}O++;R=T[O]||{};L=false}if(a>=n){continue}var P=void 0;if(a>0||e.value.hskipBeforeAndAfter){P=p.deflt(R.pregap,h);if(P!==0){E=v(["arraycolsep"],[]);E.style.width=P+"em";C.push(E)}}var B=[];for(r=0;r<i;++r){var F=s[r];var I=F[a];if(!I){continue}var V=F.pos-N;I.depth=F.depth;I.height=F.height;B.push({type:"elem",elem:I,shift:V})}B=l.makeVList(B,"individualShift",null,t);B=v(["col-align-"+(R.align||"c")],[B]);C.push(B);if(a<n-1||e.value.hskipBeforeAndAfter){P=p.deflt(R.postgap,h);if(P!==0){E=v(["arraycolsep"],[]);E.style.width=P+"em";C.push(E)}}}s=v(["mtable"],C);return v(["mord"],[s],t)};S.spacing=function(e,t){if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){if(e.mode==="text"){return l.makeOrd(e,t,"textord")}else{return v(["mspace"],[l.mathsym(e.value,e.mode,t)],t)}}else{return v(["mspace",l.spacingFunctions[e.value].className],[],t)}};S.llap=function(e,t){var r=v(["inner"],[q(e.value.body,t)]);var a=v(["fix"],[]);return v(["mord","llap"],[r,a],t)};S.rlap=function(e,t){var r=v(["inner"],[q(e.value.body,t)]);var a=v(["fix"],[]);return v(["mord","rlap"],[r,a],t)};S.op=function(e,t){var r=void 0;var a=void 0;var i=false;if(e.type==="supsub"){r=e.value.sup;a=e.value.sub;e=e.value.base;i=true}var n=t.style;var o=["\\smallint"];var u=false;if(n.size===s.DISPLAY.size&&e.value.symbol&&!p.contains(o,e.value.body)){u=true}var c=void 0;if(e.value.symbol){var f=u?"Size2-Regular":"Size1-Regular";c=l.makeSymbol(e.value.body,f,"math",t,["mop","op-symbol",u?"large-op":"small-op"])}else if(e.value.value){var m=x(e.value.value,t,true);if(m.length===1&&m[0]instanceof h.symbolNode){c=m[0];c.classes[0]="mop"}else{c=v(["mop"],m,t)}}else{var d=[];for(var g=1;g<e.value.body.length;g++){d.push(l.mathsym(e.value.body[g],e.mode))}c=v(["mop"],d,t)}var y=0;var b=0;if(c instanceof h.symbolNode){y=(c.height-c.depth)/2-t.fontMetrics().axisHeight;b=c.italic}if(i){c=v([],[c]);var w=void 0;var k=void 0;var z=void 0;var M=void 0;var S=void 0;if(r){S=t.havingStyle(n.sup());w=q(r,S,t);k=Math.max(t.fontMetrics().bigOpSpacing1,t.fontMetrics().bigOpSpacing3-w.depth)}if(a){S=t.havingStyle(n.sub());z=q(a,S,t);M=Math.max(t.fontMetrics().bigOpSpacing2,t.fontMetrics().bigOpSpacing4-z.height)}var A=void 0;var N=void 0;var T=void 0;if(!r){N=c.height-y;A=l.makeVList([{type:"kern",size:t.fontMetrics().bigOpSpacing5},{type:"elem",elem:z},{type:"kern",size:M},{type:"elem",elem:c}],"top",N,t);A.children[0].style.marginLeft=-b+"em"}else if(!a){T=c.depth+y;A=l.makeVList([{type:"elem",elem:c},{type:"kern",size:k},{type:"elem",elem:w},{type:"kern",size:t.fontMetrics().bigOpSpacing5}],"bottom",T,t);A.children[1].style.marginLeft=b+"em"}else if(!r&&!a){return c}else{T=t.fontMetrics().bigOpSpacing5+z.height+z.depth+M+c.depth+y;A=l.makeVList([{type:"kern",size:t.fontMetrics().bigOpSpacing5},{type:"elem",elem:z},{type:"kern",size:M},{type:"elem",elem:c},{type:"kern",size:k},{type:"elem",elem:w},{type:"kern",size:t.fontMetrics().bigOpSpacing5}],"bottom",T,t);A.children[0].style.marginLeft=-b+"em";A.children[2].style.marginLeft=b+"em"}return v(["mop","op-limits"],[A],t)}else{if(y){c.style.position="relative";c.style.top=y+"em"}return c}};S.mod=function(e,t){var r=[];if(e.value.modType==="bmod"){if(!t.style.isTight()){r.push(v(["mspace","negativemediumspace"],[],t))}r.push(v(["mspace","thickspace"],[],t))}else if(t.style.size===s.DISPLAY.size){r.push(v(["mspace","quad"],[],t))}else if(e.value.modType==="mod"){r.push(v(["mspace","twelvemuspace"],[],t))}else{r.push(v(["mspace","eightmuspace"],[],t))}if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(l.mathsym("(",e.mode))}if(e.value.modType!=="pod"){var a=[l.mathsym("m",e.mode),l.mathsym("o",e.mode),l.mathsym("d",e.mode)];if(e.value.modType==="bmod"){r.push(v(["mbin"],a,t));r.push(v(["mspace","thickspace"],[],t));if(!t.style.isTight()){r.push(v(["mspace","negativemediumspace"],[],t))}}else{Array.prototype.push.apply(r,a);r.push(v(["mspace","sixmuspace"],[],t))}}if(e.value.value){Array.prototype.push.apply(r,x(e.value.value,t,false))}if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(l.mathsym(")",e.mode))}return l.makeFragment(r)};S.katex=function(e,t){var r=v(["k"],[l.mathsym("K",e.mode)],t);var a=v(["a"],[l.mathsym("A",e.mode)],t);a.height=(a.height+.2)*.75;a.depth=(a.height-.2)*.75;var i=v(["t"],[l.mathsym("T",e.mode)],t);var n=v(["e"],[l.mathsym("E",e.mode)],t);n.height=n.height-.2155;n.depth=n.depth+.2155;var o=v(["x"],[l.mathsym("X",e.mode)],t);return v(["mord","katex-logo"],[r,a,i,n,o],t)};var N=function e(t,r){var a=r.havingBaseStyle();var i=v([t].concat(a.sizingClasses(r)),[],r);i.height=r.fontMetrics().defaultRuleThickness/r.sizeMultiplier;i.maxFontSize=1;return i};S.overline=function(e,t){var r=q(e.value.body,t.havingCrampedStyle());var a=N("overline-line",t);var i=l.makeVList([{type:"elem",elem:r},{type:"kern",size:3*a.height},{type:"elem",elem:a},{type:"kern",size:a.height}],"firstBaseline",null,t);return v(["mord","overline"],[i],t)};S.underline=function(e,t){var r=q(e.value.body,t);var a=N("underline-line",t);var i=l.makeVList([{type:"kern",size:a.height},{type:"elem",elem:a},{type:"kern",size:3*a.height},{type:"elem",elem:r}],"top",r.height,t);return v(["mord","underline"],[i],t)};S.sqrt=function(e,t){var r=q(e.value.body,t.havingCrampedStyle());var a=N("sqrt-line",t);var i=a.height;var n=i;if(t.style.id<s.TEXT.id){n=t.fontMetrics().xHeight*t.sizeMultiplier}var o=i+n/4;var h=(r.height+r.depth+o+i)*t.sizeMultiplier;var p=v(["sqrt-sign"],[u.customSizedDelim("\\surd",h,false,t,e.mode)],t);var c=p.height+p.depth-i;if(c>r.height+r.depth+o){o=(o+c-r.height-r.depth)/2}var f=-(r.height+o+i)+p.height;p.style.top=f+"em";p.height-=f;p.depth+=f;var m=void 0;if(r.height===0&&r.depth===0){m=v()}else{m=l.makeVList([{type:"elem",elem:r},{type:"kern",size:o},{type:"elem",elem:a},{type:"kern",size:i}],"firstBaseline",null,t)}if(!e.value.index){return v(["mord","sqrt"],[p,m],t)}else{var d=t.havingStyle(s.SCRIPTSCRIPT);var g=q(e.value.index,d,t);var y=Math.max(p.height,m.height);var x=Math.max(p.depth,m.depth);var b=.6*(y-x);var w=l.makeVList([{type:"elem",elem:g}],"shift",-b,t);var k=v(["root"],[w]);return v(["mord","sqrt"],[k,p,m],t)}};function T(e,t,r){var a=x(e,t,false);var i=t.sizeMultiplier/r.sizeMultiplier;for(var n=0;n<a.length;n++){var o=p.indexOf(a[n].classes,"sizing");if(o<0){Array.prototype.push.apply(a[n].classes,t.sizingClasses(r))}else if(a[n].classes[o+1]==="reset-size"+t.size){a[n].classes[o+1]="reset-size"+r.size}a[n].height*=i;a[n].depth*=i}return l.makeFragment(a)}S.sizing=function(e,t){var r=t.havingSize(e.value.size);return T(e.value.value,r,t)};S.styling=function(e,t){var r={display:s.DISPLAY,text:s.TEXT,script:s.SCRIPT,scriptscript:s.SCRIPTSCRIPT};var a=r[e.value.style];var i=t.havingStyle(a);return T(e.value.value,i,t)};S.font=function(e,t){var r=e.value.font;return q(e.value.body,t.withFont(r))};S.delimsizing=function(e,t){var r=e.value.value;if(r==="."){return v([e.value.mclass])}return u.sizedDelim(r,e.value.size,t,e.mode,[e.value.mclass])};S.leftright=function(e,t){var r=x(e.value.body,t,true);var a=0;var i=0;var n=false;for(var o=0;o<r.length;o++){if(r[o].isMiddle){n=true}else{a=Math.max(r[o].height,a);i=Math.max(r[o].depth,i)}}a*=t.sizeMultiplier;i*=t.sizeMultiplier;var s=void 0;if(e.value.left==="."){s=M(t,["mopen"])}else{s=u.leftRightDelim(e.value.left,a,i,t,e.mode,["mopen"])}r.unshift(s);if(n){for(var h=1;h<r.length;h++){var p=r[h];if(p.isMiddle){r[h]=u.leftRightDelim(p.isMiddle.value,a,i,p.isMiddle.options,e.mode,[]);var c=y(p.children,0);if(c){l.prependChildren(r[h],c)}}}}var f=void 0;if(e.value.right==="."){f=M(t,["mclose"])}else{f=u.leftRightDelim(e.value.right,a,i,t,e.mode,["mclose"])}r.push(f);return v(["minner"],r,t)};S.cursor=function(e,t,r){var a=v(["cursor"],[],t);var i=0;var n=A(e.value.height,t);if(e.value.shift){i=A(e.value.shift,t)}i/=t.sizeMultiplier;n/=t.sizeMultiplier;a.style.marginRight="-1px";a.style.borderRight="1px solid";a.style.marginBottom=i+"em";a.style.height=n+"em";a.width=1;a.height=n+i;a.depth=-i;e.value.previous=r;return a};S.middle=function(e,t){var r=void 0;if(e.value.value==="."){r=M(t,[])}else{r=u.sizedDelim(e.value.value,1,t,e.mode,[]);r.isMiddle={value:e.value.value,options:t}}return r};S.rule=function(e,t,r){var a=v(["mord","rule"],[],t);var i=0;if(e.value.shift){i=A(e.value.shift,t)}var n=A(e.value.width,t);var o=A(e.value.height,t);i/=t.sizeMultiplier;n/=t.sizeMultiplier;o/=t.sizeMultiplier;a.style.borderRightWidth=n+"em";a.style.borderTopWidth=o+"em";a.style.bottom=i+"em";a.width=n;a.height=o+i;a.depth=-i;return a};S.kern=function(e,t){var r=v(["mord","rule"],[],t);var a=0;if(e.value.dimension){a=A(e.value.dimension,t)}a/=t.sizeMultiplier;r.style.marginLeft=a+"em";return r};S.accent=function(e,t){var r=e.value.base;var a=void 0;if(e.type==="supsub"){var i=e;e=i.value.base;r=e.value.base;i.value.base=r;a=q(i,t)}var n=q(r,t.havingCrampedStyle());var o=e.value.isShifty&&z(r);var s=0;if(o){var u=k(r);var h=q(u,t.havingCrampedStyle());s=h.skew}var p=Math.min(n.height,t.fontMetrics().xHeight);var f=void 0;if(!e.value.isStretchy){var m=l.makeSymbol(e.value.label,"Main-Regular","math",t);m.italic=0;var d=e.value.label==="\\vec"?"accent-vec":null;f=v(["accent-body",d],[v([],[m])]);f.style.marginLeft=2*s+"em";f=l.makeVList([{type:"elem",elem:n},{type:"kern",size:-p},{type:"elem",elem:f}],"firstBaseline",null,t)}else{f=c.svgSpan(e,t);if(s>0){var g="calc(100% - "+2*s+"em) 100%";f.style.backgroundSize=g}f=l.makeVList([{type:"elem",elem:n},{type:"elem",elem:f}],"firstBaseline",null,t)}var y=v(["mord","accent"],[f],t);if(a){a.children[0]=y;a.height=Math.max(y.height,a.height);a.classes[0]="mord";return a}else{return y}};S.horizBrace=function(e,t){var r=t.style;var a=e.type==="supsub";var i=void 0;var n=void 0;if(a){if(e.value.sup){n=t.havingStyle(r.sup());i=q(e.value.sup,n,t)}else{n=t.havingStyle(r.sub());i=q(e.value.sub,n,t)}e=e.value.base}var o=q(e.value.base,t.havingStyle(r.cramp()));var s=c.svgSpan(e,t);var u=void 0;if(e.value.isOver){u=l.makeVList([{type:"elem",elem:o},{type:"kern",size:.1},{type:"elem",elem:s}],"firstBaseline",null,t)}else{u=l.makeVList([{type:"elem",elem:s},{type:"kern",size:.1},{type:"elem",elem:o}],"bottom",o.depth+.1+s.height,t)}if(a){var h=v(["mord",e.value.isOver?"mover":"munder"],[u],t);if(e.value.isOver){u=l.makeVList([{type:"elem",elem:h},{type:"kern",size:.2},{type:"elem",elem:i}],"firstBaseline",null,t)}else{u=l.makeVList([{type:"elem",elem:i},{type:"kern",size:.2},{type:"elem",elem:h}],"bottom",h.depth+.2+i.height,t)}}return v(["mord",e.value.isOver?"mover":"munder"],[u],t)};S.accentUnder=function(e,t){var r=q(e.value.body,t);var a=c.svgSpan(e,t);var i=/tilde/.test(e.value.label)?.12:0;var n=l.makeVList([{type:"elem",elem:a},{type:"kern",size:i},{type:"elem",elem:r}],"bottom",a.height+i,t);return v(["mord","accentunder"],[n],t)};S.enclose=function(e,t){var r=q(e.value.body,t);var a=e.value.label.substr(1);var i=t.sizeMultiplier;var n=void 0;var o=0;var s=0;if(a==="sout"){n=v(["stretchy","sout"]);n.height=t.fontMetrics().defaultRuleThickness/i;n.maxFontSize=1;s=-.5*t.fontMetrics().xHeight}else{r.classes.push(a==="fbox"?"boxpad":"cancel-pad");var u=z(e.value.body);o=a==="fbox"?.34:u?.2:0;s=r.depth+o;n=c.encloseSpan(r,u,a,o,t)}var h=l.makeVList([{type:"elem",elem:r,shift:0},{type:"elem",elem:n,shift:s}],"individualShift",null,t);if(n.height>h.maxFontSize){h.children[1].style.top=-(r.height+o-.9/i)+"em"}if(/cancel/.test(a)){return v(["mord","cancel-lap"],[h],t)}else{return v(["mord"],[h],t)}};S.xArrow=function(e,t){var r=t.style;var a=t.havingStyle(r.sup());var i=q(e.value.body,a,t);var n=void 0;if(e.value.below){a=t.havingStyle(r.sub());n=q(e.value.below,a,t)}var o=c.svgSpan(e,t);var s=-t.fontMetrics().axisHeight+o.depth;var u=-t.fontMetrics().axisHeight-o.height-.111;var h=void 0;if(e.value.below){var p=-t.fontMetrics().axisHeight+n.height+o.height+.111;h=l.makeVList([{type:"elem",elem:i,shift:u},{type:"elem",elem:o,shift:s},{type:"elem",elem:n,shift:p}],"individualShift",null,t)}else{h=l.makeVList([{type:"elem",elem:i,shift:u},{type:"elem",elem:o,shift:s}],"individualShift",null,t)}var f=v(["mrel","x-arrow"],[h],t);f.depth=f.depth;f.height=f.height;return f};S.phantom=function(e,t){var r=x(e.value.value,t.withPhantom(),false);return new l.makeFragment(r)};S.mclass=function(e,t){var r=x(e.value.value,t,true);return v([e.value.mclass],r,t)};var q=function e(t,r,a){if(!t){return v()}if(S[t.type]){var i=S[t.type](t,r);if(a&&r.size!==a.size){i=v(r.sizingClasses(a),[i],r);var n=r.sizeMultiplier/a.sizeMultiplier;i.height*=n;i.depth*=n}return i}else{throw new o("Got group of unknown type: '"+t.type+"'")}};var C=function e(t,r){t=JSON.parse((0,i.default)(t));var a=x(t,r,true);var n=v(["base"],a,r);var o=v(["strut"]);var s=v(["strut","bottom"]);o.style.height=n.height+"em";s.style.height=n.height+n.depth+"em";s.style.verticalAlign=-n.depth+"em";var l=v(["katex-html"],[o,s,n]);l.setAttribute("aria-hidden","true");return l};t.exports=C},{"./ParseError":10,"./Style":13,"./buildCommon":14,"./delimiter":18,"./domTree":19,"./stretchy":28,"./utils":31,"babel-runtime/core-js/json/stringify":2}],16:[function(e,t,r){"use strict";var a=e("./buildCommon");var i=e("./fontMetrics");var n=e("./mathMLTree");var o=e("./ParseError");var s=e("./symbols");var l=e("./utils");var u=e("./stretchy");var h=a.makeSpan;var p=a.fontMap;var c=function e(t,r){if(s[r][t]&&s[r][t].replace){t=s[r][t].replace}return new n.TextNode(t)};var v=function e(t,r){var a=r.font;if(!a){return null}var n=t.mode;if(a==="mathit"){return"italic"}var o=t.value;if(l.contains(["\\imath","\\jmath"],o)){return null}if(s[n][o]&&s[n][o].replace){o=s[n][o].replace}var u=p[a].fontName;if(i.getCharacterMetrics(o,u)){return p[r.font].variant}return null};var f={};var m={mi:"italic",mn:"normal",mtext:"normal"};f.mathord=function(e,t){var r=new n.MathNode("mi",[c(e.value,e.mode)]);var a=v(e,t)||"italic";if(a!==m[r.type]){r.setAttribute("mathvariant",a)}return r};f.textord=function(e,t){var r=c(e.value,e.mode);var a=v(e,t)||"normal";var i=void 0;if(e.mode==="text"){i=new n.MathNode("mtext",[r])}else if(/[0-9]/.test(e.value)){i=new n.MathNode("mn",[r])}else{i=new n.MathNode("mi",[r])}if(a!==m[i.type]){i.setAttribute("mathvariant",a)}return i};f.bin=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.rel=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.open=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.close=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.inner=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.punct=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);t.setAttribute("separator","true");return t};f.ordgroup=function(e,t){var r=d(e.value,t);var a=new n.MathNode("mrow",r);return a};f.text=function(e,t){var r=e.value.body;var a=[];var i=null;for(var o=0;o<r.length;o++){var s=g(r[o],t);if(s.type==="mtext"&&i!=null){Array.prototype.push.apply(i.children,s.children)}else{a.push(s);if(s.type==="mtext"){i=s}}}if(a.length===1){return a[0]}else{return new n.MathNode("mrow",a)}};f.color=function(e,t){var r=d(e.value.value,t);var a=new n.MathNode("mstyle",r);a.setAttribute("mathcolor",e.value.color);return a};f.xmlClass=function(e,t){var r=d(e.value.value,t);var a=new n.MathNode("mstyle",r);a.setAttribute("class",e.value.cl);return a};f.supsub=function(e,t){var r=false;var a=void 0;var i=void 0;if(e.value.base){if(e.value.base.value.type==="horizBrace"){i=e.value.sup?true:false;if(i===e.value.base.value.isOver){r=true;a=e.value.base.value.isOver}}}var o=[g(e.value.base,t)];if(e.value.sub){o.push(g(e.value.sub,t))}if(e.value.sup){o.push(g(e.value.sup,t))}var s=void 0;if(r){s=a?"mover":"munder"}else if(!e.value.sub){s="msup"}else if(!e.value.sup){s="msub"}else{s="msubsup"}var l=new n.MathNode(s,o);return l};f.genfrac=function(e,t){var r=new n.MathNode("mfrac",[g(e.value.numer,t),g(e.value.denom,t)]);if(!e.value.hasBarLine){r.setAttribute("linethickness","0px")}if(e.value.leftDelim!=null||e.value.rightDelim!=null){var a=[];if(e.value.leftDelim!=null){var i=new n.MathNode("mo",[new n.TextNode(e.value.leftDelim)]);i.setAttribute("fence","true");a.push(i)}a.push(r);if(e.value.rightDelim!=null){var o=new n.MathNode("mo",[new n.TextNode(e.value.rightDelim)]);o.setAttribute("fence","true");a.push(o)}var s=new n.MathNode("mrow",a);return s}return r};f.array=function(e,t){return new n.MathNode("mtable",e.value.body.map(function(e){return new n.MathNode("mtr",e.map(function(e){return new n.MathNode("mtd",[g(e,t)])}))}))};f.sqrt=function(e,t){var r=void 0;if(e.value.index){r=new n.MathNode("mroot",[g(e.value.body,t),g(e.value.index,t)])}else{r=new n.MathNode("msqrt",[g(e.value.body,t)])}return r};f.leftright=function(e,t){var r=d(e.value.body,t);if(e.value.left!=="."){var a=new n.MathNode("mo",[c(e.value.left,e.mode)]);a.setAttribute("fence","true");r.unshift(a)}if(e.value.right!=="."){var i=new n.MathNode("mo",[c(e.value.right,e.mode)]);i.setAttribute("fence","true");r.push(i)}var o=new n.MathNode("mrow",r);return o};f.middle=function(e,t){var r=new n.MathNode("mo",[c(e.value.middle,e.mode)]);r.setAttribute("fence","true");return r};f.accent=function(e,t){var r=void 0;if(e.value.isStretchy){r=u.mathMLnode(e.value.label)}else{r=new n.MathNode("mo",[c(e.value.label,e.mode)])}var a=new n.MathNode("mover",[g(e.value.base,t),r]);a.setAttribute("accent","true");return a};f.spacing=function(e){var t=void 0;if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){t=new n.MathNode("mtext",[new n.TextNode("\xa0")])}else{t=new n.MathNode("mspace");t.setAttribute("width",a.spacingFunctions[e.value].size)}return t};f.op=function(e,t){var r=void 0;if(e.value.symbol){r=new n.MathNode("mo",[c(e.value.body,e.mode)])}else if(e.value.value){r=new n.MathNode("mo",d(e.value.value,t))}else{r=new n.MathNode("mi",[new n.TextNode(e.value.body.slice(1))])}return r};f.cursor=function(e){var t=new n.MathNode("mtext",[new n.TextNode("|")]);return t};f.mod=function(e,t){var r=[];if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(new n.MathNode("mo",[c("(",e.mode)]))}if(e.value.modType!=="pod"){r.push(new n.MathNode("mo",[c("mod",e.mode)]))}if(e.value.value){var a=new n.MathNode("mspace");a.setAttribute("width","0.333333em");r.push(a);r=r.concat(d(e.value.value,t))}if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(new n.MathNode("mo",[c(")",e.mode)]))}return new n.MathNode("mo",r)};f.katex=function(e){var t=new n.MathNode("mtext",[new n.TextNode("KaTeX")]);return t};f.font=function(e,t){var r=e.value.font;return g(e.value.body,t.withFont(r))};f.delimsizing=function(e){var t=[];if(e.value.value!=="."){t.push(c(e.value.value,e.mode))}var r=new n.MathNode("mo",t);if(e.value.mclass==="mopen"||e.value.mclass==="mclose"){r.setAttribute("fence","true")}else{r.setAttribute("fence","false")}return r};f.styling=function(e,t){var r=d(e.value.value,t);var a=new n.MathNode("mstyle",r);var i={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]};var o=i[e.value.style];a.setAttribute("scriptlevel",o[0]);a.setAttribute("displaystyle",o[1]);return a};f.sizing=function(e,t){var r=t.havingSize(e.value.size);var a=d(e.value.value,r);var i=new n.MathNode("mstyle",a);i.setAttribute("mathsize",r.sizeMultiplier+"em");return i};f.overline=function(e,t){var r=new n.MathNode("mo",[new n.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new n.MathNode("mover",[g(e.value.body,t),r]);a.setAttribute("accent","true");return a};f.underline=function(e,t){var r=new n.MathNode("mo",[new n.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new n.MathNode("munder",[g(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};f.accentUnder=function(e,t){var r=u.mathMLnode(e.value.label);var a=new n.MathNode("munder",[g(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};f.enclose=function(e,t){var r=new n.MathNode("menclose",[g(e.value.body,t)]);var a="";switch(e.value.label){case"\\bcancel":a="downdiagonalstrike";break;case"\\sout":a="horizontalstrike";break;case"\\fbox":a="box";break;default:a="updiagonalstrike"}r.setAttribute("notation",a);return r};f.horizBrace=function(e,t){var r=u.mathMLnode(e.value.label);return new n.MathNode(e.value.isOver?"mover":"munder",[g(e.value.base,t),r])};f.xArrow=function(e,t){var r=u.mathMLnode(e.value.label);var a=void 0;var i=void 0;if(e.value.body){var o=g(e.value.body,t);if(e.value.below){i=g(e.value.below,t);a=new n.MathNode("munderover",[r,i,o])}else{a=new n.MathNode("mover",[r,o])}}else if(e.value.below){i=g(e.value.below,t);a=new n.MathNode("munder",[r,i])}else{a=new n.MathNode("mover",[r])}return a};f.rule=function(e){var t=new n.MathNode("mrow");return t};f.kern=function(e){var t=new n.MathNode("mrow");return t};f.llap=function(e,t){var r=new n.MathNode("mpadded",[g(e.value.body,t)]);r.setAttribute("lspace","-1width");r.setAttribute("width","0px");return r};f.rlap=function(e,t){var r=new n.MathNode("mpadded",[g(e.value.body,t)]);r.setAttribute("width","0px");return r};f.phantom=function(e,t){var r=d(e.value.value,t);return new n.MathNode("mphantom",r)};f.mclass=function(e,t){var r=d(e.value.value,t);return new n.MathNode("mstyle",r)};var d=function e(t,r){var a=[];for(var i=0;i<t.length;i++){var n=t[i];a.push(g(n,r))}return a};var g=function e(t,r){if(!t){return new n.MathNode("mrow")}if(f[t.type]){return f[t.type](t,r)}else{throw new o("Got group of unknown type: '"+t.type+"'")}};var y=function e(t,r,a){var i=d(t,a);var o=new n.MathNode("mrow",i);var s=new n.MathNode("annotation",[new n.TextNode(r)]);s.setAttribute("encoding","application/x-tex");var l=new n.MathNode("semantics",[o,s]);var u=new n.MathNode("math",[l]);return h(["katex-mathml"],[u])};t.exports=y},{"./ParseError":10,"./buildCommon":14,"./fontMetrics":21,"./mathMLTree":25,"./stretchy":28,"./symbols":29,"./utils":31}],17:[function(e,t,r){"use strict";var a=e("./buildHTML");var i=e("./buildMathML");var n=e("./buildCommon");var o=e("./Options");var s=e("./Settings");var l=e("./Style");var u=n.makeSpan;var h=function e(t,r,n){n=n||new s({});var h=l.TEXT;if(n.displayMode){h=l.DISPLAY}var p=new o({style:h});var c=i(t,r,p);var v=a(t,p);var f=u(["katex"],[c,v]);if(n.displayMode){return u(["katex-display"],[f])}else{return f}};t.exports=h},{"./Options":9,"./Settings":12,"./Style":13,"./buildCommon":14,"./buildHTML":15,"./buildMathML":16}],18:[function(e,t,r){"use strict";var a=e("./ParseError");var i=e("./Style");var n=e("./buildCommon");var o=e("./fontMetrics");var s=e("./symbols");var l=e("./utils");var u=n.makeSpan;var h=function e(t,r){if(s.math[t]&&s.math[t].replace){return o.getCharacterMetrics(s.math[t].replace,r)}else{return o.getCharacterMetrics(t,r)}};var p=function e(t,r,a,i){var n=a.havingBaseStyle(r);var o=u((i||[]).concat(n.sizingClasses(a)),[t],a);o.height*=n.sizeMultiplier/a.sizeMultiplier;o.depth*=n.sizeMultiplier/a.sizeMultiplier;o.maxFontSize=n.sizeMultiplier;return o};var c=function e(t,r,a){var i=r.havingBaseStyle(a);var n=(1-r.sizeMultiplier/i.sizeMultiplier)*r.fontMetrics().axisHeight;t.classes.push("delimcenter");t.style.top=n+"em";t.height-=n;t.depth+=n};var v=function e(t,r,a,i,o,s){var l=n.makeSymbol(t,"Main-Regular",o,i);var u=p(l,r,i,s);if(a){c(u,i,r)}return u};var f=function e(t,r,a,i){return n.makeSymbol(t,"Size"+r+"-Regular",a,i)};var m=function e(t,r,a,n,o,s){var l=f(t,r,o,n);var h=p(u(["delimsizing","size"+r],[l],n),i.TEXT,n,s);if(a){c(h,n,i.TEXT)}return h};var d=function e(t,r,a){var i=void 0;if(r==="Size1-Regular"){i="delim-size1"}else if(r==="Size4-Regular"){i="delim-size4"}var o=u(["delimsizinginner",i],[u([],[n.makeSymbol(t,r,a)])]);return{type:"elem",elem:o}};var g=function e(t,r,a,o,s,l){var c=void 0;var v=void 0;var f=void 0;var m=void 0;c=f=m=t;v=null;var g="Size1-Regular";if(t==="\\uparrow"){f=m="\u23d0"}else if(t==="\\Uparrow"){f=m="\u2016"}else if(t==="\\downarrow"){c=f="\u23d0"}else if(t==="\\Downarrow"){c=f="\u2016"}else if(t==="\\updownarrow"){c="\\uparrow";f="\u23d0";m="\\downarrow"}else if(t==="\\Updownarrow"){c="\\Uparrow";f="\u2016";m="\\Downarrow"}else if(t==="["||t==="\\lbrack"){c="\u23a1";f="\u23a2";m="\u23a3";g="Size4-Regular"}else if(t==="]"||t==="\\rbrack"){c="\u23a4";f="\u23a5";m="\u23a6";g="Size4-Regular"}else if(t==="\\lfloor"){f=c="\u23a2";m="\u23a3";g="Size4-Regular"}else if(t==="\\lceil"){c="\u23a1";f=m="\u23a2";g="Size4-Regular"}else if(t==="\\rfloor"){f=c="\u23a5";m="\u23a6";g="Size4-Regular"}else if(t==="\\rceil"){c="\u23a4";f=m="\u23a5";g="Size4-Regular"}else if(t==="("){c="\u239b";f="\u239c";m="\u239d";g="Size4-Regular"}else if(t===")"){c="\u239e";f="\u239f";m="\u23a0";g="Size4-Regular"}else if(t==="\\{"||t==="\\lbrace"){c="\u23a7";v="\u23a8";m="\u23a9";f="\u23aa";g="Size4-Regular"}else if(t==="\\}"||t==="\\rbrace"){c="\u23ab";v="\u23ac";m="\u23ad";f="\u23aa";g="Size4-Regular"}else if(t==="\\lgroup"){c="\u23a7";m="\u23a9";f="\u23aa";g="Size4-Regular"}else if(t==="\\rgroup"){c="\u23ab";m="\u23ad";f="\u23aa";g="Size4-Regular"}else if(t==="\\lmoustache"){c="\u23a7";m="\u23ad";f="\u23aa";g="Size4-Regular"}else if(t==="\\rmoustache"){c="\u23ab";m="\u23a9";f="\u23aa";g="Size4-Regular"}else if(t==="\\surd"){c="\ue001";m="\u23b7";f="\ue000";g="Size4-Regular"}var y=h(c,g);var x=y.height+y.depth;var b=h(f,g);var w=b.height+b.depth;var k=h(m,g);var z=k.height+k.depth;var M=0;var S=1;if(v!==null){var A=h(v,g);M=A.height+A.depth;S=2}var N=x+z+M;var T=Math.ceil((r-N)/(S*w));var q=N+T*S*w;var C=o.fontMetrics().axisHeight;if(a){C*=o.sizeMultiplier}var E=q/2-C;var O=[];O.push(d(m,g,s));if(v===null){for(var R=0;R<T;R++){O.push(d(f,g,s))}}else{for(var L=0;L<T;L++){O.push(d(f,g,s))}O.push(d(v,g,s));for(var D=0;D<T;D++){O.push(d(f,g,s))}}O.push(d(c,g,s));var P=o.havingBaseStyle(i.TEXT);var B=n.makeVList(O,"bottom",E,P);return p(u(["delimsizing","mult"],[B],P),i.TEXT,o,l)};var y=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","\\surd"];var x=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache"];var b=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"];var w=[0,1.2,1.8,2.4,3];var k=function e(t,r,i,n,o){if(t==="<"||t==="\\lt"){t="\\langle"}else if(t===">"||t==="\\gt"){t="\\rangle"}if(l.contains(y,t)||l.contains(b,t)){return m(t,r,false,i,n,o)}else if(l.contains(x,t)){return g(t,w[r],false,i,n,o)}else{throw new a("Illegal delimiter: '"+t+"'")}};var z=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}];var M=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"stack"}];var S=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}];var A=function e(t){if(t.type==="small"){return"Main-Regular"}else if(t.type==="large"){return"Size"+t.size+"-Regular"}else if(t.type==="stack"){return"Size4-Regular"}};var N=function e(t,r,a,i){var n=Math.min(2,3-i.style.size);for(var o=n;o<a.length;o++){if(a[o].type==="stack"){break}var s=h(t,A(a[o]));var l=s.height+s.depth;if(a[o].type==="small"){var u=i.havingBaseStyle(a[o].style);l*=u.sizeMultiplier}if(l>r){return a[o]}}return a[a.length-1]};var T=function e(t,r,a,i,n,o){if(t==="<"||t==="\\lt"){t="\\langle"}else if(t===">"||t==="\\gt"){t="\\rangle"}var s=void 0;if(l.contains(b,t)){s=z}else if(l.contains(y,t)){s=S}else{s=M}var u=N(t,r,s,i);if(u.type==="small"){return v(t,u.style,a,i,n,o)}else if(u.type==="large"){return m(t,u.size,a,i,n,o)}else if(u.type==="stack"){return g(t,r,a,i,n,o)}};var q=function e(t,r,a,i,n,o){var s=i.fontMetrics().axisHeight*i.sizeMultiplier;var l=901;var u=5/i.fontMetrics().ptPerEm;var h=Math.max(r-s,a+s);var p=Math.max(h/500*l,2*h-u);return T(t,p,true,i,n,o)};t.exports={sizedDelim:k,customSizedDelim:T,leftRightDelim:q}},{"./ParseError":10,"./Style":13,"./buildCommon":14,"./fontMetrics":21,"./symbols":29,"./utils":31}],19:[function(e,t,r){"use strict";var a=e("./unicodeRegexes");var i=e("./utils");var n=function e(t){t=t.slice();for(var r=t.length-1;r>=0;r--){if(!t[r]){t.splice(r,1)}}return t.join(" ")};function o(e,t,r){this.classes=e||[];this.children=t||[];this.height=0;this.depth=0;this.maxFontSize=0;this.style={};this.attributes={};if(r){if(r.style.isTight()){this.classes.push("mtight")}if(r.getColor()){this.style.color=r.getColor()}}}o.prototype.setAttribute=function(e,t){this.attributes[e]=t};o.prototype.tryCombine=function(e){return false};o.prototype.toNode=function(){var e=document.createElement("span");e.className=n(this.classes);for(var t in this.style){if(Object.prototype.hasOwnProperty.call(this.style,t)){e.style[t]=this.style[t]}}for(var r in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,r)){e.setAttribute(r,this.attributes[r])}}for(var a=0;a<this.children.length;a++){e.appendChild(this.children[a].toNode())}return e};o.prototype.toMarkup=function(){var e="<span";if(this.classes.length){e+=' class="';e+=i.escape(n(this.classes));e+='"'}var t="";for(var r in this.style){if(this.style.hasOwnProperty(r)){t+=i.hyphenate(r)+":"+this.style[r]+";"}}if(t){e+=' style="'+i.escape(t)+'"'}for(var a in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,a)){e+=" "+a+'="';e+=i.escape(this.attributes[a]);e+='"'}}e+=">";for(var o=0;o<this.children.length;o++){e+=this.children[o].toMarkup();
}e+="</span>";return e};function s(e,t){this.children=e||[];this.height=0;this.depth=0;this.maxFontSize=0;if(t){for(var r=0;r<this.children.length;r++){for(var a=0;a<t.length;a++){this.children[r].classes.push(t[a])}}}this.classes=t||[]}s.prototype.toNode=function(){var e=document.createDocumentFragment();for(var t=0;t<this.children.length;t++){e.appendChild(this.children[t].toNode())}return e};s.prototype.toMarkup=function(){var e="";for(var t=0;t<this.children.length;t++){e+=this.children[t].toMarkup()}return e};var l={"\xee":"\u0131\u0302","\xef":"\u0131\u0308","\xed":"\u0131\u0301","\xec":"\u0131\u0300"};function u(e,t,r,i,n,o,s){this.value=e||"";this.height=t||0;this.depth=r||0;this.italic=i||0;this.skew=n||0;this.classes=o||[];this.style=s||{};this.maxFontSize=0;if(a.cjkRegex.test(e)){if(a.hangulRegex.test(e)){this.classes.push("hangul_fallback")}else{this.classes.push("cjk_fallback")}}if(/[\xee\xef\xed\xec]/.test(this.value)){this.value=l[this.value]}}u.prototype.tryCombine=function(e){if(!e||!(e instanceof u)||this.italic>0||n(this.classes)!==n(e.classes)||this.skew!==e.skew||this.maxFontSize!==e.maxFontSize){return false}for(var t in this.style){if(this.style.hasOwnProperty(t)&&this.style[t]!==e.style[t]){return false}}for(var r in e.style){if(e.style.hasOwnProperty(r)&&this.style[r]!==e.style[r]){return false}}this.value+=e.value;this.height=Math.max(this.height,e.height);this.depth=Math.max(this.depth,e.depth);this.italic=e.italic;return true};u.prototype.toNode=function(){var e=document.createTextNode(this.value);var t=null;if(this.italic>0){t=document.createElement("span");t.style.marginRight=this.italic+"em"}if(this.classes.length>0){t=t||document.createElement("span");t.className=n(this.classes)}for(var r in this.style){if(this.style.hasOwnProperty(r)){t=t||document.createElement("span");t.style[r]=this.style[r]}}if(t){t.appendChild(e);return t}else{return e}};u.prototype.toMarkup=function(){var e=false;var t="<span";if(this.classes.length){e=true;t+=' class="';t+=i.escape(n(this.classes));t+='"'}var r="";if(this.italic>0){r+="margin-right:"+this.italic+"em;"}for(var a in this.style){if(this.style.hasOwnProperty(a)){r+=i.hyphenate(a)+":"+this.style[a]+";"}}if(r){e=true;t+=' style="'+i.escape(r)+'"'}var o=i.escape(this.value);if(e){t+=">";t+=o;t+="</span>";return t}else{return o}};t.exports={span:o,documentFragment:s,symbolNode:u}},{"./unicodeRegexes":30,"./utils":31}],20:[function(e,t,r){"use strict";var a=e("./parseData");var i=e("./ParseError");var n=a.ParseNode;function o(e,t,r){var a=[];var o=[a];var s=[];while(true){var l=e.parseExpression(false,null);l=new n("ordgroup",l,e.mode);if(r){l=new n("styling",{style:r,value:[l]},e.mode)}a.push(l);var u=e.nextToken.text;if(u==="&"){e.consume()}else if(u==="\\end"){break}else if(u==="\\\\"||u==="\\cr"){var h=e.parseFunction();s.push(h.value.size);a=[];o.push(a)}else{throw new i("Expected & or \\\\ or \\end",e.nextToken)}}t.body=o;t.rowGaps=s;return new n(t.type,t,e.mode)}function s(e,r,a){if(typeof e==="string"){e=[e]}if(typeof r==="number"){r={numArgs:r}}var i={numArgs:r.numArgs||0,argTypes:r.argTypes,greediness:1,allowedInText:!!r.allowedInText,numOptionalArgs:r.numOptionalArgs||0,handler:a};for(var n=0;n<e.length;++n){t.exports[e[n]]=i}}function l(e){if(e.substr(0,1)==="d"){return"display"}else{return"text"}}s(["array","darray"],{numArgs:1},function(e,t){var r=t[0];r=r.value.map?r.value:[r];var a=r.map(function(e){var t=e.value;if("lcr".indexOf(t)!==-1){return{type:"align",align:t}}else if(t==="|"){return{type:"separator",separator:"|"}}throw new i("Unknown column alignment: "+e.value,e)});var n={type:"array",cols:a,hskipBeforeAndAfter:true};n=o(e.parser,n,l(e.envName));return n});s(["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix"],{},function(e){var t={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[e.envName];var r={type:"array",hskipBeforeAndAfter:false};r=o(e.parser,r,l(e.envName));if(t){r=new n("leftright",{body:[r],left:t[0],right:t[1]},e.mode)}return r});s(["cases","dcases"],{},function(e){var t={type:"array",arraystretch:1.2,cols:[{type:"align",align:"l",pregap:0,postgap:1},{type:"align",align:"l",pregap:0,postgap:0}]};t=o(e.parser,t,l(e.envName));t=new n("leftright",{body:[t],left:"\\{",right:"."},e.mode);return t});s("aligned",{},function(e){var t={type:"array",cols:[],addJot:true};t=o(e.parser,t,"display");var r=new n("ordgroup",[],e.mode);var a=0;t.value.body.forEach(function(e){for(var t=1;t<e.length;t+=2){var i=e[t].value.value[0];i.value.unshift(r)}if(a<e.length){a=e.length}});for(var i=0;i<a;++i){var s="r";var l=0;if(i%2===1){s="l"}else if(i>0){l=2}t.value.cols[i]={type:"align",align:s,pregap:l,postgap:0}}return t});s("gathered",{},function(e){var t={type:"array",cols:[{type:"align",align:"c"}],addJot:true};t=o(e.parser,t,"display");return t})},{"./ParseError":10,"./parseData":26}],21:[function(e,t,r){"use strict";var a=e("./unicodeRegexes").cjkRegex;var i={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25],defaultRuleThickness:[.04,.04,.04],bigOpSpacing1:[.111,.111,.111],bigOpSpacing2:[.166,.166,.166],bigOpSpacing3:[.2,.2,.2],bigOpSpacing4:[.6,.6,.6],bigOpSpacing5:[.1,.1,.1],ptPerEm:[10,10,10],doubleRuleSep:[.2,.2,.2]};var n=e("./fontMetricsData");var o={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xc6":"A","\xc7":"C","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xd0":"D","\xd1":"N","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xdd":"Y","\xde":"o","\xdf":"B","\xe0":"a","\xe1":"a","\xe2":"a","\xe3":"a","\xe4":"a","\xe5":"a","\xe6":"a","\xe7":"c","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xf0":"d","\xf1":"n","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xfd":"y","\xfe":"o","\xff":"y","\u0410":"A","\u0411":"B","\u0412":"B","\u0413":"F","\u0414":"A","\u0415":"E","\u0416":"K","\u0417":"3","\u0418":"N","\u0419":"N","\u041a":"K","\u041b":"N","\u041c":"M","\u041d":"H","\u041e":"O","\u041f":"N","\u0420":"P","\u0421":"C","\u0422":"T","\u0423":"y","\u0424":"O","\u0425":"X","\u0426":"U","\u0427":"h","\u0428":"W","\u0429":"W","\u042a":"B","\u042b":"X","\u042c":"B","\u042d":"3","\u042e":"X","\u042f":"R","\u0430":"a","\u0431":"b","\u0432":"a","\u0433":"r","\u0434":"y","\u0435":"e","\u0436":"m","\u0437":"e","\u0438":"n","\u0439":"n","\u043a":"n","\u043b":"n","\u043c":"m","\u043d":"n","\u043e":"o","\u043f":"n","\u0440":"p","\u0441":"c","\u0442":"o","\u0443":"y","\u0444":"b","\u0445":"x","\u0446":"n","\u0447":"n","\u0448":"w","\u0449":"w","\u044a":"a","\u044b":"m","\u044c":"a","\u044d":"e","\u044e":"m","\u044f":"r"};var s=function e(t,r){var i=t.charCodeAt(0);if(t[0]in o){i=o[t[0]].charCodeAt(0)}else if(a.test(t[0])){i="M".charCodeAt(0)}var s=n[r][i];if(s){return{depth:s[0],height:s[1],italic:s[2],skew:s[3],width:s[4]}}};var l={};var u=function e(t){var r=void 0;if(t>=5){r=0}else if(t>=3){r=1}else{r=2}if(!l[r]){var a=l[r]={};for(var n in i){if(i.hasOwnProperty(n)){a[n]=i[n][r]}}a.emPerEx=a.xHeight/a.quad}return l[r]};t.exports={getFontMetrics:u,getCharacterMetrics:s}},{"./fontMetricsData":22,"./unicodeRegexes":30}],22:[function(e,t,r){"use strict";t.exports={"AMS-Regular":{65:[0,.68889,0,0],66:[0,.68889,0,0],67:[0,.68889,0,0],68:[0,.68889,0,0],69:[0,.68889,0,0],70:[0,.68889,0,0],71:[0,.68889,0,0],72:[0,.68889,0,0],73:[0,.68889,0,0],74:[.16667,.68889,0,0],75:[0,.68889,0,0],76:[0,.68889,0,0],77:[0,.68889,0,0],78:[0,.68889,0,0],79:[.16667,.68889,0,0],80:[0,.68889,0,0],81:[.16667,.68889,0,0],82:[0,.68889,0,0],83:[0,.68889,0,0],84:[0,.68889,0,0],85:[0,.68889,0,0],86:[0,.68889,0,0],87:[0,.68889,0,0],88:[0,.68889,0,0],89:[0,.68889,0,0],90:[0,.68889,0,0],107:[0,.68889,0,0],165:[0,.675,.025,0],174:[.15559,.69224,0,0],240:[0,.68889,0,0],295:[0,.68889,0,0],710:[0,.825,0,0],732:[0,.9,0,0],770:[0,.825,0,0],771:[0,.9,0,0],989:[.08167,.58167,0,0],1008:[0,.43056,.04028,0],8245:[0,.54986,0,0],8463:[0,.68889,0,0],8487:[0,.68889,0,0],8498:[0,.68889,0,0],8502:[0,.68889,0,0],8503:[0,.68889,0,0],8504:[0,.68889,0,0],8513:[0,.68889,0,0],8592:[-.03598,.46402,0,0],8594:[-.03598,.46402,0,0],8602:[-.13313,.36687,0,0],8603:[-.13313,.36687,0,0],8606:[.01354,.52239,0,0],8608:[.01354,.52239,0,0],8610:[.01354,.52239,0,0],8611:[.01354,.52239,0,0],8619:[0,.54986,0,0],8620:[0,.54986,0,0],8621:[-.13313,.37788,0,0],8622:[-.13313,.36687,0,0],8624:[0,.69224,0,0],8625:[0,.69224,0,0],8630:[0,.43056,0,0],8631:[0,.43056,0,0],8634:[.08198,.58198,0,0],8635:[.08198,.58198,0,0],8638:[.19444,.69224,0,0],8639:[.19444,.69224,0,0],8642:[.19444,.69224,0,0],8643:[.19444,.69224,0,0],8644:[.1808,.675,0,0],8646:[.1808,.675,0,0],8647:[.1808,.675,0,0],8648:[.19444,.69224,0,0],8649:[.1808,.675,0,0],8650:[.19444,.69224,0,0],8651:[.01354,.52239,0,0],8652:[.01354,.52239,0,0],8653:[-.13313,.36687,0,0],8654:[-.13313,.36687,0,0],8655:[-.13313,.36687,0,0],8666:[.13667,.63667,0,0],8667:[.13667,.63667,0,0],8669:[-.13313,.37788,0,0],8672:[-.064,.437,0,0],8674:[-.064,.437,0,0],8705:[0,.825,0,0],8708:[0,.68889,0,0],8709:[.08167,.58167,0,0],8717:[0,.43056,0,0],8722:[-.03598,.46402,0,0],8724:[.08198,.69224,0,0],8726:[.08167,.58167,0,0],8733:[0,.69224,0,0],8736:[0,.69224,0,0],8737:[0,.69224,0,0],8738:[.03517,.52239,0,0],8739:[.08167,.58167,0,0],8740:[.25142,.74111,0,0],8741:[.08167,.58167,0,0],8742:[.25142,.74111,0,0],8756:[0,.69224,0,0],8757:[0,.69224,0,0],8764:[-.13313,.36687,0,0],8765:[-.13313,.37788,0,0],8769:[-.13313,.36687,0,0],8770:[-.03625,.46375,0,0],8774:[.30274,.79383,0,0],8776:[-.01688,.48312,0,0],8778:[.08167,.58167,0,0],8782:[.06062,.54986,0,0],8783:[.06062,.54986,0,0],8785:[.08198,.58198,0,0],8786:[.08198,.58198,0,0],8787:[.08198,.58198,0,0],8790:[0,.69224,0,0],8791:[.22958,.72958,0,0],8796:[.08198,.91667,0,0],8806:[.25583,.75583,0,0],8807:[.25583,.75583,0,0],8808:[.25142,.75726,0,0],8809:[.25142,.75726,0,0],8812:[.25583,.75583,0,0],8814:[.20576,.70576,0,0],8815:[.20576,.70576,0,0],8816:[.30274,.79383,0,0],8817:[.30274,.79383,0,0],8818:[.22958,.72958,0,0],8819:[.22958,.72958,0,0],8822:[.1808,.675,0,0],8823:[.1808,.675,0,0],8828:[.13667,.63667,0,0],8829:[.13667,.63667,0,0],8830:[.22958,.72958,0,0],8831:[.22958,.72958,0,0],8832:[.20576,.70576,0,0],8833:[.20576,.70576,0,0],8840:[.30274,.79383,0,0],8841:[.30274,.79383,0,0],8842:[.13597,.63597,0,0],8843:[.13597,.63597,0,0],8847:[.03517,.54986,0,0],8848:[.03517,.54986,0,0],8858:[.08198,.58198,0,0],8859:[.08198,.58198,0,0],8861:[.08198,.58198,0,0],8862:[0,.675,0,0],8863:[0,.675,0,0],8864:[0,.675,0,0],8865:[0,.675,0,0],8872:[0,.69224,0,0],8873:[0,.69224,0,0],8874:[0,.69224,0,0],8876:[0,.68889,0,0],8877:[0,.68889,0,0],8878:[0,.68889,0,0],8879:[0,.68889,0,0],8882:[.03517,.54986,0,0],8883:[.03517,.54986,0,0],8884:[.13667,.63667,0,0],8885:[.13667,.63667,0,0],8888:[0,.54986,0,0],8890:[.19444,.43056,0,0],8891:[.19444,.69224,0,0],8892:[.19444,.69224,0,0],8901:[0,.54986,0,0],8903:[.08167,.58167,0,0],8905:[.08167,.58167,0,0],8906:[.08167,.58167,0,0],8907:[0,.69224,0,0],8908:[0,.69224,0,0],8909:[-.03598,.46402,0,0],8910:[0,.54986,0,0],8911:[0,.54986,0,0],8912:[.03517,.54986,0,0],8913:[.03517,.54986,0,0],8914:[0,.54986,0,0],8915:[0,.54986,0,0],8916:[0,.69224,0,0],8918:[.0391,.5391,0,0],8919:[.0391,.5391,0,0],8920:[.03517,.54986,0,0],8921:[.03517,.54986,0,0],8922:[.38569,.88569,0,0],8923:[.38569,.88569,0,0],8926:[.13667,.63667,0,0],8927:[.13667,.63667,0,0],8928:[.30274,.79383,0,0],8929:[.30274,.79383,0,0],8934:[.23222,.74111,0,0],8935:[.23222,.74111,0,0],8936:[.23222,.74111,0,0],8937:[.23222,.74111,0,0],8938:[.20576,.70576,0,0],8939:[.20576,.70576,0,0],8940:[.30274,.79383,0,0],8941:[.30274,.79383,0,0],8994:[.19444,.69224,0,0],8995:[.19444,.69224,0,0],9416:[.15559,.69224,0,0],9484:[0,.69224,0,0],9488:[0,.69224,0,0],9492:[0,.37788,0,0],9496:[0,.37788,0,0],9585:[.19444,.68889,0,0],9586:[.19444,.74111,0,0],9632:[0,.675,0,0],9633:[0,.675,0,0],9650:[0,.54986,0,0],9651:[0,.54986,0,0],9654:[.03517,.54986,0,0],9660:[0,.54986,0,0],9661:[0,.54986,0,0],9664:[.03517,.54986,0,0],9674:[.11111,.69224,0,0],9733:[.19444,.69224,0,0],10003:[0,.69224,0,0],10016:[0,.69224,0,0],10731:[.11111,.69224,0,0],10846:[.19444,.75583,0,0],10877:[.13667,.63667,0,0],10878:[.13667,.63667,0,0],10885:[.25583,.75583,0,0],10886:[.25583,.75583,0,0],10887:[.13597,.63597,0,0],10888:[.13597,.63597,0,0],10889:[.26167,.75726,0,0],10890:[.26167,.75726,0,0],10891:[.48256,.98256,0,0],10892:[.48256,.98256,0,0],10901:[.13667,.63667,0,0],10902:[.13667,.63667,0,0],10933:[.25142,.75726,0,0],10934:[.25142,.75726,0,0],10935:[.26167,.75726,0,0],10936:[.26167,.75726,0,0],10937:[.26167,.75726,0,0],10938:[.26167,.75726,0,0],10949:[.25583,.75583,0,0],10950:[.25583,.75583,0,0],10955:[.28481,.79383,0,0],10956:[.28481,.79383,0,0],57350:[.08167,.58167,0,0],57351:[.08167,.58167,0,0],57352:[.08167,.58167,0,0],57353:[0,.43056,.04028,0],57356:[.25142,.75726,0,0],57357:[.25142,.75726,0,0],57358:[.41951,.91951,0,0],57359:[.30274,.79383,0,0],57360:[.30274,.79383,0,0],57361:[.41951,.91951,0,0],57366:[.25142,.75726,0,0],57367:[.25142,.75726,0,0],57368:[.25142,.75726,0,0],57369:[.25142,.75726,0,0],57370:[.13597,.63597,0,0],57371:[.13597,.63597,0,0]},"Caligraphic-Regular":{48:[0,.43056,0,0],49:[0,.43056,0,0],50:[0,.43056,0,0],51:[.19444,.43056,0,0],52:[.19444,.43056,0,0],53:[.19444,.43056,0,0],54:[0,.64444,0,0],55:[.19444,.43056,0,0],56:[0,.64444,0,0],57:[.19444,.43056,0,0],65:[0,.68333,0,.19445],66:[0,.68333,.03041,.13889],67:[0,.68333,.05834,.13889],68:[0,.68333,.02778,.08334],69:[0,.68333,.08944,.11111],70:[0,.68333,.09931,.11111],71:[.09722,.68333,.0593,.11111],72:[0,.68333,.00965,.11111],73:[0,.68333,.07382,0],74:[.09722,.68333,.18472,.16667],75:[0,.68333,.01445,.05556],76:[0,.68333,0,.13889],77:[0,.68333,0,.13889],78:[0,.68333,.14736,.08334],79:[0,.68333,.02778,.11111],80:[0,.68333,.08222,.08334],81:[.09722,.68333,0,.11111],82:[0,.68333,0,.08334],83:[0,.68333,.075,.13889],84:[0,.68333,.25417,0],85:[0,.68333,.09931,.08334],86:[0,.68333,.08222,0],87:[0,.68333,.08222,.08334],88:[0,.68333,.14643,.13889],89:[.09722,.68333,.08222,.08334],90:[0,.68333,.07944,.13889]},"Fraktur-Regular":{33:[0,.69141,0,0],34:[0,.69141,0,0],38:[0,.69141,0,0],39:[0,.69141,0,0],40:[.24982,.74947,0,0],41:[.24982,.74947,0,0],42:[0,.62119,0,0],43:[.08319,.58283,0,0],44:[0,.10803,0,0],45:[.08319,.58283,0,0],46:[0,.10803,0,0],47:[.24982,.74947,0,0],48:[0,.47534,0,0],49:[0,.47534,0,0],50:[0,.47534,0,0],51:[.18906,.47534,0,0],52:[.18906,.47534,0,0],53:[.18906,.47534,0,0],54:[0,.69141,0,0],55:[.18906,.47534,0,0],56:[0,.69141,0,0],57:[.18906,.47534,0,0],58:[0,.47534,0,0],59:[.12604,.47534,0,0],61:[-.13099,.36866,0,0],63:[0,.69141,0,0],65:[0,.69141,0,0],66:[0,.69141,0,0],67:[0,.69141,0,0],68:[0,.69141,0,0],69:[0,.69141,0,0],70:[.12604,.69141,0,0],71:[0,.69141,0,0],72:[.06302,.69141,0,0],73:[0,.69141,0,0],74:[.12604,.69141,0,0],75:[0,.69141,0,0],76:[0,.69141,0,0],77:[0,.69141,0,0],78:[0,.69141,0,0],79:[0,.69141,0,0],80:[.18906,.69141,0,0],81:[.03781,.69141,0,0],82:[0,.69141,0,0],83:[0,.69141,0,0],84:[0,.69141,0,0],85:[0,.69141,0,0],86:[0,.69141,0,0],87:[0,.69141,0,0],88:[0,.69141,0,0],89:[.18906,.69141,0,0],90:[.12604,.69141,0,0],91:[.24982,.74947,0,0],93:[.24982,.74947,0,0],94:[0,.69141,0,0],97:[0,.47534,0,0],98:[0,.69141,0,0],99:[0,.47534,0,0],100:[0,.62119,0,0],101:[0,.47534,0,0],102:[.18906,.69141,0,0],103:[.18906,.47534,0,0],104:[.18906,.69141,0,0],105:[0,.69141,0,0],106:[0,.69141,0,0],107:[0,.69141,0,0],108:[0,.69141,0,0],109:[0,.47534,0,0],110:[0,.47534,0,0],111:[0,.47534,0,0],112:[.18906,.52396,0,0],113:[.18906,.47534,0,0],114:[0,.47534,0,0],115:[0,.47534,0,0],116:[0,.62119,0,0],117:[0,.47534,0,0],118:[0,.52396,0,0],119:[0,.52396,0,0],120:[.18906,.47534,0,0],121:[.18906,.47534,0,0],122:[.18906,.47534,0,0],8216:[0,.69141,0,0],8217:[0,.69141,0,0],58112:[0,.62119,0,0],58113:[0,.62119,0,0],58114:[.18906,.69141,0,0],58115:[.18906,.69141,0,0],58116:[.18906,.47534,0,0],58117:[0,.69141,0,0],58118:[0,.62119,0,0],58119:[0,.47534,0,0]},"Main-Bold":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.13333,.63333,0,0],44:[.19444,.15556,0,0],45:[0,.44444,0,0],46:[0,.15556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.44444,0,0],59:[.19444,.44444,0,0],60:[.08556,.58556,0,0],61:[-.10889,.39111,0,0],62:[.08556,.58556,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,0,0],67:[0,.68611,0,0],68:[0,.68611,0,0],69:[0,.68611,0,0],70:[0,.68611,0,0],71:[0,.68611,0,0],72:[0,.68611,0,0],73:[0,.68611,0,0],74:[0,.68611,0,0],75:[0,.68611,0,0],76:[0,.68611,0,0],77:[0,.68611,0,0],78:[0,.68611,0,0],79:[0,.68611,0,0],80:[0,.68611,0,0],81:[.19444,.68611,0,0],82:[0,.68611,0,0],83:[0,.68611,0,0],84:[0,.68611,0,0],85:[0,.68611,0,0],86:[0,.68611,.01597,0],87:[0,.68611,.01597,0],88:[0,.68611,0,0],89:[0,.68611,.02875,0],90:[0,.68611,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.13444,.03194,0],96:[0,.69444,0,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.10903,0],103:[.19444,.44444,.01597,0],104:[0,.69444,0,0],105:[0,.69444,0,0],106:[.19444,.69444,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,0,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.01597,0],119:[0,.44444,.01597,0],120:[0,.44444,0,0],121:[.19444,.44444,.01597,0],122:[0,.44444,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.34444,0,0],168:[0,.69444,0,0],172:[0,.44444,0,0],175:[0,.59611,0,0],176:[0,.69444,0,0],177:[.13333,.63333,0,0],180:[0,.69444,0,0],215:[.13333,.63333,0,0],247:[.13333,.63333,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],710:[0,.69444,0,0],711:[0,.63194,0,0],713:[0,.59611,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.69444,0,0],730:[0,.69444,0,0],732:[0,.69444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.69444,0,0],772:[0,.59611,0,0],774:[0,.69444,0,0],775:[0,.69444,0,0],776:[0,.69444,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],824:[.19444,.69444,0,0],915:[0,.68611,0,0],916:[0,.68611,0,0],920:[0,.68611,0,0],923:[0,.68611,0,0],926:[0,.68611,0,0],928:[0,.68611,0,0],931:[0,.68611,0,0],933:[0,.68611,0,0],934:[0,.68611,0,0],936:[0,.68611,0,0],937:[0,.68611,0,0],8211:[0,.44444,.03194,0],8212:[0,.44444,.03194,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8242:[0,.55556,0,0],8407:[0,.72444,.15486,0],8463:[0,.69444,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,0],8472:[.19444,.44444,0,0],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.10889,.39111,0,0],8593:[.19444,.69444,0,0],8594:[-.10889,.39111,0,0],8595:[.19444,.69444,0,0],8596:[-.10889,.39111,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8636:[-.10889,.39111,0,0],8637:[-.10889,.39111,0,0],8640:[-.10889,.39111,0,0],8641:[-.10889,.39111,0,0],8656:[-.10889,.39111,0,0],8657:[.19444,.69444,0,0],8658:[-.10889,.39111,0,0],8659:[.19444,.69444,0,0],8660:[-.10889,.39111,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.06389,0],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68611,0,0],8712:[.08556,.58556,0,0],8715:[.08556,.58556,0,0],8722:[.13333,.63333,0,0],8723:[.13333,.63333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.02778,.47222,0,0],8728:[-.02639,.47361,0,0],8729:[-.02639,.47361,0,0],8730:[.18,.82,0,0],8733:[0,.44444,0,0],8734:[0,.44444,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.12778,0],8764:[-.10889,.39111,0,0],8768:[.19444,.69444,0,0],8771:[.00222,.50222,0,0],8776:[.02444,.52444,0,0],8781:[.00222,.50222,0,0],8801:[.00222,.50222,0,0],8804:[.19667,.69667,0,0],8805:[.19667,.69667,0,0],8810:[.08556,.58556,0,0],8811:[.08556,.58556,0,0],8826:[.08556,.58556,0,0],8827:[.08556,.58556,0,0],8834:[.08556,.58556,0,0],8835:[.08556,.58556,0,0],8838:[.19667,.69667,0,0],8839:[.19667,.69667,0,0],8846:[0,.55556,0,0],8849:[.19667,.69667,0,0],8850:[.19667,.69667,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.13333,.63333,0,0],8854:[.13333,.63333,0,0],8855:[.13333,.63333,0,0],8856:[.13333,.63333,0,0],8857:[.13333,.63333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8900:[-.02639,.47361,0,0],8901:[-.02639,.47361,0,0],8902:[-.02778,.47222,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.13889,.36111,0,0],8995:[-.13889,.36111,0,0],9651:[.19444,.69444,0,0],9657:[-.02778,.47222,0,0],9661:[.19444,.69444,0,0],9667:[-.02778,.47222,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10815:[0,.68611,0,0],10927:[.19667,.69667,0,0],10928:[.19667,.69667,0,0]},"Main-Italic":{33:[0,.69444,.12417,0],34:[0,.69444,.06961,0],35:[.19444,.69444,.06616,0],37:[.05556,.75,.13639,0],38:[0,.69444,.09694,0],39:[0,.69444,.12417,0],40:[.25,.75,.16194,0],41:[.25,.75,.03694,0],42:[0,.75,.14917,0],43:[.05667,.56167,.03694,0],44:[.19444,.10556,0,0],45:[0,.43056,.02826,0],46:[0,.10556,0,0],47:[.25,.75,.16194,0],48:[0,.64444,.13556,0],49:[0,.64444,.13556,0],50:[0,.64444,.13556,0],51:[0,.64444,.13556,0],52:[.19444,.64444,.13556,0],53:[0,.64444,.13556,0],54:[0,.64444,.13556,0],55:[.19444,.64444,.13556,0],56:[0,.64444,.13556,0],57:[0,.64444,.13556,0],58:[0,.43056,.0582,0],59:[.19444,.43056,.0582,0],61:[-.13313,.36687,.06616,0],63:[0,.69444,.1225,0],64:[0,.69444,.09597,0],65:[0,.68333,0,0],66:[0,.68333,.10257,0],67:[0,.68333,.14528,0],68:[0,.68333,.09403,0],69:[0,.68333,.12028,0],70:[0,.68333,.13305,0],71:[0,.68333,.08722,0],72:[0,.68333,.16389,0],73:[0,.68333,.15806,0],74:[0,.68333,.14028,0],75:[0,.68333,.14528,0],76:[0,.68333,0,0],77:[0,.68333,.16389,0],78:[0,.68333,.16389,0],79:[0,.68333,.09403,0],80:[0,.68333,.10257,0],81:[.19444,.68333,.09403,0],82:[0,.68333,.03868,0],83:[0,.68333,.11972,0],84:[0,.68333,.13305,0],85:[0,.68333,.16389,0],86:[0,.68333,.18361,0],87:[0,.68333,.18361,0],88:[0,.68333,.15806,0],89:[0,.68333,.19383,0],90:[0,.68333,.14528,0],91:[.25,.75,.1875,0],93:[.25,.75,.10528,0],94:[0,.69444,.06646,0],95:[.31,.12056,.09208,0],97:[0,.43056,.07671,0],98:[0,.69444,.06312,0],99:[0,.43056,.05653,0],100:[0,.69444,.10333,0],101:[0,.43056,.07514,0],102:[.19444,.69444,.21194,0],103:[.19444,.43056,.08847,0],104:[0,.69444,.07671,0],105:[0,.65536,.1019,0],106:[.19444,.65536,.14467,0],107:[0,.69444,.10764,0],108:[0,.69444,.10333,0],109:[0,.43056,.07671,0],110:[0,.43056,.07671,0],111:[0,.43056,.06312,0],112:[.19444,.43056,.06312,0],113:[.19444,.43056,.08847,0],114:[0,.43056,.10764,0],115:[0,.43056,.08208,0],116:[0,.61508,.09486,0],117:[0,.43056,.07671,0],118:[0,.43056,.10764,0],119:[0,.43056,.10764,0],120:[0,.43056,.12042,0],121:[.19444,.43056,.08847,0],122:[0,.43056,.12292,0],126:[.35,.31786,.11585,0],163:[0,.69444,0,0],305:[0,.43056,0,.02778],567:[.19444,.43056,0,.08334],768:[0,.69444,0,0],769:[0,.69444,.09694,0],770:[0,.69444,.06646,0],771:[0,.66786,.11585,0],772:[0,.56167,.10333,0],774:[0,.69444,.10806,0],775:[0,.66786,.11752,0],776:[0,.66786,.10474,0],778:[0,.69444,0,0],779:[0,.69444,.1225,0],780:[0,.62847,.08295,0],915:[0,.68333,.13305,0],916:[0,.68333,0,0],920:[0,.68333,.09403,0],923:[0,.68333,0,0],926:[0,.68333,.15294,0],928:[0,.68333,.16389,0],931:[0,.68333,.12028,0],933:[0,.68333,.11111,0],934:[0,.68333,.05986,0],936:[0,.68333,.11111,0],937:[0,.68333,.10257,0],8211:[0,.43056,.09208,0],8212:[0,.43056,.09208,0],8216:[0,.69444,.12417,0],8217:[0,.69444,.12417,0],8220:[0,.69444,.1685,0],8221:[0,.69444,.06961,0],8463:[0,.68889,0,0]},"Main-Regular":{32:[0,0,0,0],33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.19444,.10556,0,0],45:[0,.43056,0,0],46:[0,.10556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.43056,0,0],59:[.19444,.43056,0,0],60:[.0391,.5391,0,0],61:[-.13313,.36687,0,0],62:[.0391,.5391,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68333,0,0],66:[0,.68333,0,0],67:[0,.68333,0,0],68:[0,.68333,0,0],69:[0,.68333,0,0],70:[0,.68333,0,0],71:[0,.68333,0,0],72:[0,.68333,0,0],73:[0,.68333,0,0],74:[0,.68333,0,0],75:[0,.68333,0,0],76:[0,.68333,0,0],77:[0,.68333,0,0],78:[0,.68333,0,0],79:[0,.68333,0,0],80:[0,.68333,0,0],81:[.19444,.68333,0,0],82:[0,.68333,0,0],83:[0,.68333,0,0],84:[0,.68333,0,0],85:[0,.68333,0,0],86:[0,.68333,.01389,0],87:[0,.68333,.01389,0],88:[0,.68333,0,0],89:[0,.68333,.025,0],90:[0,.68333,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.12056,.02778,0],96:[0,.69444,0,0],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,0],100:[0,.69444,0,0],101:[0,.43056,0,0],102:[0,.69444,.07778,0],103:[.19444,.43056,.01389,0],104:[0,.69444,0,0],105:[0,.66786,0,0],106:[.19444,.66786,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.19444,.43056,0,0],113:[.19444,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.61508,0,0],117:[0,.43056,0,0],118:[0,.43056,.01389,0],119:[0,.43056,.01389,0],120:[0,.43056,0,0],121:[.19444,.43056,.01389,0],122:[0,.43056,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.31786,0,0],160:[0,0,0,0],168:[0,.66786,0,0],172:[0,.43056,0,0],175:[0,.56778,0,0],176:[0,.69444,0,0],177:[.08333,.58333,0,0],180:[0,.69444,0,0],215:[.08333,.58333,0,0],247:[.08333,.58333,0,0],305:[0,.43056,0,0],567:[.19444,.43056,0,0],710:[0,.69444,0,0],711:[0,.62847,0,0],713:[0,.56778,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.66786,0,0],730:[0,.69444,0,0],732:[0,.66786,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.66786,0,0],772:[0,.56778,0,0],774:[0,.69444,0,0],775:[0,.66786,0,0],776:[0,.66786,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.62847,0,0],824:[.19444,.69444,0,0],915:[0,.68333,0,0],916:[0,.68333,0,0],920:[0,.68333,0,0],923:[0,.68333,0,0],926:[0,.68333,0,0],928:[0,.68333,0,0],931:[0,.68333,0,0],933:[0,.68333,0,0],934:[0,.68333,0,0],936:[0,.68333,0,0],937:[0,.68333,0,0],8211:[0,.43056,.02778,0],8212:[0,.43056,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8230:[0,.12,0,0],8242:[0,.55556,0,0],8407:[0,.71444,.15382,0],8463:[0,.68889,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,.11111],8472:[.19444,.43056,0,.11111],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.13313,.36687,0,0],8593:[.19444,.69444,0,0],8594:[-.13313,.36687,0,0],8595:[.19444,.69444,0,0],8596:[-.13313,.36687,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8614:[.011,.511,0,0],8617:[.011,.511,0,0],8618:[.011,.511,0,0],8636:[-.13313,.36687,0,0],8637:[-.13313,.36687,0,0],8640:[-.13313,.36687,0,0],8641:[-.13313,.36687,0,0],8652:[.011,.671,0,0],8656:[-.13313,.36687,0,0],8657:[.19444,.69444,0,0],8658:[-.13313,.36687,0,0],8659:[.19444,.69444,0,0],8660:[-.13313,.36687,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.05556,.08334],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68333,0,0],8712:[.0391,.5391,0,0],8715:[.0391,.5391,0,0],8722:[.08333,.58333,0,0],8723:[.08333,.58333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.03472,.46528,0,0],8728:[-.05555,.44445,0,0],8729:[-.05555,.44445,0,0],8730:[.2,.8,0,0],8733:[0,.43056,0,0],8734:[0,.43056,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.11111,0],8764:[-.13313,.36687,0,0],8768:[.19444,.69444,0,0],8771:[-.03625,.46375,0,0],8773:[-.022,.589,0,0],8776:[-.01688,.48312,0,0],8781:[-.03625,.46375,0,0],8784:[-.133,.67,0,0],8800:[.215,.716,0,0],8801:[-.03625,.46375,0,0],8804:[.13597,.63597,0,0],8805:[.13597,.63597,0,0],8810:[.0391,.5391,0,0],8811:[.0391,.5391,0,0],8826:[.0391,.5391,0,0],8827:[.0391,.5391,0,0],8834:[.0391,.5391,0,0],8835:[.0391,.5391,0,0],8838:[.13597,.63597,0,0],8839:[.13597,.63597,0,0],8846:[0,.55556,0,0],8849:[.13597,.63597,0,0],8850:[.13597,.63597,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.08333,.58333,0,0],8854:[.08333,.58333,0,0],8855:[.08333,.58333,0,0],8856:[.08333,.58333,0,0],8857:[.08333,.58333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8872:[.249,.75,0,0],8900:[-.05555,.44445,0,0],8901:[-.05555,.44445,0,0],8902:[-.03472,.46528,0,0],8904:[.005,.505,0,0],8942:[.03,.9,0,0],8943:[-.19,.31,0,0],8945:[-.1,.82,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.14236,.35764,0,0],8995:[-.14236,.35764,0,0],9136:[.244,.744,0,0],9137:[.244,.744,0,0],9651:[.19444,.69444,0,0],9657:[-.03472,.46528,0,0],9661:[.19444,.69444,0,0],9667:[-.03472,.46528,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10222:[.244,.744,0,0],10223:[.244,.744,0,0],10229:[.011,.511,0,0],10230:[.011,.511,0,0],10231:[.011,.511,0,0],10232:[.024,.525,0,0],10233:[.024,.525,0,0],10234:[.024,.525,0,0],10236:[.011,.511,0,0],10815:[0,.68333,0,0],10927:[.13597,.63597,0,0],10928:[.13597,.63597,0,0]},"Math-BoldItalic":{47:[.19444,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,.04835,0],67:[0,.68611,.06979,0],68:[0,.68611,.03194,0],69:[0,.68611,.05451,0],70:[0,.68611,.15972,0],71:[0,.68611,0,0],72:[0,.68611,.08229,0],73:[0,.68611,.07778,0],74:[0,.68611,.10069,0],75:[0,.68611,.06979,0],76:[0,.68611,0,0],77:[0,.68611,.11424,0],78:[0,.68611,.11424,0],79:[0,.68611,.03194,0],80:[0,.68611,.15972,0],81:[.19444,.68611,0,0],82:[0,.68611,.00421,0],83:[0,.68611,.05382,0],84:[0,.68611,.15972,0],85:[0,.68611,.11424,0],86:[0,.68611,.25555,0],87:[0,.68611,.15972,0],88:[0,.68611,.07778,0],89:[0,.68611,.25555,0],90:[0,.68611,.06979,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[.19444,.69444,.11042,0],103:[.19444,.44444,.03704,0],104:[0,.69444,0,0],105:[0,.69326,0,0],106:[.19444,.69326,.0622,0],107:[0,.69444,.01852,0],108:[0,.69444,.0088,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,.03704,0],114:[0,.44444,.03194,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.03704,0],119:[0,.44444,.02778,0],120:[0,.44444,0,0],121:[.19444,.44444,.03704,0],122:[0,.44444,.04213,0],915:[0,.68611,.15972,0],916:[0,.68611,0,0],920:[0,.68611,.03194,0],923:[0,.68611,0,0],926:[0,.68611,.07458,0],928:[0,.68611,.08229,0],931:[0,.68611,.05451,0],933:[0,.68611,.15972,0],
934:[0,.68611,0,0],936:[0,.68611,.11653,0],937:[0,.68611,.04835,0],945:[0,.44444,0,0],946:[.19444,.69444,.03403,0],947:[.19444,.44444,.06389,0],948:[0,.69444,.03819,0],949:[0,.44444,0,0],950:[.19444,.69444,.06215,0],951:[.19444,.44444,.03704,0],952:[0,.69444,.03194,0],953:[0,.44444,0,0],954:[0,.44444,0,0],955:[0,.69444,0,0],956:[.19444,.44444,0,0],957:[0,.44444,.06898,0],958:[.19444,.69444,.03021,0],959:[0,.44444,0,0],960:[0,.44444,.03704,0],961:[.19444,.44444,0,0],962:[.09722,.44444,.07917,0],963:[0,.44444,.03704,0],964:[0,.44444,.13472,0],965:[0,.44444,.03704,0],966:[.19444,.44444,0,0],967:[.19444,.44444,0,0],968:[.19444,.69444,.03704,0],969:[0,.44444,.03704,0],977:[0,.69444,0,0],981:[.19444,.69444,0,0],982:[0,.44444,.03194,0],1009:[.19444,.44444,0,0],1013:[0,.44444,0,0]},"Math-Italic":{47:[.19444,.69444,0,0],65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"Math-Regular":{65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"SansSerif-Regular":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.125,.08333,0,0],45:[0,.44444,0,0],46:[0,.08333,0,0],47:[.25,.75,0,0],48:[0,.65556,0,0],49:[0,.65556,0,0],50:[0,.65556,0,0],51:[0,.65556,0,0],52:[0,.65556,0,0],53:[0,.65556,0,0],54:[0,.65556,0,0],55:[0,.65556,0,0],56:[0,.65556,0,0],57:[0,.65556,0,0],58:[0,.44444,0,0],59:[.125,.44444,0,0],61:[-.13,.37,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.69444,0,0],66:[0,.69444,0,0],67:[0,.69444,0,0],68:[0,.69444,0,0],69:[0,.69444,0,0],70:[0,.69444,0,0],71:[0,.69444,0,0],72:[0,.69444,0,0],73:[0,.69444,0,0],74:[0,.69444,0,0],75:[0,.69444,0,0],76:[0,.69444,0,0],77:[0,.69444,0,0],78:[0,.69444,0,0],79:[0,.69444,0,0],80:[0,.69444,0,0],81:[.125,.69444,0,0],82:[0,.69444,0,0],83:[0,.69444,0,0],84:[0,.69444,0,0],85:[0,.69444,0,0],86:[0,.69444,.01389,0],87:[0,.69444,.01389,0],88:[0,.69444,0,0],89:[0,.69444,.025,0],90:[0,.69444,0,0],91:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.35,.09444,.02778,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.06944,0],103:[.19444,.44444,.01389,0],104:[0,.69444,0,0],105:[0,.67937,0,0],106:[.19444,.67937,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,.01389,0],115:[0,.44444,0,0],116:[0,.57143,0,0],117:[0,.44444,0,0],118:[0,.44444,.01389,0],119:[0,.44444,.01389,0],120:[0,.44444,0,0],121:[.19444,.44444,.01389,0],122:[0,.44444,0,0],126:[.35,.32659,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.67659,0,0],772:[0,.60889,0,0],774:[0,.69444,0,0],775:[0,.67937,0,0],776:[0,.67937,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],915:[0,.69444,0,0],916:[0,.69444,0,0],920:[0,.69444,0,0],923:[0,.69444,0,0],926:[0,.69444,0,0],928:[0,.69444,0,0],931:[0,.69444,0,0],933:[0,.69444,0,0],934:[0,.69444,0,0],936:[0,.69444,0,0],937:[0,.69444,0,0],8211:[0,.44444,.02778,0],8212:[0,.44444,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0]},"Script-Regular":{65:[0,.7,.22925,0],66:[0,.7,.04087,0],67:[0,.7,.1689,0],68:[0,.7,.09371,0],69:[0,.7,.18583,0],70:[0,.7,.13634,0],71:[0,.7,.17322,0],72:[0,.7,.29694,0],73:[0,.7,.19189,0],74:[.27778,.7,.19189,0],75:[0,.7,.31259,0],76:[0,.7,.19189,0],77:[0,.7,.15981,0],78:[0,.7,.3525,0],79:[0,.7,.08078,0],80:[0,.7,.08078,0],81:[0,.7,.03305,0],82:[0,.7,.06259,0],83:[0,.7,.19189,0],84:[0,.7,.29087,0],85:[0,.7,.25815,0],86:[0,.7,.27523,0],87:[0,.7,.27523,0],88:[0,.7,.26006,0],89:[0,.7,.2939,0],90:[0,.7,.24037,0]},"Size1-Regular":{40:[.35001,.85,0,0],41:[.35001,.85,0,0],47:[.35001,.85,0,0],91:[.35001,.85,0,0],92:[.35001,.85,0,0],93:[.35001,.85,0,0],123:[.35001,.85,0,0],125:[.35001,.85,0,0],710:[0,.72222,0,0],732:[0,.72222,0,0],770:[0,.72222,0,0],771:[0,.72222,0,0],8214:[-99e-5,.601,0,0],8593:[1e-5,.6,0,0],8595:[1e-5,.6,0,0],8657:[1e-5,.6,0,0],8659:[1e-5,.6,0,0],8719:[.25001,.75,0,0],8720:[.25001,.75,0,0],8721:[.25001,.75,0,0],8730:[.35001,.85,0,0],8739:[-.00599,.606,0,0],8741:[-.00599,.606,0,0],8747:[.30612,.805,.19445,0],8748:[.306,.805,.19445,0],8749:[.306,.805,.19445,0],8750:[.30612,.805,.19445,0],8896:[.25001,.75,0,0],8897:[.25001,.75,0,0],8898:[.25001,.75,0,0],8899:[.25001,.75,0,0],8968:[.35001,.85,0,0],8969:[.35001,.85,0,0],8970:[.35001,.85,0,0],8971:[.35001,.85,0,0],9168:[-99e-5,.601,0,0],10216:[.35001,.85,0,0],10217:[.35001,.85,0,0],10752:[.25001,.75,0,0],10753:[.25001,.75,0,0],10754:[.25001,.75,0,0],10756:[.25001,.75,0,0],10758:[.25001,.75,0,0]},"Size2-Regular":{40:[.65002,1.15,0,0],41:[.65002,1.15,0,0],47:[.65002,1.15,0,0],91:[.65002,1.15,0,0],92:[.65002,1.15,0,0],93:[.65002,1.15,0,0],123:[.65002,1.15,0,0],125:[.65002,1.15,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8719:[.55001,1.05,0,0],8720:[.55001,1.05,0,0],8721:[.55001,1.05,0,0],8730:[.65002,1.15,0,0],8747:[.86225,1.36,.44445,0],8748:[.862,1.36,.44445,0],8749:[.862,1.36,.44445,0],8750:[.86225,1.36,.44445,0],8896:[.55001,1.05,0,0],8897:[.55001,1.05,0,0],8898:[.55001,1.05,0,0],8899:[.55001,1.05,0,0],8968:[.65002,1.15,0,0],8969:[.65002,1.15,0,0],8970:[.65002,1.15,0,0],8971:[.65002,1.15,0,0],10216:[.65002,1.15,0,0],10217:[.65002,1.15,0,0],10752:[.55001,1.05,0,0],10753:[.55001,1.05,0,0],10754:[.55001,1.05,0,0],10756:[.55001,1.05,0,0],10758:[.55001,1.05,0,0]},"Size3-Regular":{40:[.95003,1.45,0,0],41:[.95003,1.45,0,0],47:[.95003,1.45,0,0],91:[.95003,1.45,0,0],92:[.95003,1.45,0,0],93:[.95003,1.45,0,0],123:[.95003,1.45,0,0],125:[.95003,1.45,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8730:[.95003,1.45,0,0],8968:[.95003,1.45,0,0],8969:[.95003,1.45,0,0],8970:[.95003,1.45,0,0],8971:[.95003,1.45,0,0],10216:[.95003,1.45,0,0],10217:[.95003,1.45,0,0]},"Size4-Regular":{40:[1.25003,1.75,0,0],41:[1.25003,1.75,0,0],47:[1.25003,1.75,0,0],91:[1.25003,1.75,0,0],92:[1.25003,1.75,0,0],93:[1.25003,1.75,0,0],123:[1.25003,1.75,0,0],125:[1.25003,1.75,0,0],710:[0,.825,0,0],732:[0,.825,0,0],770:[0,.825,0,0],771:[0,.825,0,0],8730:[1.25003,1.75,0,0],8968:[1.25003,1.75,0,0],8969:[1.25003,1.75,0,0],8970:[1.25003,1.75,0,0],8971:[1.25003,1.75,0,0],9115:[.64502,1.155,0,0],9116:[1e-5,.6,0,0],9117:[.64502,1.155,0,0],9118:[.64502,1.155,0,0],9119:[1e-5,.6,0,0],9120:[.64502,1.155,0,0],9121:[.64502,1.155,0,0],9122:[-99e-5,.601,0,0],9123:[.64502,1.155,0,0],9124:[.64502,1.155,0,0],9125:[-99e-5,.601,0,0],9126:[.64502,1.155,0,0],9127:[1e-5,.9,0,0],9128:[.65002,1.15,0,0],9129:[.90001,0,0,0],9130:[0,.3,0,0],9131:[1e-5,.9,0,0],9132:[.65002,1.15,0,0],9133:[.90001,0,0,0],9143:[.88502,.915,0,0],10216:[1.25003,1.75,0,0],10217:[1.25003,1.75,0,0],57344:[-.00499,.605,0,0],57345:[-.00499,.605,0,0],57680:[0,.12,0,0],57681:[0,.12,0,0],57682:[0,.12,0,0],57683:[0,.12,0,0]},"Typewriter-Regular":{33:[0,.61111,0,0],34:[0,.61111,0,0],35:[0,.61111,0,0],36:[.08333,.69444,0,0],37:[.08333,.69444,0,0],38:[0,.61111,0,0],39:[0,.61111,0,0],40:[.08333,.69444,0,0],41:[.08333,.69444,0,0],42:[0,.52083,0,0],43:[-.08056,.53055,0,0],44:[.13889,.125,0,0],45:[-.08056,.53055,0,0],46:[0,.125,0,0],47:[.08333,.69444,0,0],48:[0,.61111,0,0],49:[0,.61111,0,0],50:[0,.61111,0,0],51:[0,.61111,0,0],52:[0,.61111,0,0],53:[0,.61111,0,0],54:[0,.61111,0,0],55:[0,.61111,0,0],56:[0,.61111,0,0],57:[0,.61111,0,0],58:[0,.43056,0,0],59:[.13889,.43056,0,0],60:[-.05556,.55556,0,0],61:[-.19549,.41562,0,0],62:[-.05556,.55556,0,0],63:[0,.61111,0,0],64:[0,.61111,0,0],65:[0,.61111,0,0],66:[0,.61111,0,0],67:[0,.61111,0,0],68:[0,.61111,0,0],69:[0,.61111,0,0],70:[0,.61111,0,0],71:[0,.61111,0,0],72:[0,.61111,0,0],73:[0,.61111,0,0],74:[0,.61111,0,0],75:[0,.61111,0,0],76:[0,.61111,0,0],77:[0,.61111,0,0],78:[0,.61111,0,0],79:[0,.61111,0,0],80:[0,.61111,0,0],81:[.13889,.61111,0,0],82:[0,.61111,0,0],83:[0,.61111,0,0],84:[0,.61111,0,0],85:[0,.61111,0,0],86:[0,.61111,0,0],87:[0,.61111,0,0],88:[0,.61111,0,0],89:[0,.61111,0,0],90:[0,.61111,0,0],91:[.08333,.69444,0,0],92:[.08333,.69444,0,0],93:[.08333,.69444,0,0],94:[0,.61111,0,0],95:[.09514,0,0,0],96:[0,.61111,0,0],97:[0,.43056,0,0],98:[0,.61111,0,0],99:[0,.43056,0,0],100:[0,.61111,0,0],101:[0,.43056,0,0],102:[0,.61111,0,0],103:[.22222,.43056,0,0],104:[0,.61111,0,0],105:[0,.61111,0,0],106:[.22222,.61111,0,0],107:[0,.61111,0,0],108:[0,.61111,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.22222,.43056,0,0],113:[.22222,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.55358,0,0],117:[0,.43056,0,0],118:[0,.43056,0,0],119:[0,.43056,0,0],120:[0,.43056,0,0],121:[.22222,.43056,0,0],122:[0,.43056,0,0],123:[.08333,.69444,0,0],124:[.08333,.69444,0,0],125:[.08333,.69444,0,0],126:[0,.61111,0,0],127:[0,.61111,0,0],305:[0,.43056,0,0],567:[.22222,.43056,0,0],768:[0,.61111,0,0],769:[0,.61111,0,0],770:[0,.61111,0,0],771:[0,.61111,0,0],772:[0,.56555,0,0],774:[0,.61111,0,0],776:[0,.61111,0,0],778:[0,.61111,0,0],780:[0,.56597,0,0],915:[0,.61111,0,0],916:[0,.61111,0,0],920:[0,.61111,0,0],923:[0,.61111,0,0],926:[0,.61111,0,0],928:[0,.61111,0,0],931:[0,.61111,0,0],933:[0,.61111,0,0],934:[0,.61111,0,0],936:[0,.61111,0,0],937:[0,.61111,0,0],2018:[0,.61111,0,0],2019:[0,.61111,0,0],8242:[0,.61111,0,0]}}},{}],23:[function(e,t,r){"use strict";var a=e("./utils");var i=e("./ParseError");var n=e("./parseData");var o=n.ParseNode;function s(e,r,a){if(typeof e==="string"){e=[e]}if(typeof r==="number"){r={numArgs:r}}var i={numArgs:r.numArgs,argTypes:r.argTypes,greediness:r.greediness===undefined?1:r.greediness,allowedInText:!!r.allowedInText,numOptionalArgs:r.numOptionalArgs||0,infix:!!r.infix,handler:a};for(var n=0;n<e.length;++n){t.exports[e[n]]=i}}var l=function e(t){if(t.type==="ordgroup"){return t.value}else{return[t]}};s("\\sqrt",{numArgs:1,numOptionalArgs:1},function(e,t){var r=t[0];var a=t[1];return{type:"sqrt",body:a,index:r}});var u={"\\text":undefined,"\\textrm":"mathrm","\\textsf":"mathsf","\\texttt":"mathtt","\\textnormal":"mathrm","\\textbf":"mathbf","\\textit":"textit"};s(["\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textbf","\\textit"],{numArgs:1,argTypes:["text"],greediness:2,allowedInText:true},function(e,t){var r=t[0];return{type:"text",body:l(r),style:u[e.funcName]}});s("\\xmlClass",{numArgs:2,allowedInText:true,greediness:3,argTypes:["string","original"]},function(e,t){var r=t[0];var a=t[1];var i=void 0;if(a.type==="ordgroup"){i=a.value}else{i=[a]}return{type:"xmlClass",cl:r,value:i}});s("\\textcolor",{numArgs:2,allowedInText:true,greediness:3,argTypes:["color","original"]},function(e,t){var r=t[0];var a=t[1];return{type:"color",color:r.value,value:l(a)}});s("\\color",{numArgs:1,allowedInText:true,greediness:3,argTypes:["color"]},null);s("\\overline",{numArgs:1},function(e,t){var r=t[0];return{type:"overline",body:r}});s("\\underline",{numArgs:1},function(e,t){var r=t[0];return{type:"underline",body:r}});s("\\rule",{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},function(e,t){var r=t[0];var a=t[1];var i=t[2];return{type:"rule",shift:r&&r.value,width:a.value,height:i.value}});s("\\cursor",{numArgs:1,numOptionalArgs:1,argTypes:["size","size"]},function(e,t){var r=t[0];var a=t[1];return{type:"cursor",shift:r&&r.value,height:a.value}});s(["\\kern","\\mkern"],{numArgs:1,argTypes:["size"]},function(e,t){return{type:"kern",dimension:t[0].value}});s("\\KaTeX",{numArgs:0},function(e){return{type:"katex"}});s("\\phantom",{numArgs:1},function(e,t){var r=t[0];return{type:"phantom",value:l(r)}});s(["\\mathord","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathinner"],{numArgs:1},function(e,t){var r=t[0];return{type:"mclass",mclass:"m"+e.funcName.substr(5),value:l(r)}});s("\\stackrel",{numArgs:2},function(e,t){var r=t[0];var a=t[1];var i=new o("op",{type:"op",limits:true,alwaysHandleSupSub:true,symbol:false,value:l(a)},a.mode);var n=new o("supsub",{base:i,sup:r,sub:null},r.mode);return{type:"mclass",mclass:"mrel",value:[n]}});s("\\bmod",{numArgs:0},function(e,t){return{type:"mod",modType:"bmod",value:null}});s(["\\pod","\\pmod","\\mod"],{numArgs:1},function(e,t){var r=t[0];return{type:"mod",modType:e.funcName.substr(1),value:l(r)}});var h={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}};var p=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","<",">","\\langle","\\rangle","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];var c={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak"};s(["\\blue","\\orange","\\pink","\\red","\\green","\\gray","\\purple","\\blueA","\\blueB","\\blueC","\\blueD","\\blueE","\\tealA","\\tealB","\\tealC","\\tealD","\\tealE","\\greenA","\\greenB","\\greenC","\\greenD","\\greenE","\\goldA","\\goldB","\\goldC","\\goldD","\\goldE","\\redA","\\redB","\\redC","\\redD","\\redE","\\maroonA","\\maroonB","\\maroonC","\\maroonD","\\maroonE","\\purpleA","\\purpleB","\\purpleC","\\purpleD","\\purpleE","\\mintA","\\mintB","\\mintC","\\grayA","\\grayB","\\grayC","\\grayD","\\grayE","\\grayF","\\grayG","\\grayH","\\grayI","\\kaBlue","\\kaGreen"],{numArgs:1,allowedInText:true,greediness:3},function(e,t){var r=t[0];return{type:"color",color:"katex-"+e.funcName.slice(1),value:l(r)}});s(["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\sh","\\tan","\\tanh","\\tg","\\th"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:false,body:e.funcName}});s(["\\det","\\gcd","\\inf","\\lim","\\liminf","\\limsup","\\max","\\min","\\Pr","\\sup"],{numArgs:0},function(e){return{type:"op",limits:true,symbol:false,body:e.funcName}});s(["\\int","\\iint","\\iiint","\\oint"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:true,body:e.funcName}});s(["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint"],{numArgs:0},function(e){return{type:"op",limits:true,symbol:true,body:e.funcName}});s("\\mathop",{numArgs:1},function(e,t){var r=t[0];return{type:"op",limits:false,symbol:false,value:l(r)}});s(["\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom","\\\\atopfrac"],{numArgs:2,greediness:2},function(e,t){var r=t[0];var a=t[1];var i=void 0;var n=null;var o=null;var s="auto";switch(e.funcName){case"\\dfrac":case"\\frac":case"\\tfrac":i=true;break;case"\\\\atopfrac":i=false;break;case"\\dbinom":case"\\binom":case"\\tbinom":i=false;n="(";o=")";break;default:throw new Error("Unrecognized genfrac command")}switch(e.funcName){case"\\dfrac":case"\\dbinom":s="display";break;case"\\tfrac":case"\\tbinom":s="text";break}return{type:"genfrac",numer:r,denom:a,hasBarLine:i,leftDelim:n,rightDelim:o,size:s}});s(["\\llap","\\rlap"],{numArgs:1,allowedInText:true},function(e,t){var r=t[0];return{type:e.funcName.slice(1),body:r}});var v=function e(t,r){if(a.contains(p,t.value)){return t}else{throw new i("Invalid delimiter: '"+t.value+"' after '"+r.funcName+"'",t)}};s(["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],{numArgs:1},function(e,t){var r=v(t[0],e);return{type:"delimsizing",size:h[e.funcName].size,mclass:h[e.funcName].mclass,value:r.value}});s(["\\left","\\right"],{numArgs:1},function(e,t){var r=v(t[0],e);return{type:"leftright",value:r.value}});s("\\middle",{numArgs:1},function(e,t){var r=v(t[0],e);if(!e.parser.leftrightDepth){throw new i("\\middle without preceding \\left",r)}return{type:"middle",value:r.value}});s(["\\tiny","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"],0,null);s(["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],0,null);s(["\\rm","\\sf","\\tt","\\bf","\\it"],0,null);s(["\\mathrm","\\mathit","\\mathbf","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bold","\\frak"],{numArgs:1,greediness:2},function(e,t){var r=t[0];var a=e.funcName;if(a in c){a=c[a]}return{type:"font",font:a.slice(1),body:r}});s(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\widehat","\\widetilde","\\overrightarrow","\\overleftarrow","\\Overrightarrow","\\overleftrightarrow","\\overgroup","\\overlinesegment","\\overleftharpoon","\\overrightharpoon"],{numArgs:1},function(e,t){var r=t[0];var i=!a.contains(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot"],e.funcName);var n=!i||a.contains(["\\widehat","\\widetilde"],e.funcName);return{type:"accent",label:e.funcName,isStretchy:i,isShifty:n,value:l(r),base:r}});s(["\\overbrace","\\underbrace"],{numArgs:1},function(e,t){var r=t[0];return{type:"horizBrace",label:e.funcName,isOver:/^\\over/.test(e.funcName),base:r}});s(["\\underleftarrow","\\underrightarrow","\\underleftrightarrow","\\undergroup","\\underlinesegment","\\undertilde"],{numArgs:1},function(e,t){var r=t[0];return{type:"accentUnder",label:e.funcName,value:l(r),body:r}});s(["\\xleftarrow","\\xrightarrow","\\xLeftarrow","\\xRightarrow","\\xleftrightarrow","\\xLeftrightarrow","\\xhookleftarrow","\\xhookrightarrow","\\xmapsto","\\xrightharpoondown","\\xrightharpoonup","\\xleftharpoondown","\\xleftharpoonup","\\xrightleftharpoons","\\xleftrightharpoons","\\xLongequal","\\xtwoheadrightarrow","\\xtwoheadleftarrow","\\xLongequal","\\xtofrom"],{numArgs:1,numOptionalArgs:1},function(e,t){var r=t[0];var a=t[1];return{type:"xArrow",label:e.funcName,body:a,below:r}});s(["\\cancel","\\bcancel","\\xcancel","\\sout","\\fbox"],{numArgs:1},function(e,t){var r=t[0];return{type:"enclose",label:e.funcName,body:r}});s(["\\over","\\choose","\\atop"],{numArgs:0,infix:true},function(e){var t=void 0;switch(e.funcName){case"\\over":t="\\frac";break;case"\\choose":t="\\binom";break;case"\\atop":t="\\\\atopfrac";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",replaceWith:t,token:e.token}});s(["\\\\","\\cr"],{numArgs:0,numOptionalArgs:1,argTypes:["size"]},function(e,t){var r=t[0];return{type:"cr",size:r}});s(["\\begin","\\end"],{numArgs:1,argTypes:["text"]},function(e,t){var r=t[0];if(r.type!=="ordgroup"){throw new i("Invalid environment name",r)}var a="";for(var n=0;n<r.value.length;++n){a+=r.value[n].value}return{type:"environment",name:a,nameGroup:r}})},{"./ParseError":10,"./parseData":26,"./utils":31}],24:[function(e,t,r){"use strict";function a(e,r){t.exports[e]=r}a("\\bgroup","{");a("\\egroup","}");a("\\begingroup","{");a("\\endgroup","}");a("\\overset","\\mathop{#2}\\limits^{#1}");a("\\underset","\\mathop{#2}\\limits_{#1}");a("\\boxed","\\fbox{\\displaystyle{#1}}");a("\\iff","\\;\\Longleftrightarrow\\;");a("\\implies","\\;\\Longrightarrow\\;");a("\\impliedby","\\;\\Longleftarrow\\;");a("\\ordinarycolon",":");a("\\vcentcolon","\\mathrel{\\mathop\\ordinarycolon}");a("\\dblcolon","\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon");a("\\coloneqq","\\vcentcolon\\mathrel{\\mkern-1.2mu}=");a("\\Coloneqq","\\dblcolon\\mathrel{\\mkern-1.2mu}=");a("\\coloneq","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}");a("\\Coloneq","\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}");a("\\eqqcolon","=\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\Eqqcolon","=\\mathrel{\\mkern-1.2mu}\\dblcolon");a("\\eqcolon","\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\Eqcolon","\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon");a("\\colonapprox","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx");a("\\Colonapprox","\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx");a("\\colonsim","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim");a("\\Colonsim","\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim");a("\\ratio","\\vcentcolon");a("\\coloncolon","\\dblcolon");a("\\colonequals","\\coloneqq");a("\\coloncolonequals","\\Coloneqq");a("\\equalscolon","\\eqqcolon");a("\\equalscoloncolon","\\Eqqcolon");a("\\colonminus","\\coloneq");a("\\coloncolonminus","\\Coloneq");a("\\minuscolon","\\eqcolon");a("\\minuscoloncolon","\\Eqcolon");a("\\coloncolonapprox","\\Colonapprox");a("\\coloncolonsim","\\Colonsim");a("\\simcolon","\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\simcoloncolon","\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon");a("\\approxcolon","\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\approxcoloncolon","\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon")},{}],25:[function(e,t,r){"use strict";var a=e("./utils");function i(e,t){this.type=e;this.attributes={};this.children=t||[]}i.prototype.setAttribute=function(e,t){this.attributes[e]=t};i.prototype.toNode=function(){var e=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e.setAttribute(t,this.attributes[t])}}for(var r=0;r<this.children.length;r++){e.appendChild(this.children[r].toNode())}return e};i.prototype.toMarkup=function(){var e="<"+this.type;for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e+=" "+t+'="';e+=a.escape(this.attributes[t]);e+='"'}}e+=">";for(var r=0;r<this.children.length;r++){e+=this.children[r].toMarkup()}e+="</"+this.type+">";return e};function n(e){this.text=e}n.prototype.toNode=function(){return document.createTextNode(this.text)};n.prototype.toMarkup=function(){return a.escape(this.text)};t.exports={MathNode:i,TextNode:n}},{"./utils":31}],26:[function(e,t,r){"use strict";function a(e,t,r,a,i){this.type=e;this.value=t;this.mode=r;if(a&&(!i||i.lexer===a.lexer)){this.lexer=a.lexer;this.start=a.start;this.end=(i||a).end}}t.exports={ParseNode:a}},{}],27:[function(e,t,r){"use strict";var a=e("./Parser");var i=function e(t,r){if(!(typeof t==="string"||t instanceof String)){throw new TypeError("KaTeX can only parse string typed expression")}var i=new a(t,r);return i.parse()};t.exports=i},{"./Parser":11}],28:[function(e,t,r){"use strict";var a=e("./buildCommon");var i=e("./mathMLTree");var n=e("./utils");var o={widehat:"^",widetilde:"~",undertilde:"~",overleftarrow:"\u2190",underleftarrow:"\u2190",xleftarrow:"\u2190",overrightarrow:"\u2192",underrightarrow:"\u2192",xrightarrow:"\u2192",underbrace:"\u23b5",overbrace:"\u23de",overleftrightarrow:"\u2194",underleftrightarrow:"\u2194",xleftrightarrow:"\u2194",Overrightarrow:"\u21d2",xRightarrow:"\u21d2",overleftharpoon:"\u21bc",xleftharpoonup:"\u21bc",overrightharpoon:"\u21c0",xrightharpoonup:"\u21c0",xLeftarrow:"\u21d0",xLeftrightarrow:"\u21d4",xhookleftarrow:"\u21a9",xhookrightarrow:"\u21aa",xmapsto:"\u21a6",xrightharpoondown:"\u21c1",xleftharpoondown:"\u21bd",xrightleftharpoons:"\u21cc",xleftrightharpoons:"\u21cb",xtwoheadleftarrow:"\u219e",xtwoheadrightarrow:"\u21a0",xLongequal:"=",xtofrom:"\u21c4"};var s=function e(t){var r=new i.MathNode("mo",[new i.TextNode(o[t.substr(1)])]);r.setAttribute("stretchy","true");return r};var l={overleftarrow:[.522,0,"leftarrow"],underleftarrow:[.522,0,"leftarrow"],xleftarrow:[.261,.261,"leftarrow"],overrightarrow:[.522,0,"rightarrow"],underrightarrow:[.522,0,"rightarrow"],xrightarrow:[.261,.261,"rightarrow"],overbrace:[.548,0,"overbrace"],underbrace:[.548,0,"underbrace"],overleftrightarrow:[.522,0,"leftrightarrow"],underleftrightarrow:[.522,0,"leftrightarrow"],xleftrightarrow:[.261,.261,"leftrightarrow"],Overrightarrow:[.56,0,"doublerightarrow"],xLeftarrow:[.28,.28,"doubleleftarrow"],xRightarrow:[.28,.28,"doublerightarrow"],xLeftrightarrow:[.28,.28,"doubleleftrightarrow"],overleftharpoon:[.522,0,"leftharpoon"],overrightharpoon:[.522,0,"rightharpoon"],xleftharpoonup:[.261,.261,"leftharpoon"],xrightharpoonup:[.261,.261,"rightharpoon"],xhookleftarrow:[.261,.261,"hookleftarrow"],xhookrightarrow:[.261,.261,"hookrightarrow"],overlinesegment:[.414,0,"linesegment"],underlinesegment:[.414,0,"linesegment"],xmapsto:[.261,.261,"mapsto"],xrightharpoondown:[.261,.261,"rightharpoondown"],xleftharpoondown:[.261,.261,"leftharpoondown"],xrightleftharpoons:[.358,.358,"rightleftharpoons"],xleftrightharpoons:[.358,.358,"leftrightharpoons"],overgroup:[.342,0,"overgroup"],undergroup:[.342,0,"undergroup"],xtwoheadleftarrow:[.167,.167,"twoheadleftarrow"],xtwoheadrightarrow:[.167,.167,"twoheadrightarrow"],xLongequal:[.167,.167,"longequal"],xtofrom:[.264,.264,"tofrom"]};var u=function e(t,r){var i=t.value.label.substr(1);var o=0;var s=0;var u=["stretchy"];var h="";if(n.contains(["widehat","widetilde","undertilde"],i)){var p=t.value.value.length;if(p>5){o=.312;h=(i==="widehat"?"widehat":"tilde")+"4"}else{var c=[1,1,2,2,3,3][p];if(i==="widehat"){o=[0,.24,.3,.3,.36,.36][p];h="widehat"+c}else{o=[0,.26,.3,.3,.34,.34][p];h="tilde"+c}}}else{var v=l[i];o=v[0];s=v[1];h=v[2];if(i.substr(0,1)==="x"){u.push("x-arrow")}}var f=void 0;if(r.color){u.push(h);u.push("mask");u.push(h+"-mask");f=a.makeSpan(u,[],r);f.style.backgroundColor=r.color}else{u.push(h);f=a.makeSpan(u,[],r)}f.height=o;f.depth=s;f.maxFontSize=1;return f};var h=function e(t,r,i,n,o){var s=a.makeSpan(["stretchy",i],[],o);if(o.color){if(i==="fbox"){s.style.borderColor=o.color}else{s.classes[2]=i+"-mask";s.style.backgroundColor=o.color}}s.height=t.height+t.depth+2*n;s.style.height=s.height+"em";if(/cancel/.test(i)&&r){s.maxFontSize=1.2}else{s.maxFontSize=1}return s};t.exports={encloseSpan:h,mathMLnode:s,svgSpan:u}},{"./buildCommon":14,"./mathMLTree":25,"./utils":31}],29:[function(e,t,r){"use strict";t.exports={math:{},text:{}};function a(e,r,a,i,n){t.exports[e][n]={font:r,group:a,replace:i}}var i="math";var n="text";var o="main";var s="ams";var l="accent";var u="bin";var h="close";var p="inner";var c="mathord";var v="op";var f="open";var m="punct";var d="rel";var g="spacing";var y="textord";a(i,o,d,"\u2261","\\equiv");a(i,o,d,"\u227a","\\prec");a(i,o,d,"\u227b","\\succ");a(i,o,d,"\u223c","\\sim");a(i,o,d,"\u22a5","\\perp");a(i,o,d,"\u2aaf","\\preceq");a(i,o,d,"\u2ab0","\\succeq");a(i,o,d,"\u2243","\\simeq");a(i,o,d,"\u2223","\\mid");a(i,o,d,"\u226a","\\ll");a(i,o,d,"\u226b","\\gg");a(i,o,d,"\u224d","\\asymp");a(i,o,d,"\u2225","\\parallel");a(i,o,d,"\u22c8","\\bowtie");a(i,o,d,"\u2323","\\smile");a(i,o,d,"\u2291","\\sqsubseteq");a(i,o,d,"\u2292","\\sqsupseteq");a(i,o,d,"\u2250","\\doteq");a(i,o,d,"\u2322","\\frown");a(i,o,d,"\u220b","\\ni");a(i,o,d,"\u221d","\\propto");a(i,o,d,"\u22a2","\\vdash");a(i,o,d,"\u22a3","\\dashv");a(i,o,d,"\u220b","\\owns");
a(i,o,m,".","\\ldotp");a(i,o,m,"\u22c5","\\cdotp");a(i,o,y,"#","\\#");a(n,o,y,"#","\\#");a(i,o,y,"&","\\&");a(n,o,y,"&","\\&");a(i,o,y,"\u2135","\\aleph");a(i,o,y,"\u2200","\\forall");a(i,o,y,"\u210f","\\hbar");a(i,o,y,"\u2203","\\exists");a(i,o,y,"\u2207","\\nabla");a(i,o,y,"\u266d","\\flat");a(i,o,y,"\u2113","\\ell");a(i,o,y,"\u266e","\\natural");a(i,o,y,"\u2663","\\clubsuit");a(i,o,y,"\u2118","\\wp");a(i,o,y,"\u266f","\\sharp");a(i,o,y,"\u2662","\\diamondsuit");a(i,o,y,"\u211c","\\Re");a(i,o,y,"\u2661","\\heartsuit");a(i,o,y,"\u2111","\\Im");a(i,o,y,"\u2660","\\spadesuit");a(i,o,y,"\u2020","\\dag");a(n,o,y,"\u2020","\\dag");a(n,o,y,"\u2020","\\textdagger");a(i,o,y,"\u2021","\\ddag");a(n,o,y,"\u2021","\\ddag");a(n,o,y,"\u2020","\\textdaggerdbl");a(i,o,h,"\u23b1","\\rmoustache");a(i,o,f,"\u23b0","\\lmoustache");a(i,o,h,"\u27ef","\\rgroup");a(i,o,f,"\u27ee","\\lgroup");a(i,o,u,"\u2213","\\mp");a(i,o,u,"\u2296","\\ominus");a(i,o,u,"\u228e","\\uplus");a(i,o,u,"\u2293","\\sqcap");a(i,o,u,"\u2217","\\ast");a(i,o,u,"\u2294","\\sqcup");a(i,o,u,"\u25ef","\\bigcirc");a(i,o,u,"\u2219","\\bullet");a(i,o,u,"\u2021","\\ddagger");a(i,o,u,"\u2240","\\wr");a(i,o,u,"\u2a3f","\\amalg");a(i,o,d,"\u27f5","\\longleftarrow");a(i,o,d,"\u21d0","\\Leftarrow");a(i,o,d,"\u27f8","\\Longleftarrow");a(i,o,d,"\u27f6","\\longrightarrow");a(i,o,d,"\u21d2","\\Rightarrow");a(i,o,d,"\u27f9","\\Longrightarrow");a(i,o,d,"\u2194","\\leftrightarrow");a(i,o,d,"\u27f7","\\longleftrightarrow");a(i,o,d,"\u21d4","\\Leftrightarrow");a(i,o,d,"\u27fa","\\Longleftrightarrow");a(i,o,d,"\u21a6","\\mapsto");a(i,o,d,"\u27fc","\\longmapsto");a(i,o,d,"\u2197","\\nearrow");a(i,o,d,"\u21a9","\\hookleftarrow");a(i,o,d,"\u21aa","\\hookrightarrow");a(i,o,d,"\u2198","\\searrow");a(i,o,d,"\u21bc","\\leftharpoonup");a(i,o,d,"\u21c0","\\rightharpoonup");a(i,o,d,"\u2199","\\swarrow");a(i,o,d,"\u21bd","\\leftharpoondown");a(i,o,d,"\u21c1","\\rightharpoondown");a(i,o,d,"\u2196","\\nwarrow");a(i,o,d,"\u21cc","\\rightleftharpoons");a(i,s,d,"\u226e","\\nless");a(i,s,d,"\ue010","\\nleqslant");a(i,s,d,"\ue011","\\nleqq");a(i,s,d,"\u2a87","\\lneq");a(i,s,d,"\u2268","\\lneqq");a(i,s,d,"\ue00c","\\lvertneqq");a(i,s,d,"\u22e6","\\lnsim");a(i,s,d,"\u2a89","\\lnapprox");a(i,s,d,"\u2280","\\nprec");a(i,s,d,"\u22e0","\\npreceq");a(i,s,d,"\u22e8","\\precnsim");a(i,s,d,"\u2ab9","\\precnapprox");a(i,s,d,"\u2241","\\nsim");a(i,s,d,"\ue006","\\nshortmid");a(i,s,d,"\u2224","\\nmid");a(i,s,d,"\u22ac","\\nvdash");a(i,s,d,"\u22ad","\\nvDash");a(i,s,d,"\u22ea","\\ntriangleleft");a(i,s,d,"\u22ec","\\ntrianglelefteq");a(i,s,d,"\u228a","\\subsetneq");a(i,s,d,"\ue01a","\\varsubsetneq");a(i,s,d,"\u2acb","\\subsetneqq");a(i,s,d,"\ue017","\\varsubsetneqq");a(i,s,d,"\u226f","\\ngtr");a(i,s,d,"\ue00f","\\ngeqslant");a(i,s,d,"\ue00e","\\ngeqq");a(i,s,d,"\u2a88","\\gneq");a(i,s,d,"\u2269","\\gneqq");a(i,s,d,"\ue00d","\\gvertneqq");a(i,s,d,"\u22e7","\\gnsim");a(i,s,d,"\u2a8a","\\gnapprox");a(i,s,d,"\u2281","\\nsucc");a(i,s,d,"\u22e1","\\nsucceq");a(i,s,d,"\u22e9","\\succnsim");a(i,s,d,"\u2aba","\\succnapprox");a(i,s,d,"\u2246","\\ncong");a(i,s,d,"\ue007","\\nshortparallel");a(i,s,d,"\u2226","\\nparallel");a(i,s,d,"\u22af","\\nVDash");a(i,s,d,"\u22eb","\\ntriangleright");a(i,s,d,"\u22ed","\\ntrianglerighteq");a(i,s,d,"\ue018","\\nsupseteqq");a(i,s,d,"\u228b","\\supsetneq");a(i,s,d,"\ue01b","\\varsupsetneq");a(i,s,d,"\u2acc","\\supsetneqq");a(i,s,d,"\ue019","\\varsupsetneqq");a(i,s,d,"\u22ae","\\nVdash");a(i,s,d,"\u2ab5","\\precneqq");a(i,s,d,"\u2ab6","\\succneqq");a(i,s,d,"\ue016","\\nsubseteqq");a(i,s,u,"\u22b4","\\unlhd");a(i,s,u,"\u22b5","\\unrhd");a(i,s,d,"\u219a","\\nleftarrow");a(i,s,d,"\u219b","\\nrightarrow");a(i,s,d,"\u21cd","\\nLeftarrow");a(i,s,d,"\u21cf","\\nRightarrow");a(i,s,d,"\u21ae","\\nleftrightarrow");a(i,s,d,"\u21ce","\\nLeftrightarrow");a(i,s,d,"\u25b3","\\vartriangle");a(i,s,y,"\u210f","\\hslash");a(i,s,y,"\u25bd","\\triangledown");a(i,s,y,"\u25ca","\\lozenge");a(i,s,y,"\u24c8","\\circledS");a(i,s,y,"\xae","\\circledR");a(n,s,y,"\xae","\\circledR");a(i,s,y,"\u2221","\\measuredangle");a(i,s,y,"\u2204","\\nexists");a(i,s,y,"\u2127","\\mho");a(i,s,y,"\u2132","\\Finv");a(i,s,y,"\u2141","\\Game");a(i,s,y,"k","\\Bbbk");a(i,s,y,"\u2035","\\backprime");a(i,s,y,"\u25b2","\\blacktriangle");a(i,s,y,"\u25bc","\\blacktriangledown");a(i,s,y,"\u25a0","\\blacksquare");a(i,s,y,"\u29eb","\\blacklozenge");a(i,s,y,"\u2605","\\bigstar");a(i,s,y,"\u2222","\\sphericalangle");a(i,s,y,"\u2201","\\complement");a(i,s,y,"\xf0","\\eth");a(i,s,y,"\u2571","\\diagup");a(i,s,y,"\u2572","\\diagdown");a(i,s,y,"\u25a1","\\square");a(i,s,y,"\u25a1","\\Box");a(i,s,y,"\u25ca","\\Diamond");a(i,s,y,"\xa5","\\yen");a(i,s,y,"\u2713","\\checkmark");a(n,s,y,"\u2713","\\checkmark");a(i,s,y,"\u2136","\\beth");a(i,s,y,"\u2138","\\daleth");a(i,s,y,"\u2137","\\gimel");a(i,s,y,"\u03dd","\\digamma");a(i,s,y,"\u03f0","\\varkappa");a(i,s,f,"\u250c","\\ulcorner");a(i,s,h,"\u2510","\\urcorner");a(i,s,f,"\u2514","\\llcorner");a(i,s,h,"\u2518","\\lrcorner");a(i,s,d,"\u2266","\\leqq");a(i,s,d,"\u2a7d","\\leqslant");a(i,s,d,"\u2a95","\\eqslantless");a(i,s,d,"\u2272","\\lesssim");a(i,s,d,"\u2a85","\\lessapprox");a(i,s,d,"\u224a","\\approxeq");a(i,s,u,"\u22d6","\\lessdot");a(i,s,d,"\u22d8","\\lll");a(i,s,d,"\u2276","\\lessgtr");a(i,s,d,"\u22da","\\lesseqgtr");a(i,s,d,"\u2a8b","\\lesseqqgtr");a(i,s,d,"\u2251","\\doteqdot");a(i,s,d,"\u2253","\\risingdotseq");a(i,s,d,"\u2252","\\fallingdotseq");a(i,s,d,"\u223d","\\backsim");a(i,s,d,"\u22cd","\\backsimeq");a(i,s,d,"\u2ac5","\\subseteqq");a(i,s,d,"\u22d0","\\Subset");a(i,s,d,"\u228f","\\sqsubset");a(i,s,d,"\u227c","\\preccurlyeq");a(i,s,d,"\u22de","\\curlyeqprec");a(i,s,d,"\u227e","\\precsim");a(i,s,d,"\u2ab7","\\precapprox");a(i,s,d,"\u22b2","\\vartriangleleft");a(i,s,d,"\u22b4","\\trianglelefteq");a(i,s,d,"\u22a8","\\vDash");a(i,s,d,"\u22aa","\\Vvdash");a(i,s,d,"\u2323","\\smallsmile");a(i,s,d,"\u2322","\\smallfrown");a(i,s,d,"\u224f","\\bumpeq");a(i,s,d,"\u224e","\\Bumpeq");a(i,s,d,"\u2267","\\geqq");a(i,s,d,"\u2a7e","\\geqslant");a(i,s,d,"\u2a96","\\eqslantgtr");a(i,s,d,"\u2273","\\gtrsim");a(i,s,d,"\u2a86","\\gtrapprox");a(i,s,u,"\u22d7","\\gtrdot");a(i,s,d,"\u22d9","\\ggg");a(i,s,d,"\u2277","\\gtrless");a(i,s,d,"\u22db","\\gtreqless");a(i,s,d,"\u2a8c","\\gtreqqless");a(i,s,d,"\u2256","\\eqcirc");a(i,s,d,"\u2257","\\circeq");a(i,s,d,"\u225c","\\triangleq");a(i,s,d,"\u223c","\\thicksim");a(i,s,d,"\u2248","\\thickapprox");a(i,s,d,"\u2ac6","\\supseteqq");a(i,s,d,"\u22d1","\\Supset");a(i,s,d,"\u2290","\\sqsupset");a(i,s,d,"\u227d","\\succcurlyeq");a(i,s,d,"\u22df","\\curlyeqsucc");a(i,s,d,"\u227f","\\succsim");a(i,s,d,"\u2ab8","\\succapprox");a(i,s,d,"\u22b3","\\vartriangleright");a(i,s,d,"\u22b5","\\trianglerighteq");a(i,s,d,"\u22a9","\\Vdash");a(i,s,d,"\u2223","\\shortmid");a(i,s,d,"\u2225","\\shortparallel");a(i,s,d,"\u226c","\\between");a(i,s,d,"\u22d4","\\pitchfork");a(i,s,d,"\u221d","\\varpropto");a(i,s,d,"\u25c0","\\blacktriangleleft");a(i,s,d,"\u2234","\\therefore");a(i,s,d,"\u220d","\\backepsilon");a(i,s,d,"\u25b6","\\blacktriangleright");a(i,s,d,"\u2235","\\because");a(i,s,d,"\u22d8","\\llless");a(i,s,d,"\u22d9","\\gggtr");a(i,s,u,"\u22b2","\\lhd");a(i,s,u,"\u22b3","\\rhd");a(i,s,d,"\u2242","\\eqsim");a(i,o,d,"\u22c8","\\Join");a(i,s,d,"\u2251","\\Doteq");a(i,s,u,"\u2214","\\dotplus");a(i,s,u,"\u2216","\\smallsetminus");a(i,s,u,"\u22d2","\\Cap");a(i,s,u,"\u22d3","\\Cup");a(i,s,u,"\u2a5e","\\doublebarwedge");a(i,s,u,"\u229f","\\boxminus");a(i,s,u,"\u229e","\\boxplus");a(i,s,u,"\u22c7","\\divideontimes");a(i,s,u,"\u22c9","\\ltimes");a(i,s,u,"\u22ca","\\rtimes");a(i,s,u,"\u22cb","\\leftthreetimes");a(i,s,u,"\u22cc","\\rightthreetimes");a(i,s,u,"\u22cf","\\curlywedge");a(i,s,u,"\u22ce","\\curlyvee");a(i,s,u,"\u229d","\\circleddash");a(i,s,u,"\u229b","\\circledast");a(i,s,u,"\u22c5","\\centerdot");a(i,s,u,"\u22ba","\\intercal");a(i,s,u,"\u22d2","\\doublecap");a(i,s,u,"\u22d3","\\doublecup");a(i,s,u,"\u22a0","\\boxtimes");a(i,s,d,"\u21e2","\\dashrightarrow");a(i,s,d,"\u21e0","\\dashleftarrow");a(i,s,d,"\u21c7","\\leftleftarrows");a(i,s,d,"\u21c6","\\leftrightarrows");a(i,s,d,"\u21da","\\Lleftarrow");a(i,s,d,"\u219e","\\twoheadleftarrow");a(i,s,d,"\u21a2","\\leftarrowtail");a(i,s,d,"\u21ab","\\looparrowleft");a(i,s,d,"\u21cb","\\leftrightharpoons");a(i,s,d,"\u21b6","\\curvearrowleft");a(i,s,d,"\u21ba","\\circlearrowleft");a(i,s,d,"\u21b0","\\Lsh");a(i,s,d,"\u21c8","\\upuparrows");a(i,s,d,"\u21bf","\\upharpoonleft");a(i,s,d,"\u21c3","\\downharpoonleft");a(i,s,d,"\u22b8","\\multimap");a(i,s,d,"\u21ad","\\leftrightsquigarrow");a(i,s,d,"\u21c9","\\rightrightarrows");a(i,s,d,"\u21c4","\\rightleftarrows");a(i,s,d,"\u21a0","\\twoheadrightarrow");a(i,s,d,"\u21a3","\\rightarrowtail");a(i,s,d,"\u21ac","\\looparrowright");a(i,s,d,"\u21b7","\\curvearrowright");a(i,s,d,"\u21bb","\\circlearrowright");a(i,s,d,"\u21b1","\\Rsh");a(i,s,d,"\u21ca","\\downdownarrows");a(i,s,d,"\u21be","\\upharpoonright");a(i,s,d,"\u21c2","\\downharpoonright");a(i,s,d,"\u21dd","\\rightsquigarrow");a(i,s,d,"\u21dd","\\leadsto");a(i,s,d,"\u21db","\\Rrightarrow");a(i,s,d,"\u21be","\\restriction");a(i,o,y,"\u2018","`");a(i,o,y,"$","\\$");a(n,o,y,"$","\\$");a(n,o,y,"$","\\textdollar");a(i,o,y,"%","\\%");a(n,o,y,"%","\\%");a(i,o,y,"_","\\_");a(n,o,y,"_","\\_");a(n,o,y,"_","\\textunderscore");a(i,o,y,"\u2220","\\angle");a(i,o,y,"\u221e","\\infty");a(i,o,y,"\u2032","\\prime");a(i,o,y,"\u25b3","\\triangle");a(i,o,y,"\u0393","\\Gamma");a(i,o,y,"\u0394","\\Delta");a(i,o,y,"\u0398","\\Theta");a(i,o,y,"\u039b","\\Lambda");a(i,o,y,"\u039e","\\Xi");a(i,o,y,"\u03a0","\\Pi");a(i,o,y,"\u03a3","\\Sigma");a(i,o,y,"\u03a5","\\Upsilon");a(i,o,y,"\u03a6","\\Phi");a(i,o,y,"\u03a8","\\Psi");a(i,o,y,"\u03a9","\\Omega");a(i,o,y,"\xac","\\neg");a(i,o,y,"\xac","\\lnot");a(i,o,y,"\u22a4","\\top");a(i,o,y,"\u22a5","\\bot");a(i,o,y,"\u2205","\\emptyset");a(i,s,y,"\u2205","\\varnothing");a(i,o,c,"\u03b1","\\alpha");a(i,o,c,"\u03b2","\\beta");a(i,o,c,"\u03b3","\\gamma");a(i,o,c,"\u03b4","\\delta");a(i,o,c,"\u03f5","\\epsilon");a(i,o,c,"\u03b6","\\zeta");a(i,o,c,"\u03b7","\\eta");a(i,o,c,"\u03b8","\\theta");a(i,o,c,"\u03b9","\\iota");a(i,o,c,"\u03ba","\\kappa");a(i,o,c,"\u03bb","\\lambda");a(i,o,c,"\u03bc","\\mu");a(i,o,c,"\u03bd","\\nu");a(i,o,c,"\u03be","\\xi");a(i,o,c,"o","\\omicron");a(i,o,c,"\u03c0","\\pi");a(i,o,c,"\u03c1","\\rho");a(i,o,c,"\u03c3","\\sigma");a(i,o,c,"\u03c4","\\tau");a(i,o,c,"\u03c5","\\upsilon");a(i,o,c,"\u03d5","\\phi");a(i,o,c,"\u03c7","\\chi");a(i,o,c,"\u03c8","\\psi");a(i,o,c,"\u03c9","\\omega");a(i,o,c,"\u03b5","\\varepsilon");a(i,o,c,"\u03d1","\\vartheta");a(i,o,c,"\u03d6","\\varpi");a(i,o,c,"\u03f1","\\varrho");a(i,o,c,"\u03c2","\\varsigma");a(i,o,c,"\u03c6","\\varphi");a(i,o,u,"\u2217","*");a(i,o,u,"+","+");a(i,o,u,"\u2212","-");a(i,o,u,"\u22c5","\\cdot");a(i,o,u,"\u2218","\\circ");a(i,o,u,"\xf7","\\div");a(i,o,u,"\xb1","\\pm");a(i,o,u,"\xd7","\\times");a(i,o,u,"\u2229","\\cap");a(i,o,u,"\u222a","\\cup");a(i,o,u,"\u2216","\\setminus");a(i,o,u,"\u2227","\\land");a(i,o,u,"\u2228","\\lor");a(i,o,u,"\u2227","\\wedge");a(i,o,u,"\u2228","\\vee");a(i,o,y,"\u221a","\\surd");a(i,o,f,"(","(");a(i,o,f,"[","[");a(i,o,f,"\u27e8","\\langle");a(i,o,f,"\u2223","\\lvert");a(i,o,f,"\u2225","\\lVert");a(i,o,h,")",")");a(i,o,h,"]","]");a(i,o,h,"?","?");a(i,o,h,"!","!");a(i,o,h,"\u27e9","\\rangle");a(i,o,h,"\u2223","\\rvert");a(i,o,h,"\u2225","\\rVert");a(i,o,d,"=","=");a(i,o,d,"<","<");a(i,o,d,">",">");a(i,o,d,":",":");a(i,o,d,"\u2248","\\approx");a(i,o,d,"\u2245","\\cong");a(i,o,d,"\u2265","\\ge");a(i,o,d,"\u2265","\\geq");a(i,o,d,"\u2190","\\gets");a(i,o,d,">","\\gt");a(i,o,d,"\u2208","\\in");a(i,o,d,"\u2209","\\notin");a(i,o,d,"\u2282","\\subset");a(i,o,d,"\u2283","\\supset");a(i,o,d,"\u2286","\\subseteq");a(i,o,d,"\u2287","\\supseteq");a(i,s,d,"\u2288","\\nsubseteq");a(i,s,d,"\u2289","\\nsupseteq");a(i,o,d,"\u22a8","\\models");a(i,o,d,"\u2190","\\leftarrow");a(i,o,d,"\u2264","\\le");a(i,o,d,"\u2264","\\leq");a(i,o,d,"<","\\lt");a(i,o,d,"\u2260","\\ne");a(i,o,d,"\u2260","\\neq");a(i,o,d,"\u2192","\\rightarrow");a(i,o,d,"\u2192","\\to");a(i,s,d,"\u2271","\\ngeq");a(i,s,d,"\u2270","\\nleq");a(i,o,g,null,"\\!");a(i,o,g,"\xa0","\\ ");a(i,o,g,"\xa0","~");a(i,o,g,null,"\\,");a(i,o,g,null,"\\:");a(i,o,g,null,"\\;");a(i,o,g,null,"\\enspace");a(i,o,g,null,"\\qquad");a(i,o,g,null,"\\quad");a(i,o,g,"\xa0","\\space");a(i,o,m,",",",");a(i,o,m,";",";");a(i,o,m,":","\\colon");a(i,s,u,"\u22bc","\\barwedge");a(i,s,u,"\u22bb","\\veebar");a(i,o,u,"\u2299","\\odot");a(i,o,u,"\u2295","\\oplus");a(i,o,u,"\u2297","\\otimes");a(i,o,y,"\u2202","\\partial");a(i,o,u,"\u2298","\\oslash");a(i,s,u,"\u229a","\\circledcirc");a(i,s,u,"\u22a1","\\boxdot");a(i,o,u,"\u25b3","\\bigtriangleup");a(i,o,u,"\u25bd","\\bigtriangledown");a(i,o,u,"\u2020","\\dagger");a(i,o,u,"\u22c4","\\diamond");a(i,o,u,"\u22c6","\\star");a(i,o,u,"\u25c3","\\triangleleft");a(i,o,u,"\u25b9","\\triangleright");a(i,o,f,"{","\\{");a(n,o,y,"{","\\{");a(n,o,y,"{","\\textbraceleft");a(i,o,h,"}","\\}");a(n,o,y,"}","\\}");a(n,o,y,"}","\\textbraceright");a(i,o,f,"{","\\lbrace");a(i,o,h,"}","\\rbrace");a(i,o,f,"[","\\lbrack");a(i,o,h,"]","\\rbrack");a(n,o,y,"<","\\textless");a(n,o,y,">","\\textgreater");a(i,o,f,"\u230a","\\lfloor");a(i,o,h,"\u230b","\\rfloor");a(i,o,f,"\u2308","\\lceil");a(i,o,h,"\u2309","\\rceil");a(i,o,y,"\\","\\backslash");a(i,o,y,"\u2223","|");a(i,o,y,"\u2223","\\vert");a(n,o,y,"|","\\textbar");a(i,o,y,"\u2225","\\|");a(i,o,y,"\u2225","\\Vert");a(n,o,y,"\u2225","\\textbardbl");a(i,o,d,"\u2191","\\uparrow");a(i,o,d,"\u21d1","\\Uparrow");a(i,o,d,"\u2193","\\downarrow");a(i,o,d,"\u21d3","\\Downarrow");a(i,o,d,"\u2195","\\updownarrow");a(i,o,d,"\u21d5","\\Updownarrow");a(i,o,v,"\u2210","\\coprod");a(i,o,v,"\u22c1","\\bigvee");a(i,o,v,"\u22c0","\\bigwedge");a(i,o,v,"\u2a04","\\biguplus");a(i,o,v,"\u22c2","\\bigcap");a(i,o,v,"\u22c3","\\bigcup");a(i,o,v,"\u222b","\\int");a(i,o,v,"\u222b","\\intop");a(i,o,v,"\u222c","\\iint");a(i,o,v,"\u222d","\\iiint");a(i,o,v,"\u220f","\\prod");a(i,o,v,"\u2211","\\sum");a(i,o,v,"\u2a02","\\bigotimes");a(i,o,v,"\u2a01","\\bigoplus");a(i,o,v,"\u2a00","\\bigodot");a(i,o,v,"\u222e","\\oint");a(i,o,v,"\u2a06","\\bigsqcup");a(i,o,v,"\u222b","\\smallint");a(n,o,p,"\u2026","\\textellipsis");a(i,o,p,"\u2026","\\mathellipsis");a(n,o,p,"\u2026","\\ldots");a(i,o,p,"\u2026","\\ldots");a(i,o,p,"\u22ef","\\cdots");a(i,o,p,"\u22f1","\\ddots");a(i,o,y,"\u22ee","\\vdots");a(i,o,l,"\xb4","\\acute");a(i,o,l,"`","\\grave");a(i,o,l,"\xa8","\\ddot");a(i,o,l,"~","\\tilde");a(i,o,l,"\xaf","\\bar");a(i,o,l,"\u02d8","\\breve");a(i,o,l,"\u02c7","\\check");a(i,o,l,"^","\\hat");a(i,o,l,"\u20d7","\\vec");a(i,o,l,"\u02d9","\\dot");a(i,o,c,"\u0131","\\imath");a(i,o,c,"\u0237","\\jmath");a(n,o,y,"\u2013","--");a(n,o,y,"\u2013","\\textendash");a(n,o,y,"\u2014","---");a(n,o,y,"\u2014","\\textemdash");a(n,o,y,"\u2018","`");a(n,o,y,"\u2018","\\textquoteleft");a(n,o,y,"\u2019","'");a(n,o,y,"\u2019","\\textquoteright");a(n,o,y,"\u201c","``");a(n,o,y,"\u201c","\\textquotedblleft");a(n,o,y,"\u201d","''");a(n,o,y,"\u201d","\\textquotedblright");a(i,o,y,"\xb0","\\degree");a(n,o,y,"\xb0","\\degree");a(i,o,c,"\xa3","\\pounds");a(i,o,c,"\xa3","\\mathsterling");a(n,o,c,"\xa3","\\pounds");a(n,o,c,"\xa3","\\textsterling");a(i,s,y,"\u2720","\\maltese");a(n,s,y,"\u2720","\\maltese");a(n,o,g,"\xa0","\\ ");a(n,o,g,"\xa0"," ");a(n,o,g,"\xa0","~");var x='0123456789/@."';for(var b=0;b<x.length;b++){var w=x.charAt(b);a(i,o,y,w,w)}var k='0123456789!@*()-=+[]<>|";:?/.,';for(var z=0;z<k.length;z++){var M=k.charAt(z);a(n,o,y,M,M)}var S="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var A=0;A<S.length;A++){var N=S.charAt(A);a(i,o,c,N,N);a(n,o,y,N,N)}for(var T=192;T<=214;T++){var q=String.fromCharCode(T);a(n,o,y,q,q)}for(var C=216;C<=246;C++){var E=String.fromCharCode(C);a(n,o,y,E,E)}for(var O=248;O<=255;O++){var R=String.fromCharCode(O);a(n,o,y,R,R)}for(var L=1040;L<=1103;L++){var D=String.fromCharCode(L);a(n,o,y,D,D)}a(n,o,y,"\u2013","\u2013");a(n,o,y,"\u2014","\u2014");a(n,o,y,"\u2018","\u2018");a(n,o,y,"\u2019","\u2019");a(n,o,y,"\u201c","\u201c");a(n,o,y,"\u201d","\u201d")},{}],30:[function(e,t,r){"use strict";var a=/[\uAC00-\uD7AF]/;var i=/[\u3040-\u309F]|[\u30A0-\u30FF]|[\u4E00-\u9FAF]|[\uAC00-\uD7AF]/;t.exports={cjkRegex:i,hangulRegex:a}},{}],31:[function(e,t,r){"use strict";var a=Array.prototype.indexOf;var i=function e(t,r){if(t==null){return-1}if(a&&t.indexOf===a){return t.indexOf(r)}var i=t.length;for(var n=0;n<i;n++){if(t[n]===r){return n}}return-1};var n=function e(t,r){return i(t,r)!==-1};var o=function e(t,r){return t===undefined?r:t};var s=/([A-Z])/g;var l=function e(t){return t.replace(s,"-$1").toLowerCase()};var u={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"};var h=/[&><"']/g;function p(e){return u[e]}function c(e){return(""+e).replace(h,p)}var v=void 0;if(typeof document!=="undefined"){var f=document.createElement("span");if("textContent"in f){v=function e(t,r){t.textContent=r}}else{v=function e(t,r){t.innerText=r}}}function m(e){v(e,"")}t.exports={contains:n,deflt:o,escape:c,hyphenate:l,indexOf:i,setTextContent:v,clearNode:m}},{}]},{},[1])(1)});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],2:[function(require,module,exports){
/*global define:false */
/**
 * Copyright 2016 Craig Campbell
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Mousetrap is a simple keyboard shortcut library for Javascript with
 * no external dependencies
 *
 * @version 1.6.0
 * @url craig.is/killing/mice
 */
(function(window, document, undefined) {

    // Check if mousetrap is used inside browser, if not, return
    if (!window) {
        return;
    }

    /**
     * mapping of special keycodes to their corresponding keys
     *
     * everything in this dictionary cannot use keypress events
     * so it has to be here to map to the correct keycodes for
     * keyup/keydown events
     *
     * @type {Object}
     */
    var _MAP = {
        8: 'backspace',
        9: 'tab',
        13: 'enter',
        16: 'shift',
        17: 'ctrl',
        18: 'alt',
        20: 'capslock',
        27: 'esc',
        32: 'space',
        33: 'pageup',
        34: 'pagedown',
        35: 'end',
        36: 'home',
        37: 'left',
        38: 'up',
        39: 'right',
        40: 'down',
        45: 'ins',
        46: 'del',
        91: 'meta',
        93: 'meta',
        224: 'meta'
    };

    /**
     * mapping for special characters so they can support
     *
     * this dictionary is only used incase you want to bind a
     * keyup or keydown event to one of these keys
     *
     * @type {Object}
     */
    var _KEYCODE_MAP = {
        106: '*',
        107: '+',
        109: '-',
        110: '.',
        111 : '/',
        186: ';',
        187: '=',
        188: ',',
        189: '-',
        190: '.',
        191: '/',
        192: '`',
        219: '[',
        220: '\\',
        221: ']',
        222: '\''
    };

    /**
     * this is a mapping of keys that require shift on a US keypad
     * back to the non shift equivelents
     *
     * this is so you can use keyup events with these keys
     *
     * note that this will only work reliably on US keyboards
     *
     * @type {Object}
     */
    var _SHIFT_MAP = {
        '~': '`',
        '!': '1',
        '@': '2',
        '#': '3',
        '$': '4',
        '%': '5',
        '^': '6',
        '&': '7',
        '*': '8',
        '(': '9',
        ')': '0',
        '_': '-',
        '+': '=',
        ':': ';',
        '\"': '\'',
        '<': ',',
        '>': '.',
        '?': '/',
        '|': '\\'
    };

    /**
     * this is a list of special strings you can use to map
     * to modifier keys when you specify your keyboard shortcuts
     *
     * @type {Object}
     */
    var _SPECIAL_ALIASES = {
        'option': 'alt',
        'command': 'meta',
        'return': 'enter',
        'escape': 'esc',
        'plus': '+',
        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'
    };

    /**
     * variable to store the flipped version of _MAP from above
     * needed to check if we should use keypress or not when no action
     * is specified
     *
     * @type {Object|undefined}
     */
    var _REVERSE_MAP;

    /**
     * loop through the f keys, f1 to f19 and add them to the map
     * programatically
     */
    for (var i = 1; i < 20; ++i) {
        _MAP[111 + i] = 'f' + i;
    }

    /**
     * loop through to map numbers on the numeric keypad
     */
    for (i = 0; i <= 9; ++i) {
        _MAP[i + 96] = i;
    }

    /**
     * cross browser add event method
     *
     * @param {Element|HTMLDocument} object
     * @param {string} type
     * @param {Function} callback
     * @returns void
     */
    function _addEvent(object, type, callback) {
        if (object.addEventListener) {
            object.addEventListener(type, callback, false);
            return;
        }

        object.attachEvent('on' + type, callback);
    }

    /**
     * takes the event and returns the key character
     *
     * @param {Event} e
     * @return {string}
     */
    function _characterFromEvent(e) {

        // for keypress events we should return the character as is
        if (e.type == 'keypress') {
            var character = String.fromCharCode(e.which);

            // if the shift key is not pressed then it is safe to assume
            // that we want the character to be lowercase.  this means if
            // you accidentally have caps lock on then your key bindings
            // will continue to work
            //
            // the only side effect that might not be desired is if you
            // bind something like 'A' cause you want to trigger an
            // event when capital A is pressed caps lock will no longer
            // trigger the event.  shift+a will though.
            if (!e.shiftKey) {
                character = character.toLowerCase();
            }

            return character;
        }

        // for non keypress events the special maps are needed
        if (_MAP[e.which]) {
            return _MAP[e.which];
        }

        if (_KEYCODE_MAP[e.which]) {
            return _KEYCODE_MAP[e.which];
        }

        // if it is not in the special map

        // with keydown and keyup events the character seems to always
        // come in as an uppercase character whether you are pressing shift
        // or not.  we should make sure it is always lowercase for comparisons
        return String.fromCharCode(e.which).toLowerCase();
    }

    /**
     * checks if two arrays are equal
     *
     * @param {Array} modifiers1
     * @param {Array} modifiers2
     * @returns {boolean}
     */
    function _modifiersMatch(modifiers1, modifiers2) {
        return modifiers1.sort().join(',') === modifiers2.sort().join(',');
    }

    /**
     * takes a key event and figures out what the modifiers are
     *
     * @param {Event} e
     * @returns {Array}
     */
    function _eventModifiers(e) {
        var modifiers = [];

        if (e.shiftKey) {
            modifiers.push('shift');
        }

        if (e.altKey) {
            modifiers.push('alt');
        }

        if (e.ctrlKey) {
            modifiers.push('ctrl');
        }

        if (e.metaKey) {
            modifiers.push('meta');
        }

        return modifiers;
    }

    /**
     * prevents default for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _preventDefault(e) {
        if (e.preventDefault) {
            e.preventDefault();
            return;
        }

        e.returnValue = false;
    }

    /**
     * stops propogation for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _stopPropagation(e) {
        if (e.stopPropagation) {
            e.stopPropagation();
            return;
        }

        e.cancelBubble = true;
    }

    /**
     * determines if the keycode specified is a modifier key or not
     *
     * @param {string} key
     * @returns {boolean}
     */
    function _isModifier(key) {
        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';
    }

    /**
     * reverses the map lookup so that we can look for specific keys
     * to see what can and can't use keypress
     *
     * @return {Object}
     */
    function _getReverseMap() {
        if (!_REVERSE_MAP) {
            _REVERSE_MAP = {};
            for (var key in _MAP) {

                // pull out the numeric keypad from here cause keypress should
                // be able to detect the keys from the character
                if (key > 95 && key < 112) {
                    continue;
                }

                if (_MAP.hasOwnProperty(key)) {
                    _REVERSE_MAP[_MAP[key]] = key;
                }
            }
        }
        return _REVERSE_MAP;
    }

    /**
     * picks the best action based on the key combination
     *
     * @param {string} key - character for key
     * @param {Array} modifiers
     * @param {string=} action passed in
     */
    function _pickBestAction(key, modifiers, action) {

        // if no action was picked in we should try to pick the one
        // that we think would work best for this key
        if (!action) {
            action = _getReverseMap()[key] ? 'keydown' : 'keypress';
        }

        // modifier keys don't work as expected with keypress,
        // switch to keydown
        if (action == 'keypress' && modifiers.length) {
            action = 'keydown';
        }

        return action;
    }

    /**
     * Converts from a string key combination to an array
     *
     * @param  {string} combination like "command+shift+l"
     * @return {Array}
     */
    function _keysFromString(combination) {
        if (combination === '+') {
            return ['+'];
        }

        combination = combination.replace(/\+{2}/g, '+plus');
        return combination.split('+');
    }

    /**
     * Gets info for a specific key combination
     *
     * @param  {string} combination key combination ("command+s" or "a" or "*")
     * @param  {string=} action
     * @returns {Object}
     */
    function _getKeyInfo(combination, action) {
        var keys;
        var key;
        var i;
        var modifiers = [];

        // take the keys from this pattern and figure out what the actual
        // pattern is all about
        keys = _keysFromString(combination);

        for (i = 0; i < keys.length; ++i) {
            key = keys[i];

            // normalize key names
            if (_SPECIAL_ALIASES[key]) {
                key = _SPECIAL_ALIASES[key];
            }

            // if this is not a keypress event then we should
            // be smart about using shift keys
            // this will only work for US keyboards however
            if (action && action != 'keypress' && _SHIFT_MAP[key]) {
                key = _SHIFT_MAP[key];
                modifiers.push('shift');
            }

            // if this key is a modifier then add it to the list of modifiers
            if (_isModifier(key)) {
                modifiers.push(key);
            }
        }

        // depending on what the key combination is
        // we will try to pick the best event for it
        action = _pickBestAction(key, modifiers, action);

        return {
            key: key,
            modifiers: modifiers,
            action: action
        };
    }

    function _belongsTo(element, ancestor) {
        if (element === null || element === document) {
            return false;
        }

        if (element === ancestor) {
            return true;
        }

        return _belongsTo(element.parentNode, ancestor);
    }

    function Mousetrap(targetElement) {
        var self = this;

        targetElement = targetElement || document;

        if (!(self instanceof Mousetrap)) {
            return new Mousetrap(targetElement);
        }

        /**
         * element to attach key events to
         *
         * @type {Element}
         */
        self.target = targetElement;

        /**
         * a list of all the callbacks setup via Mousetrap.bind()
         *
         * @type {Object}
         */
        self._callbacks = {};

        /**
         * direct map of string combinations to callbacks used for trigger()
         *
         * @type {Object}
         */
        self._directMap = {};

        /**
         * keeps track of what level each sequence is at since multiple
         * sequences can start out with the same sequence
         *
         * @type {Object}
         */
        var _sequenceLevels = {};

        /**
         * variable to store the setTimeout call
         *
         * @type {null|number}
         */
        var _resetTimer;

        /**
         * temporary state where we will ignore the next keyup
         *
         * @type {boolean|string}
         */
        var _ignoreNextKeyup = false;

        /**
         * temporary state where we will ignore the next keypress
         *
         * @type {boolean}
         */
        var _ignoreNextKeypress = false;

        /**
         * are we currently inside of a sequence?
         * type of action ("keyup" or "keydown" or "keypress") or false
         *
         * @type {boolean|string}
         */
        var _nextExpectedAction = false;

        /**
         * resets all sequence counters except for the ones passed in
         *
         * @param {Object} doNotReset
         * @returns void
         */
        function _resetSequences(doNotReset) {
            doNotReset = doNotReset || {};

            var activeSequences = false,
                key;

            for (key in _sequenceLevels) {
                if (doNotReset[key]) {
                    activeSequences = true;
                    continue;
                }
                _sequenceLevels[key] = 0;
            }

            if (!activeSequences) {
                _nextExpectedAction = false;
            }
        }

        /**
         * finds all callbacks that match based on the keycode, modifiers,
         * and action
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event|Object} e
         * @param {string=} sequenceName - name of the sequence we are looking for
         * @param {string=} combination
         * @param {number=} level
         * @returns {Array}
         */
        function _getMatches(character, modifiers, e, sequenceName, combination, level) {
            var i;
            var callback;
            var matches = [];
            var action = e.type;

            // if there are no events related to this keycode
            if (!self._callbacks[character]) {
                return [];
            }

            // if a modifier key is coming up on its own we should allow it
            if (action == 'keyup' && _isModifier(character)) {
                modifiers = [character];
            }

            // loop through all callbacks for the key that was pressed
            // and see if any of them match
            for (i = 0; i < self._callbacks[character].length; ++i) {
                callback = self._callbacks[character][i];

                // if a sequence name is not specified, but this is a sequence at
                // the wrong level then move onto the next match
                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {
                    continue;
                }

                // if the action we are looking for doesn't match the action we got
                // then we should keep going
                if (action != callback.action) {
                    continue;
                }

                // if this is a keypress event and the meta key and control key
                // are not pressed that means that we need to only look at the
                // character, otherwise check the modifiers as well
                //
                // chrome will not fire a keypress if meta or control is down
                // safari will fire a keypress if meta or meta+shift is down
                // firefox will fire a keypress if meta or control is down
                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {

                    // when you bind a combination or sequence a second time it
                    // should overwrite the first one.  if a sequenceName or
                    // combination is specified in this call it does just that
                    //
                    // @todo make deleting its own method?
                    var deleteCombo = !sequenceName && callback.combo == combination;
                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;
                    if (deleteCombo || deleteSequence) {
                        self._callbacks[character].splice(i, 1);
                    }

                    matches.push(callback);
                }
            }

            return matches;
        }

        /**
         * actually calls the callback function
         *
         * if your callback function returns false this will use the jquery
         * convention - prevent default and stop propogation on the event
         *
         * @param {Function} callback
         * @param {Event} e
         * @returns void
         */
        function _fireCallback(callback, e, combo, sequence) {

            // if this event should not happen stop here
            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {
                return;
            }

            if (callback(e, combo) === false) {
                _preventDefault(e);
                _stopPropagation(e);
            }
        }

        /**
         * handles a character key event
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event} e
         * @returns void
         */
        self._handleKey = function(character, modifiers, e) {
            var callbacks = _getMatches(character, modifiers, e);
            var i;
            var doNotReset = {};
            var maxLevel = 0;
            var processedSequenceCallback = false;

            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence
            for (i = 0; i < callbacks.length; ++i) {
                if (callbacks[i].seq) {
                    maxLevel = Math.max(maxLevel, callbacks[i].level);
                }
            }

            // loop through matching callbacks for this key event
            for (i = 0; i < callbacks.length; ++i) {

                // fire for all sequence callbacks
                // this is because if for example you have multiple sequences
                // bound such as "g i" and "g t" they both need to fire the
                // callback for matching g cause otherwise you can only ever
                // match the first one
                if (callbacks[i].seq) {

                    // only fire callbacks for the maxLevel to prevent
                    // subsequences from also firing
                    //
                    // for example 'a option b' should not cause 'option b' to fire
                    // even though 'option b' is part of the other sequence
                    //
                    // any sequences that do not match here will be discarded
                    // below by the _resetSequences call
                    if (callbacks[i].level != maxLevel) {
                        continue;
                    }

                    processedSequenceCallback = true;

                    // keep a list of which sequences were matches for later
                    doNotReset[callbacks[i].seq] = 1;
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);
                    continue;
                }

                // if there were no sequence matches but we are still here
                // that means this is a regular match so we should fire that
                if (!processedSequenceCallback) {
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);
                }
            }

            // if the key you pressed matches the type of sequence without
            // being a modifier (ie "keyup" or "keypress") then we should
            // reset all sequences that were not matched by this event
            //
            // this is so, for example, if you have the sequence "h a t" and you
            // type "h e a r t" it does not match.  in this case the "e" will
            // cause the sequence to reset
            //
            // modifier keys are ignored because you can have a sequence
            // that contains modifiers such as "enter ctrl+space" and in most
            // cases the modifier key will be pressed before the next key
            //
            // also if you have a sequence such as "ctrl+b a" then pressing the
            // "b" key will trigger a "keypress" and a "keydown"
            //
            // the "keydown" is expected when there is a modifier, but the
            // "keypress" ends up matching the _nextExpectedAction since it occurs
            // after and that causes the sequence to reset
            //
            // we ignore keypresses in a sequence that directly follow a keydown
            // for the same character
            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;
            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {
                _resetSequences(doNotReset);
            }

            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';
        };

        /**
         * handles a keydown event
         *
         * @param {Event} e
         * @returns void
         */
        function _handleKeyEvent(e) {

            // normalize e.which for key events
            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion
            if (typeof e.which !== 'number') {
                e.which = e.keyCode;
            }

            var character = _characterFromEvent(e);

            // no character found then stop
            if (!character) {
                return;
            }

            // need to use === for the character check because the character can be 0
            if (e.type == 'keyup' && _ignoreNextKeyup === character) {
                _ignoreNextKeyup = false;
                return;
            }

            self.handleKey(character, _eventModifiers(e), e);
        }

        /**
         * called to set a 1 second timeout on the specified sequence
         *
         * this is so after each key press in the sequence you have 1 second
         * to press the next key before you have to start over
         *
         * @returns void
         */
        function _resetSequenceTimer() {
            clearTimeout(_resetTimer);
            _resetTimer = setTimeout(_resetSequences, 1000);
        }

        /**
         * binds a key sequence to an event
         *
         * @param {string} combo - combo specified in bind call
         * @param {Array} keys
         * @param {Function} callback
         * @param {string=} action
         * @returns void
         */
        function _bindSequence(combo, keys, callback, action) {

            // start off by adding a sequence level record for this combination
            // and setting the level to 0
            _sequenceLevels[combo] = 0;

            /**
             * callback to increase the sequence level for this sequence and reset
             * all other sequences that were active
             *
             * @param {string} nextAction
             * @returns {Function}
             */
            function _increaseSequence(nextAction) {
                return function() {
                    _nextExpectedAction = nextAction;
                    ++_sequenceLevels[combo];
                    _resetSequenceTimer();
                };
            }

            /**
             * wraps the specified callback inside of another function in order
             * to reset all sequence counters as soon as this sequence is done
             *
             * @param {Event} e
             * @returns void
             */
            function _callbackAndReset(e) {
                _fireCallback(callback, e, combo);

                // we should ignore the next key up if the action is key down
                // or keypress.  this is so if you finish a sequence and
                // release the key the final key will not trigger a keyup
                if (action !== 'keyup') {
                    _ignoreNextKeyup = _characterFromEvent(e);
                }

                // weird race condition if a sequence ends with the key
                // another sequence begins with
                setTimeout(_resetSequences, 10);
            }

            // loop through keys one at a time and bind the appropriate callback
            // function.  for any key leading up to the final one it should
            // increase the sequence. after the final, it should reset all sequences
            //
            // if an action is specified in the original bind call then that will
            // be used throughout.  otherwise we will pass the action that the
            // next key in the sequence should match.  this allows a sequence
            // to mix and match keypress and keydown events depending on which
            // ones are better suited to the key provided
            for (var i = 0; i < keys.length; ++i) {
                var isFinal = i + 1 === keys.length;
                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);
                _bindSingle(keys[i], wrappedCallback, action, combo, i);
            }
        }

        /**
         * binds a single keyboard combination
         *
         * @param {string} combination
         * @param {Function} callback
         * @param {string=} action
         * @param {string=} sequenceName - name of sequence if part of sequence
         * @param {number=} level - what part of the sequence the command is
         * @returns void
         */
        function _bindSingle(combination, callback, action, sequenceName, level) {

            // store a direct mapped reference for use with Mousetrap.trigger
            self._directMap[combination + ':' + action] = callback;

            // make sure multiple spaces in a row become a single space
            combination = combination.replace(/\s+/g, ' ');

            var sequence = combination.split(' ');
            var info;

            // if this pattern is a sequence of keys then run through this method
            // to reprocess each pattern one key at a time
            if (sequence.length > 1) {
                _bindSequence(combination, sequence, callback, action);
                return;
            }

            info = _getKeyInfo(combination, action);

            // make sure to initialize array if this is the first time
            // a callback is added for this key
            self._callbacks[info.key] = self._callbacks[info.key] || [];

            // remove an existing match if there is one
            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);

            // add this call back to the array
            // if it is a sequence put it at the beginning
            // if not put it at the end
            //
            // this is important because the way these are processed expects
            // the sequence ones to come first
            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({
                callback: callback,
                modifiers: info.modifiers,
                action: info.action,
                seq: sequenceName,
                level: level,
                combo: combination
            });
        }

        /**
         * binds multiple combinations to the same callback
         *
         * @param {Array} combinations
         * @param {Function} callback
         * @param {string|undefined} action
         * @returns void
         */
        self._bindMultiple = function(combinations, callback, action) {
            for (var i = 0; i < combinations.length; ++i) {
                _bindSingle(combinations[i], callback, action);
            }
        };

        // start!
        _addEvent(targetElement, 'keypress', _handleKeyEvent);
        _addEvent(targetElement, 'keydown', _handleKeyEvent);
        _addEvent(targetElement, 'keyup', _handleKeyEvent);
    }

    /**
     * binds an event to mousetrap
     *
     * can be a single key, a combination of keys separated with +,
     * an array of keys, or a sequence of keys separated by spaces
     *
     * be sure to list the modifier keys first to make sure that the
     * correct key ends up getting bound (the last key in the pattern)
     *
     * @param {string|Array} keys
     * @param {Function} callback
     * @param {string=} action - 'keypress', 'keydown', or 'keyup'
     * @returns void
     */
    Mousetrap.prototype.bind = function(keys, callback, action) {
        var self = this;
        keys = keys instanceof Array ? keys : [keys];
        self._bindMultiple.call(self, keys, callback, action);
        return self;
    };

    /**
     * unbinds an event to mousetrap
     *
     * the unbinding sets the callback function of the specified key combo
     * to an empty function and deletes the corresponding key in the
     * _directMap dict.
     *
     * TODO: actually remove this from the _callbacks dictionary instead
     * of binding an empty function
     *
     * the keycombo+action has to be exactly the same as
     * it was defined in the bind method
     *
     * @param {string|Array} keys
     * @param {string} action
     * @returns void
     */
    Mousetrap.prototype.unbind = function(keys, action) {
        var self = this;
        return self.bind.call(self, keys, function() {}, action);
    };

    /**
     * triggers an event that has already been bound
     *
     * @param {string} keys
     * @param {string=} action
     * @returns void
     */
    Mousetrap.prototype.trigger = function(keys, action) {
        var self = this;
        if (self._directMap[keys + ':' + action]) {
            self._directMap[keys + ':' + action]({}, keys);
        }
        return self;
    };

    /**
     * resets the library back to its initial state.  this is useful
     * if you want to clear out the current keyboard shortcuts and bind
     * new ones - for example if you switch to another page
     *
     * @returns void
     */
    Mousetrap.prototype.reset = function() {
        var self = this;
        self._callbacks = {};
        self._directMap = {};
        return self;
    };

    /**
     * should we stop this event before firing off callbacks
     *
     * @param {Event} e
     * @param {Element} element
     * @return {boolean}
     */
    Mousetrap.prototype.stopCallback = function(e, element) {
        var self = this;

        // if the element has the class "mousetrap" then no need to stop
        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {
            return false;
        }

        if (_belongsTo(element, self.target)) {
            return false;
        }

        // stop for input, select, and textarea
        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;
    };

    /**
     * exposes _handleKey publicly so it can be overwritten by extensions
     */
    Mousetrap.prototype.handleKey = function() {
        var self = this;
        return self._handleKey.apply(self, arguments);
    };

    /**
     * allow custom key mappings
     */
    Mousetrap.addKeycodes = function(object) {
        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                _MAP[key] = object[key];
            }
        }
        _REVERSE_MAP = null;
    };

    /**
     * Init the global mousetrap functions
     *
     * This method is needed to allow the global mousetrap functions to work
     * now that mousetrap is a constructor function.
     */
    Mousetrap.init = function() {
        var documentMousetrap = Mousetrap(document);
        for (var method in documentMousetrap) {
            if (method.charAt(0) !== '_') {
                Mousetrap[method] = (function(method) {
                    return function() {
                        return documentMousetrap[method].apply(documentMousetrap, arguments);
                    };
                } (method));
            }
        }
    };

    Mousetrap.init();

    // expose mousetrap to the global object
    window.Mousetrap = Mousetrap;

    // expose as a common js module
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = Mousetrap;
    }

    // expose mousetrap as an AMD module
    if (typeof define === 'function' && define.amd) {
        define(function() {
            return Mousetrap;
        });
    }
}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);

},{}],3:[function(require,module,exports){
Mousetrap = require('mousetrap');
katex = require('../lib/katex/katex-modified.min.js');
GuppyBackend = require('./guppy_backend.js');
GuppyUtils = require('./guppy_utils.js');
GuppySymbols = require('./guppy_symbols.js');
GuppyHelp = require('./guppy_help.js');

/**
   @class
   @classdesc An instance of Guppy
   @param {string} guppy_div - The string ID of the element that should be converted to an editor
   @param {Object} [config] - The configuration options for this instance
   @param {Object} [config.events] - A dictionary of events
   @param {function} [config.events.ready] - Called when the instance is ready to render things. 
   @param {function} [config.events.change] - Called when the editor's content changes.  Argument will be a dictionary with keys `old` and `new` containing the old and new documents, respectively. 
   @param {function} [config.events.left_end] - Called when the cursor is at the left-most point and a command is received to move the cursor to the left (e.g., via the left arrow key).  Argument will be null.
   @param {function} [config.events.left_end] - Called when the cursor is at the right-most point and a command is received to move the cursor to the right (e.g., via the right arrow key).  Argument will be null.
   @param {function} [config.events.done] - Called when the enter key is pressed in the editor.
   @param {function} [config.events.completion] - Called when the editor outputs tab completion
      options.  Argument is a dictionary with the key `candidates`, a
      list of the options for tab-completion.
   @param {function} [config.events.debug] - Called when the editor outputs some debug information.
      Argument is a dictionary with the key `message`.
   @param {function} [config.events.error] - Called when the editor receives an error.  Argument is
      a dictionary with the key `message`.
   @param {function} [config.events.focus] - Called when the editor is focused or unfocused.
      Argument will have a single key `focused` which will be `true`
      or `false` according to whether the editor is newly focused or
      newly unfocused (respectively).
   @param {Object} [config.options] - A dictionary of options
   @param {string} [config.options.xml_content=<m><e/></m>] - An XML
      string with which to initialise the editor's state.
   @param {boolean} [config.options.autoreplace=true] - Determines
      whether or not to autoreplace typed text with the corresponding
      symbols when possible.
   @param {string} [config.options.blank=""] - A LaTeX string that
      specifies what the caret should look like when in a blank spot.
   @param {string} [config.options.empty_content=\color{red}{[?]}] - A
      LaTeX string that will be displayed when the editor is both
      inactive and contains no content.
   @param {string[]} [config.options.blacklist=[]] - A list of string
      symbol names, corresponding to symbols that should not be
      allowed in this instance of the editor.
   @param {string} [config.options.cliptype] - A string, either
      "text" or "latex".  If this option is present, when text is
      placed onto the editor clipboard, the contents of the editor
      will be rendered into either plain text or LaTeX (depending on
      the value of this option) and an attempt will be made to copy
      the result to the system clipboard.
   @constructor 
 */
var Guppy = function(guppy_div, config){
    var self = this;
    var config = config || {};
    var events = config['events'] || {}
    var options = config['options'] || {};

    if(typeof guppy_div === 'string' || guppy_div instanceof String){
	guppy_div = document.getElementById(guppy_div);
    }
    
    // Set the id on the div if it is not currently set.
    if(!(guppy_div.id)){
	var i = Guppy.max_uid || 0;
	while(document.getElementById("guppy_uid_"+i)) i++;
	Guppy.max_uid = i;
	guppy_div.id = "guppy_uid_"+i;
    }
    var i = Guppy.max_tabIndex || 0;
    guppy_div.tabIndex = i;
    Guppy.max_tabIndex = i+1;
    
    this.buttons_div = document.createElement("div");
    this.buttons_div.appendChild(Guppy.make_button("icons/keyboard.png", function(e) {}));
    this.buttons_div.appendChild(Guppy.make_button("icons/settings.png", function(e){}));
    this.buttons_div.appendChild(Guppy.make_button("icons/help.png", function(e){ self.toggle_help(); }));
    this.buttons_div.style = "position:absolute;bottom:0;right:0;padding:0 3px 3px 0;display:none;";

    guppy_div.addEventListener("mouseenter",function(e){self.buttons_div.style.display = "block";}, false);
    guppy_div.addEventListener("mouseleave",function(e){self.buttons_div.style.display = "none";}, false);
    this.editor_active = true;
    this.empty_content = options['empty_content'] || "\\red{[?]}"
    this.editor = guppy_div;
    this.blacklist = [];
    this.autoreplace = true;
    this.ready = false;

    this.events = {};
    
    Guppy.instances[guppy_div.id] = this;

    config['parent'] = self;

    /**   @member {GuppyBackend} */
    this.backend = new GuppyBackend(config);
    this.temp_cursor = {"node":null,"caret":0}
    this.editor.addEventListener("keydown",Guppy.key_down, false);
    this.editor.addEventListener("keyup",Guppy.key_up, false);
    this.editor.addEventListener("focus", function(e) { Guppy.kb.alt_down = false; if(self.activate) self.activate();}, false);
    if(Guppy.ready && !this.ready){
    	this.ready = true;
    	this.backend.fire_event("ready");
	this.render(true);
    }
    this.deactivate();
    this.recompute_locations_paths();
}

Guppy.instances = {};
Guppy.ready = false;

Guppy.active_guppy = null;

Guppy.make_button = function(url, cb){
    var b = document.createElement("img");
    b.setAttribute("class","guppy-button");
    b.style="cursor:pointer;height:16px;width:16px;padding-left:4px;opacity:0.5;";
    b.setAttribute("src", url);
    if(cb){
	b.onclick = function(e){
	    cb(e);
	    if(e.cancelBubble!=null) e.cancelBubble = true;
	    if(e.stopPropagation) e.stopPropagation();
	    e.preventDefault();
	    return false;
	};
    }
    return b;
}

Guppy.add_symbols = function(symbols){
    for(var s in symbols){
	var new_syms = GuppySymbols.add_symbols(s,symbols[s], GuppySymbols.symbols);
	for(var s in new_syms)
	    GuppySymbols.symbols[s] = new_syms[s];
    }
    for(var i in Guppy.instances){
	for(var s in symbols){
	    Guppy.instances[i].backend.symbols[s] = JSON.parse(JSON.stringify(symbols[s]));
	}
    }
}

Guppy.set_global_symbols = function(symbols){
    GuppySymbols.symbols = {};
    Guppy.add_symbols(symbols);
}

Guppy.reset_global_symbols = function(){
    for(var i in Guppy.instances){
	Guppy.instances[i].backend.symbols = JSON.parse(JSON.stringify(GuppySymbols.symbols));
    }
}

/** 
    Initialise the symbols for all instances of the editor
    @memberof Guppy
    @param {string[]} symbols - A list of URLs for symbol JSON files to request
*/
Guppy.init_symbols = function(symbols){
    document.body.appendChild(GuppyHelp);
    var all_ready = function(){
	Guppy.register_keyboard_handlers();
	for(var i in Guppy.instances){
	    Guppy.instances[i].ready = true;
	    Guppy.instances[i].render(true);
	    Guppy.instances[i].backend.symbols = JSON.parse(JSON.stringify(GuppySymbols.symbols));
	    Guppy.instances[i].backend.ready = true;
	    Guppy.instances[i].backend.fire_event("ready");
	    Guppy.instances[i].events["ready"] = null;
	}
	GuppyBackend.ready = true;
    }
    if(!(Array.isArray(symbols))){
	symbols = [symbols];
    }
    var calls = [];
    for(var i = 0; i < symbols.length; i++){
	var x = function outer(j){
	    return function(callback){
		var req = new XMLHttpRequest();
		req.onload = function(){
		    var syms = JSON.parse(this.responseText);
		    var templates = syms["_templates"];
		    if(templates){
			for(var i = 0; i < templates.length; i++){
			    var t = templates[i].template;
			    for(var v in templates[i].values){
				if(Object.prototype.toString.call(templates[i].values) == "[object Array]"){
				    var name = templates[i].values[v];
				    var args = {}
				}
				else{
				    var name = v;
				    var args = templates[i].values[v];
				}
				var sym = GuppySymbols.eval_template(JSON.parse(JSON.stringify(t)), name, args);
				GuppySymbols.symbols[name] = sym;
			    }
			}
		    }
		    for(var s in syms){
			GuppySymbols.symbols[s] = syms[s];
		    }
		    callback();
		};
		req.open("get", symbols[j], true);
		req.send();
	    }
	}(i);
	calls.push(x);
    }
    calls.push(all_ready);
    var j = 0;
    var cb = function(){
	j += 1;
	if(j < calls.length) calls[j](cb);
    }
    if(calls.length > 0) calls[0](cb);
}

Guppy.prototype.is_changed = function(){
    var bb = this.editor.getElementsByClassName("katex")[0];
    if(!bb) return;
    var rect = bb.getBoundingClientRect();
    if(this.bounding_box)
	ans = this.bounding_box.top != rect.top || this.bounding_box.bottom != rect.bottom || this.bounding_box.right != rect.right || this.bounding_box.left != rect.left;
    else
	ans = true;
    this.bounding_box = rect;
    return ans;
}

Guppy.prototype.toggle_help = function(){
    if(GuppyHelp.style.display == "none"){
	console.log("helping",document.documentElement.scrollTop, document.documentElement.scrollLeft);
	var r = this.editor.getBoundingClientRect();
	GuppyHelp.style.top = (r.bottom+document.documentElement.scrollTop) + "px";
	GuppyHelp.style.left = (r.left+document.documentElement.scrollLeft) + "px";
	GuppyHelp.style.display = "block";
    }
    else{
	console.log("unhelping");
	GuppyHelp.style.display = "none";
    }
}

Guppy.prototype.recompute_locations_paths = function(){
    ans = [];
    var bb = this.editor.getElementsByClassName("katex")[0];
    if(!bb) return;
    var rect = bb.getBoundingClientRect();
    ans.push({'path':'all',
	      'top':rect.top,
	      'bottom':rect.bottom,
	      'left':rect.left,
	      'right':rect.right});
    var elts = this.editor.getElementsByClassName("guppy_elt");
    for(var i = 0; i < elts.length; i++){
	var elt = elts[i];
	if(elt.nodeName == "mstyle") continue;
	var rect = elt.getBoundingClientRect();
	if(rect.top == 0 && rect.bottom == 0 && rect.left == 0 && rect.right == 0) continue;
	var cl = elt.classList;
	for(var j = 0; j < cl.length; j++){
	    if(cl[j].indexOf("guppy_loc") == 0){
		ans.push({'path':cl[j],
			  'top':rect.top,
			  'bottom':rect.bottom,
			  'left':rect.left,
			  'right':rect.right,
			  'mid_x':(rect.left+rect.right)/2,
			  'mid_y':(rect.bottom+rect.top)/2,
			  'blank':(' '+elt.className+' ').indexOf(' guppy_blank ') >= 0});
		break;
	    }
	}
    }
    this.boxes = ans;
}

Guppy.get_loc = function(x,y,current_node,current_caret){
    var g = Guppy.active_guppy;
    var min_dist = -1;
    var mid_dist = 0;
    var pos = "";
    var opt = null;
    var cur = null;
    var car = null;
    // check if we go to first or last element
    var bb = g.editor.getElementsByClassName("katex")[0];
    if(!bb) return;
    var rect = bb.getBoundingClientRect();
    if(current_node){
	var current_path = GuppyUtils.path_to(current_node);
	var current_pos = parseInt(current_path.substring(current_path.lastIndexOf("e")+1));
    }

    var boxes = g.boxes;
    if(!boxes) return;
    if(current_node){
	current_path = current_path.replace(/e[0-9]+$/,"e");
	var boxes2 = [];
	for(var i = 0; i < boxes.length; i++){
	    if(boxes[i].path == "all") continue;
	    var loc = boxes[i].path.substring(0,boxes[i].path.lastIndexOf("_"));
	    loc = loc.replace(/e[0-9]+$/,"e");
	    if(loc == current_path){
		boxes2.push(boxes[i]);
	    }
	}
	boxes = boxes2;
    }
    if(!boxes) return;
    for(var i = 0; i < boxes.length; i++){
	var box = boxes[i];
	if(box.path == "all"){
	    if(!opt) opt = {'path':'guppy_loc_m_e1_0'};
	    continue;
	}
	var xdist = Math.max(box.left - x, x - box.right, 0)
	var ydist = Math.max(box.top - y, y - box.bottom, 0)
	var dist = Math.sqrt(xdist*xdist + ydist*ydist);
	if(min_dist == -1 || dist < min_dist){
	    min_dist = dist;
	    mid_dist = x - box.mid_x;
	    opt = box;
	}
    }
    var loc = opt.path.substring("guppy_loc".length);
    loc = loc.replace(/_/g,"/");
    loc = loc.replace(/([0-9]+)(?=.*?\/)/g,"[$1]");
    cur = g.backend.doc.xpath_node(loc.substring(0,loc.lastIndexOf("/")), g.backend.doc.root());
    car = parseInt(loc.substring(loc.lastIndexOf("/")+1));
    // Check if we want the cursor before or after the element
    if(mid_dist > 0 && !(opt.blank)){
	car++;
    }
    ans = {"current":cur,"caret":car,"pos":pos};
    if(current_node && opt){
	var opt_pos = parseInt(opt.path.substring(opt.path.lastIndexOf("e")+1,opt.path.lastIndexOf("_")));
	if(opt_pos < current_pos) pos = "left";
	else if(opt_pos > current_pos) pos = "right";
	else if(car < current_caret) pos = "left";
	else if(car > current_caret) pos = "right";
	if(pos) ans['pos'] = pos;
	else ans['pos'] = "none";
    }
    return ans;
}

Guppy.mouse_up = function(e){
    Guppy.kb.is_mouse_down = false;
    var g = Guppy.active_guppy;
    if(g) g.render(true);
}

Guppy.mouse_down = function(e){
    if(e.target.getAttribute("class") == "guppy-button") return;
    var n = e.target;
    Guppy.kb.is_mouse_down = true;
    if(e.target == document.getElementById("toggle_ref")) toggle_div("help_card");
    else while(n != null){
	if(n.id in Guppy.instances){
	    e.preventDefault();
	    var prev_active = Guppy.active_guppy;
	    for(var i in Guppy.instances){
		if(i != n.id) Guppy.instances[i].deactivate();
		Guppy.active_guppy = Guppy.instances[n.id];
		Guppy.active_guppy.activate();
	    }
	    var g = Guppy.active_guppy;
	    var b = Guppy.active_guppy.backend;
	    g.space_caret = 0;
	    if(prev_active == g){
		if(e.shiftKey){
		    g.select_to(e.clientX, e.clientY, true);
		}
		else {
		    var loc = Guppy.get_loc(e.clientX,e.clientY);
		    if(!loc) return;
		    b.current = loc.current;
		    b.caret = loc.caret;
		    b.sel_status = GuppyBackend.SEL_NONE;
		}
		g.render(true);
	    }
	    return;
	}
	if(n.classList && n.classList.contains("guppy_osk")){
	    return;
	}
	n = n.parentNode;
    }
    Guppy.active_guppy = null;
    for(var i in Guppy.instances){
	Guppy.instances[i].deactivate();
    }
}

Guppy.mouse_move = function(e){
    var g = Guppy.active_guppy;
    if(!g) return;
    if(!Guppy.kb.is_mouse_down){
	var bb = g.editor;
	var rect = bb.getBoundingClientRect();
	if((e.clientX < rect.left || e.clientX > rect.right) || (e.clientY > rect.bottom || e.clientY < rect.top)){
	    g.temp_cursor = {"node":null,"caret":0};
	}
	else{
	    var loc = Guppy.get_loc(e.clientX,e.clientY);
	    if(!loc) return;
	    g.temp_cursor = {"node":loc.current,"caret":loc.caret};
	}
	g.render(g.is_changed());
    }
    else{
	g.select_to(e.clientX,e.clientY, true);
	g.render(g.is_changed());
    }
}

Guppy.prototype.select_to = function(x, y, mouse){
    var sel_caret = this.backend.caret;
    var sel_cursor = this.backend.current;
    if(this.backend.sel_status == GuppyBackend.SEL_CURSOR_AT_START){
	sel_cursor = this.backend.sel_end.node;
	sel_caret = this.backend.sel_end.caret;
    }
    else if(this.backend.sel_status == GuppyBackend.SEL_CURSOR_AT_END){
	sel_cursor = this.backend.sel_start.node;
	sel_caret = this.backend.sel_start.caret;
    }
    var loc = Guppy.get_loc(x,y,sel_cursor,sel_caret);
    if(!loc) return;
    this.backend.select_to(loc, sel_cursor, sel_caret, mouse);
}


window.addEventListener("mousedown",Guppy.mouse_down, false);
window.addEventListener("mouseup",Guppy.mouse_up, false);
window.addEventListener("mousemove",Guppy.mouse_move, false);

Guppy.prototype.render_node = function(t){
    // All the interesting work is done by transform.  This function just adds in the cursor and selection-start cursor
    var output = "";
    if(t == "render"){
	var root = this.backend.doc.root();
	this.backend.add_paths(root,"m");
	this.backend.temp_cursor = this.temp_cursor;
	this.backend.add_classes_cursors(root);
	this.backend.current.setAttribute("current","yes");
	if(this.temp_cursor.node) this.temp_cursor.node.setAttribute("temp","yes");
	output = this.backend.get_content("latex",true);
	this.backend.remove_cursors_classes(root);
	output = output.replace(new RegExp('&amp;','g'), '&');
	return output;
    }
    else{
	output = this.backend.get_content(t);
    }
    return output
}

/** 
    Render the document
    @memberof Guppy
    @param {boolean} [updated=false] - Whether there have been visible
    changes to the document (i.e. that affect the positions of
    elements)
*/
Guppy.prototype.render = function(updated){
    if(!this.editor_active && this.backend.doc.is_blank()){
	katex.render(this.empty_content,this.editor);
	this.editor.appendChild(this.buttons_div);
	return;
    }
    var tex = this.render_node("render");
    katex.render(tex,this.editor);
    this.editor.appendChild(this.buttons_div);
    if(updated){
	this.recompute_locations_paths();
    }
}

/** 
    Focus this instance of the editor
    @memberof Guppy
*/
Guppy.prototype.activate = function(){
    Guppy.active_guppy = this;
    this.editor_active = true;
    this.editor.className = this.editor.className.replace(new RegExp('(\\s|^)guppy_inactive(\\s|$)'),' guppy_active ');
    this.editor.focus();
    if(this.ready){
	this.render(true);
	this.backend.fire_event("focus",{"focused":true});
    }
}


/** 
    Unfocus this instance of the editor
    @memberof Guppy
*/
Guppy.prototype.deactivate = function(){
    this.editor_active = false;
    var r1 = new RegExp('(?:\\s|^)guppy_active(?:\\s|$)');
    var r2 = new RegExp('(?:\\s|^)guppy_inactive(?:\\s|$)');
    if(this.editor.className.match(r1)){
	this.editor.className = this.editor.className.replace(r1,' guppy_inactive ');
    }
    else if(!this.editor.className.match(r2)){
	this.editor.className += ' guppy_inactive ';
    }
    Guppy.kb.shift_down = false;
    Guppy.kb.ctrl_down = false;
    Guppy.kb.alt_down = false;
    if(this.ready){
	this.render();
	this.backend.fire_event("focus",{"focused":false});
    }
}


// Keyboard stuff

Guppy.kb = {};

Guppy.kb.is_mouse_down = false;

/* keyboard behaviour definitions */

// keys aside from 0-9,a-z,A-Z
Guppy.kb.k_chars = {
    "=":"=",
    "+":"+",
    "-":"-",
    "*":"*",
    ".":".",
    "shift+/":"/",
    "shift+=":"+",
};
Guppy.kb.k_syms = {
    "/":"slash",
    "^":"exp",
    "*":"*",
    "(":"paren",
    "<":"less",
    ">":"greater",
    "_":"sub",
    "|":"abs",
    "!":"factorial",
    "shift+up":"exp",
    "shift+down":"sub"
};
Guppy.kb.k_controls = {
    "up":"up",
    "down":"down",
    "right":"right",
    "left":"left",
    "alt+k":"up",
    "alt+j":"down",
    "alt+l":"right",
    "alt+h":"left",
    "space":"spacebar",
    "home":"home",
    "end":"end",
    "backspace":"backspace",
    "del":"delete_key",
    "mod+a":"sel_all",
    "mod+c":"sel_copy",
    "mod+x":"sel_cut",
    "mod+v":"sel_paste",
    "mod+z":"undo",
    "mod+y":"redo",
    "enter":"done",
    "mod+shift+right":"list_extend_copy_right",
    "mod+shift+left":"list_extend_copy_left",
    ",":"list_extend_right",
    ";":"list_extend_down",
    "mod+right":"list_extend_right",
    "mod+left":"list_extend_left",
    "mod+up":"list_extend_up",
    "mod+down":"list_extend_down",
    "mod+shift+up":"list_extend_copy_up",
    "mod+shift+down":"list_extend_copy_down",
    "mod+backspace":"list_remove",
    "mod+shift+backspace":"list_remove_row",
    "shift+left":"sel_left",
    "shift+right":"sel_right",
    ")":"right_paren",
    "\\":"backslash",
    "tab":"tab"
};

// letters

for(var i = 65; i <= 90; i++){
    Guppy.kb.k_chars[String.fromCharCode(i).toLowerCase()] = String.fromCharCode(i).toLowerCase();
    Guppy.kb.k_chars['shift+'+String.fromCharCode(i).toLowerCase()] = String.fromCharCode(i).toUpperCase();
}

// numbers

for(var i = 48; i <= 57; i++)
    Guppy.kb.k_chars[String.fromCharCode(i)] = String.fromCharCode(i);

Guppy.register_keyboard_handlers = function(){
    Mousetrap.addKeycodes({173: '-'}); // Firefox's special minus (needed for _ = sub binding)
    var self = this;
    for(var i in Guppy.kb.k_chars)
    	Mousetrap.bind(i,function(i){ return function(){
	    if(!Guppy.active_guppy) return true;
	    Guppy.active_guppy.temp_cursor.node = null;
	    Guppy.active_guppy.backend.insert_string(Guppy.kb.k_chars[i]);
	    Guppy.active_guppy.render(true);
	    return false;
	}}(i));  
    for(var i in Guppy.kb.k_syms)
    	Mousetrap.bind(i,function(i){ return function(){
	    if(!Guppy.active_guppy) return true;
	    Guppy.active_guppy.temp_cursor.node = null;
	    Guppy.active_guppy.backend.space_caret = 0;
	    Guppy.active_guppy.backend.insert_symbol(Guppy.kb.k_syms[i]);
	    Guppy.active_guppy.render(true);
	    return false;
	}}(i));
    for(var i in Guppy.kb.k_controls)
    	Mousetrap.bind(i,function(i){ return function(){
	    if(!Guppy.active_guppy) return true;
	    Guppy.active_guppy.backend.space_caret = 0;
	    Guppy.active_guppy.backend[Guppy.kb.k_controls[i]]();
	    Guppy.active_guppy.temp_cursor.node = null;
	    Guppy.active_guppy.render(["up","down","right","left","home","end","sel_left","sel_right"].indexOf(i) < 0);
	    Guppy.active_guppy.render(false);
	    return false;
	}}(i));
}

module.exports = Guppy;

},{"../lib/katex/katex-modified.min.js":1,"./guppy_backend.js":4,"./guppy_help.js":6,"./guppy_symbols.js":7,"./guppy_utils.js":8,"mousetrap":2}],4:[function(require,module,exports){
Mousetrap = require('mousetrap');
katex = require('../lib/katex/katex-modified.min.js');
GuppyUtils = require('./guppy_utils.js');
GuppyDoc = require('./guppy_doc.js');
GuppySymbols = require('./guppy_symbols.js');

String.prototype.splice = function(idx, s){ return (this.slice(0,idx) + s + this.slice(idx)); };
String.prototype.splicen = function(idx, s, n){ return (this.slice(0,idx) + s + this.slice(idx+n));};
String.prototype.search_at = function(idx, s){ return (this.substring(idx-s.length,idx) == s); };

/**
   @class
   @classdesc The backend to the editor.  Should never be constructed directly by the user.
   @constructor 
 */
var GuppyBackend = function(config){
    var self = this;
    var config = config || {};
    var events = config['events'] || {};
    var options = config['options'] || {};
    this.parent = config['parent'];
    
    this.blacklist = [];
    this.autoreplace = true;
    this.ready = false;
    this.events = {};
    
    var evts = ["ready", "change", "left_end", "right_end", "done", "completion", "debug", "error", "focus"];
    
    for(var i = 0; i < evts.length; i++){
	var e = evts[i];
	if(e in events) this.events[e] = e in events ? events[e] : null;
    }

    var opts = ["blank_caret", "empty_content", "blacklist", "autoreplace", "cliptype"];
    
    for(var i = 0; i < opts.length; i++){
	var p = opts[i];
	if(p in options) this[p] = options[p];
    }

    this.symbols = {};
    this.doc = new GuppyDoc(options["xml_content"]);
    
    this.current = this.doc.root().firstChild;
    this.caret = 0;
    this.space_caret = 0;
    this.sel_start = null;
    this.sel_end = null;
    this.undo_data = [];
    this.undo_now = -1;
    this.sel_status = GuppyBackend.SEL_NONE;
    this.checkpoint();
    if(GuppyBackend.ready && !this.ready){
    	this.ready = true;
	this.symbols = JSON.parse(JSON.stringify(GuppySymbols.symbols));
    	this.fire_event("ready");
    }
}

GuppyBackend.SEL_NONE = 0;
GuppyBackend.SEL_CURSOR_AT_START = 1;
GuppyBackend.SEL_CURSOR_AT_END = 2;
GuppyBackend.clipboard = null;

/** 
    Get the content of the editor
    @memberof GuppyBackend
    @param {string} t - The type of content to render ("latex", "text", or "xml").
*/
GuppyBackend.prototype.get_content = function(t,r){
    return this.doc.get_content(t,r);
}

/** 
    Set the content of the editor
    @memberof GuppyBackend
    @param {string} xml_data - An XML string of the content to place in the editor
*/
GuppyBackend.prototype.set_content = function(xml_data){
    this.doc = new GuppyDoc(xml_data);
    this.current = this.doc.root().firstChild;
    this.caret = 0;
    this.sel_start = null;
    this.sel_end = null;
    this.undo_data = [];
    this.undo_now = -1;
    this.sel_status = GuppyBackend.SEL_NONE;
    this.checkpoint();
}

GuppyBackend.prototype.fire_event = function(event, args){
    args = args || {};
    args.target = this.parent || this;
    if(this.events[event] && this.ready && GuppyBackend.ready) this.events[event](args);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.remove_symbol = function(name){
    if(this.symbols[name]) delete this.symbols[name];
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.add_symbols = function(name, sym){
    var new_syms = GuppySymbols.add_symbols(name, sym);
    for(var s in new_syms){
	this.symbols[s] = new_syms[s];
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.add_symbol_func = function(name, group){
    var new_syms = GuppySymbols.add_symbols("_func", [{"group":group,"symbols":[name]}]);
    for(var s in new_syms)
	this.symbols[s] = new_syms[s];
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.add_symbol_raw = function(name, latex, text, group){
    var s = {}
    s[name] = {"latex":latex,"text":text}
    var new_syms = GuppySymbols.add_symbols("_raw", [{"group":group,"symbols":s}]);
    for(var s in new_syms)
	this.symbols[s] = new_syms[s];
}

GuppyBackend.prototype.select_to = function(loc, sel_cursor, sel_caret, mouse){
    if(loc.current == sel_cursor && loc.caret == sel_caret){
	this.current = loc.current;
	this.caret = loc.caret;
	this.sel_status = GuppyBackend.SEL_NONE;
    }
    else if(loc.pos == "left"){
	this.sel_end = {"node":sel_cursor,"caret":sel_caret};
	this.current = loc.current;
	this.caret = loc.caret;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START, mouse);
    }
    else if(loc.pos == "right"){
	this.sel_start = {"node":sel_cursor,"caret":sel_caret};
	this.current = loc.current;
	this.caret = loc.caret;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END, mouse);
    }
}

GuppyBackend.prototype.set_sel_start = function(){
    this.sel_start = {"node":this.current, "caret":this.caret};
}

GuppyBackend.prototype.set_sel_end = function(){
    this.sel_end = {"node":this.current, "caret":this.caret};
}

GuppyBackend.prototype.add_paths = function(n,path){
    if(n.nodeName == "e"){
	n.setAttribute("path",path);
    }
    else{
	var es = 1, fs = 1, cs = 1, ls = 1;
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeName == "c"){ this.add_paths(c, path+"_c"+cs); cs++; }
	    else if(c.nodeName == "f"){ this.add_paths(c, path+"_f"+fs); fs++; }
	    else if(c.nodeName == "l"){ this.add_paths(c, path+"_l"+ls); ls++; }
	    else if(c.nodeName == "e"){ this.add_paths(c, path+"_e"+es); es++; }
	}
    }
}

GuppyBackend.prototype.add_classes_cursors = function(n,path){
    if(n.nodeName == "e"){
	var text = n.firstChild.nodeValue;
	ans = "";
	var sel_cursor;
	var text_node = GuppyUtils.is_text(n);
	if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START) sel_cursor = this.sel_end;
	if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END) sel_cursor = this.sel_start;
	if(this.sel_status != GuppyBackend.SEL_NONE){
	    var sel_caret_text = GuppyUtils.is_small(sel_cursor.node) ? GuppyUtils.SMALL_SEL_CARET : GuppyUtils.SEL_CARET;
	    if(!text_node && text.length == 0 && n.parentNode.childElementCount > 1){
		sel_caret_text = "\\blue{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+sel_caret_text+"}}";
	    }
	    else{
		sel_caret_text = "\\blue{"+sel_caret_text+"}";
	    }
	    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END) sel_caret_text = text_node ? "[" : sel_caret_text + "\\"+GuppyUtils.SEL_COLOR+"{";
	    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START) sel_caret_text = text_node ? "]" : "}" + sel_caret_text;
	}
	var caret_text = "";
	var temp_caret_text = "";
	if(text.length == 0){
	    if(text_node) caret_text = "\\_";
	    else if(n.parentNode.childElementCount == 1){
		if(this.current == n){
		    var blank_caret = this.blank_caret || (GuppyUtils.is_small(this.current) ? GuppyUtils.SMALL_CARET : GuppyUtils.CARET);
		    ans = "\\red{\\xmlClass{main_cursor guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{"+blank_caret+"}}";
		}
		else if(this.temp_cursor.node == n)
		    ans = "\\gray{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{[?]}}";
		else
		    ans = "\\blue{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{[?]}}";
	    }
	    else if(this.temp_cursor.node != n && this.current != n && (!(sel_cursor) || sel_cursor.node != n)){
		// These are the empty e elements at either end of
		// a c or m node, such as the space before and
		// after both the sin and x^2 in sin(x^2)
		//
		// Here, we add in a small element so that we can
		// use the mouse to select these areas
		ans = "\\phantom{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{\\cursor[0.1ex]{1ex}}}";
	    }
	}
	for(var i = 0; i < text.length+1; i++){
	    if(n == this.current && i == this.caret && (text.length > 0 || n.parentNode.childElementCount > 1)){
		if(text_node){
		    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
			caret_text = "[";
		    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
			caret_text = "]";
		    else
			caret_text = "\\_";
		}
		else{
		    caret_text = GuppyUtils.is_small(this.current) ? GuppyUtils.SMALL_CARET : GuppyUtils.CARET;
		    if(text.length == 0)
			caret_text = "\\red{\\xmlClass{main_cursor guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+caret_text+"}}";
		    else{
			caret_text = "\\red{\\xmlClass{main_cursor}{"+caret_text+"}}"
		    }
		    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
			caret_text = caret_text + "\\"+GuppyUtils.SEL_COLOR+"{";
		    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
			caret_text = "}" + caret_text;
		}
		ans += caret_text;
	    }
	    else if(n == this.current && i == this.caret && text_node){
		ans += caret_text;
	    }
	    else if(this.sel_status != GuppyBackend.SEL_NONE && sel_cursor.node == n && i == sel_cursor.caret){
		ans += sel_caret_text;
	    }
	    else if(this.temp_cursor.node == n && i == this.temp_cursor.caret && (text.length > 0 || n.parentNode.childElementCount > 1)){
		if(text_node) 
		    temp_caret_text = ".";
		else{
		    temp_caret_text = GuppyUtils.is_small(this.current) ? GuppyUtils.TEMP_SMALL_CARET : GuppyUtils.TEMP_CARET;
		    if(text.length == 0){
			temp_caret_text = "\\gray{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+temp_caret_text+"}}";
		    }
		    else
			temp_caret_text = "\\gray{"+temp_caret_text+"}";
		}
		ans += temp_caret_text;
	    }
	    if(i < text.length) ans += "\\xmlClass{guppy_elt guppy_loc_"+n.getAttribute("path")+"_"+i+"}{"+text[i]+"}";
	}
	if(text_node && n == this.current){
	    ans = "\\xmlClass{guppy_text_current}{{"+ans+"}}";
	}
	n.setAttribute("render", ans);
	n.removeAttribute("path");
    }
    else{
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeName == "c" || c.nodeName == "l" || c.nodeName == "f" || c.nodeName == "e"){ this.add_classes_cursors(c); }
	}
    }
}

GuppyBackend.prototype.remove_cursors_classes = function(n){
    if(n.nodeName == "e"){
	n.removeAttribute("path");
	n.removeAttribute("render");
	n.removeAttribute("current");
	n.removeAttribute("temp");
    }
    else{
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeType == 1){ this.remove_cursors_classes(c); }
	}
    }
}

GuppyBackend.prototype.down_from_f = function(){
    var nn = this.current.firstChild;
    while(nn != null && nn.nodeName != 'c' && nn.nodeName != 'l') nn = nn.nextSibling;
    if(nn != null){
	while(nn.nodeName == 'l') nn = nn.firstChild;
	this.current = nn.firstChild;
    }
}

GuppyBackend.prototype.down_from_f_to_blank = function(){
    var nn = this.current.firstChild;
    while(nn != null && !(nn.nodeName == 'c' && nn.children.length == 1 && nn.firstChild.firstChild.nodeValue == "")){
	nn = nn.nextSibling;
    }
    if(nn != null){
	//Sanity check:
	
	while(nn.nodeName == 'l') nn = nn.firstChild;
	if(nn.nodeName != 'c' || nn.firstChild.nodeName != 'e'){
	    this.problem('dfftb');
	    return;
	}
	this.current = nn.firstChild;
    }
    else this.down_from_f();
}

GuppyBackend.prototype.delete_from_f = function(to_insert){
    var n = this.current;
    var p = n.parentNode;
    var prev = n.previousSibling;
    var next = n.nextSibling;
    var middle = to_insert || "";
    var new_node = this.make_e(prev.firstChild.textContent + middle + next.firstChild.textContent);
    this.current = new_node;
    this.caret = prev.firstChild.textContent.length;
    p.insertBefore(new_node, prev);
    p.removeChild(prev);
    p.removeChild(n);
    p.removeChild(next);
}

GuppyBackend.prototype.symbol_to_node = function(sym_name, content){
    // sym_name is a key in the symbols dictionary
    //
    // content is a list of nodes to insert
    var base = this.doc.base;
    var s = this.symbols[sym_name];
    var f = base.createElement("f");
    for(var a in s.attrs){
	f.setAttribute(a, s.attrs[a]);
    }
    if("ast" in s){
	if("type" in s.ast) f.setAttribute("ast_type",s["ast_type"])
	if("value" in s.ast) f.setAttribute("ast_value",s["ast_value"])
    }
    //if(s['char']) f.setAttribute("c","yes");
    
    var first_ref = -1;
    var refs_count = 0;
    var lists = {}
    var first;

    // Make the b nodes for rendering each output    
    for(var t in s["output"]){
	var b = base.createElement("b");
	b.setAttribute("p",t);

	var out = s["output"][t];
	if(typeof out == 'string'){
	    out = out.split(/(\{\$[0-9]+(?:\{[^}]+\})*\})/g);
	    for(var i = 0; i < out.length; i++){
		m = out[i].match(/^\{\$([0-9]+)((?:\{[^}]+\})*)\}$/);
		if(m){
		    out[i] = {'ref':parseInt(m[1])};
		    if(m[2].length > 0){
			mm = m[2].match(/\{[^}]*\}/g);
			out[i]['d'] = mm.length;
			for(var j = 0; j < mm.length; j++){
			    out[i]['sep'+j] = mm[j].substring(1,mm[j].length-1);
			}
		    }
		}
	    }
	}
	for(var i = 0; i < out.length; i++){
	    if(typeof out[i] == 'string' || out[i] instanceof String){
		var nt = base.createTextNode(out[i]);
		b.appendChild(nt);
	    }
	    else{
		var nt = base.createElement("r");
		for(var attr in out[i]){
		    nt.setAttribute(attr,out[i][attr]);
		}
		if(t == 'latex') {
		    if(first_ref == -1) first_ref = out[i]['ref'];
		    if('d' in out[i]) lists[refs_count] = out[i]['d']
		    refs_count++;
		}
		b.appendChild(nt);
	    }
	}
	f.appendChild(b);
    }
    // Now make the c nodes for storing the content
    for(var i = 0; i < refs_count; i++){
	var nc = base.createElement("c");
	if(i in content){
	    var node_list = content[i];
	    for(var se = 0; se < node_list.length; se++){
		nc.appendChild(node_list[se].cloneNode(true));
	    }
	}
	else nc.appendChild(this.make_e(""));
	if(i+1 == first_ref) first = nc.lastChild;
	if(s['args'])
	    for(var a in (s['args'][i] || {}))
		nc.setAttribute(a,s['args'][i][a]);
	    // for(var a in s['attrs'])
	    // 	if(s['attrs'][a][i] != 0) nc.setAttribute(a,s['attrs'][a][i]);
	if(i in lists){
	    var par = f;
	    for(var j = 0; j < lists[i]; j++){
		var nl = base.createElement("l");
		nl.setAttribute("s","1");
		par.appendChild(nl);
		par = nl;
		if(j == lists[i]-1) nl.appendChild(nc);
	    }
	}
	else f.appendChild(nc);
    }
    return {"f":f, "first":first};
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.insert_symbol = function(sym_name){
    var s = this.symbols[sym_name];
    if(s.attrs && this.is_blacklisted(s.attrs.type)){
	return false;
    }
    var node_list = {};
    var content = {};
    var left_piece,right_piece;
    var cur = (s.current) ? s.current.index || 0 : 0;
    var to_remove = [];
    var to_replace = null;
    var replace_f = false;
    
    if(cur > 0){
	cur--;
	if(this.sel_status != GuppyBackend.SEL_NONE){
	    var sel = this.sel_get();
	    sel_parent = sel.involved[0].parentNode;
	    to_remove = sel.involved;
	    left_piece = this.make_e(sel.remnant.firstChild.nodeValue.slice(0,this.sel_start.caret));
	    right_piece = this.make_e(sel.remnant.firstChild.nodeValue.slice(this.sel_start.caret));
	    content[cur] = sel.node_list;
	}
	else if(s.current && s.current.type == 'token'){
	    // If we're at the beginning, then the token is the previous f node
	    if(this.caret == 0 && this.current.previousSibling != null){
		content[cur] = [this.make_e(""), this.current.previousSibling, this.make_e("")];
		to_replace = this.current.previousSibling;
		replace_f = true;
	    }
	    else{
		// look for [0-9.]+|[a-zA-Z] immediately preceeding the caret and use that as token
		var prev = this.current.firstChild.nodeValue.substring(0,this.caret);
		var token = prev.match(/[0-9.]+$|[a-zA-Z]$/);
		if(token != null && token.length > 0){
		    token = token[0];
		    left_piece = this.make_e(this.current.firstChild.nodeValue.slice(0,this.caret-token.length));
		    right_piece = this.make_e(this.current.firstChild.nodeValue.slice(this.caret));
		    content[cur] = [this.make_e(token)];
		}
	    }
	}
    }
    if(!replace_f && (left_piece == null || right_piece == null)){
	left_piece = this.make_e(this.current.firstChild.nodeValue.slice(0,this.caret));
	right_piece = this.make_e(this.current.firstChild.nodeValue.slice(this.caret));
	to_remove = [this.current];
    }

    // By now:
    // 
    // content contains whatever we want to pre-populate the 'current' field with (if any)
    //
    // right_piece contains whatever content was in an involved node
    // to the right of the cursor but is not part of the insertion.
    // Analogously for left_piece
    //
    // Thus all we should have to do now is symbol_to_node(sym_type,
    // content) and then add the left_piece, resulting node, and
    // right_piece in that order.
    
    var new_current = null;
    var current_parent = this.current.parentNode;
    
    var sym = this.symbol_to_node(sym_name,content);
    var f = sym.f;
    var new_current = sym.first;

    var next = this.current.nextSibling;

    if(replace_f){
	current_parent.replaceChild(f,to_replace);
    }
    else{
	if(to_remove.length == 0) this.current.parentNode.removeChild(this.current);
	
	for(var i = 0; i < to_remove.length; i++){
	    if(next == to_remove[i]) next = next.nextSibling;
	    current_parent.removeChild(to_remove[i]);
	}
	current_parent.insertBefore(left_piece, next);
	current_parent.insertBefore(f, next);
	current_parent.insertBefore(right_piece, next);
    }
    
    this.caret = 0;
    this.current = f;
    if(s.attrs['char'] == "yes"){
	this.current = this.current.nextSibling;
    }
    else this.down_from_f_to_blank();

    this.sel_clear();
    this.checkpoint();
    return true;
}

GuppyBackend.prototype.sel_get = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	return null;
    }
    var involved = [];
    var node_list = [];
    var remnant = null;

    if(this.sel_start.node == this.sel_end.node){
	return {"node_list":[this.make_e(this.sel_start.node.firstChild.nodeValue.substring(this.sel_start.caret, this.sel_end.caret))],
		"remnant":this.make_e(this.sel_start.node.firstChild.nodeValue.substring(0, this.sel_start.caret) + this.sel_end.node.firstChild.nodeValue.substring(this.sel_end.caret)),
		"involved":[this.sel_start.node]};
    }
    
    node_list.push(this.make_e(this.sel_start.node.firstChild.nodeValue.substring(this.sel_start.caret)));
    involved.push(this.sel_start.node);
    involved.push(this.sel_end.node);
    remnant = this.make_e(this.sel_start.node.firstChild.nodeValue.substring(0, this.sel_start.caret) + this.sel_end.node.firstChild.nodeValue.substring(this.sel_end.caret));
    var n = this.sel_start.node.nextSibling;
    while(n != null && n != this.sel_end.node){
	involved.push(n);
	node_list.push(n);
	n = n.nextSibling;
    }
    node_list.push(this.make_e(this.sel_end.node.firstChild.nodeValue.substring(0, this.sel_end.caret)));
    return {"node_list":node_list,
	    "remnant":remnant,
	    "involved":involved,
	    "cursor":0};
}

// GuppyBackend.prototype.print_selection = function(){
//     var sel = this.sel_get();
//     if(sel == null) return "[none]";
//     var ans = "";
//     ans += "node_list: \n";
//     for(var i = 0; i < sel.node_list.length; i++){
// 	var n = sel.node_list[i];
// 	ans += (new XMLSerializer()).serializeToString(n) + "\n";
//     }
//     ans += "\ninvolved: \n";
//     for(var i = 0; i < sel.involved.length; i++){
// 	var n = sel.involved[i];
// 	ans += (new XMLSerializer()).serializeToString(n) + "\n";
//     }
// }

GuppyBackend.prototype.make_e = function(text){
    var base = this.doc.base;
    var new_node = base.createElement("e");
    new_node.appendChild(base.createTextNode(text));
    return new_node;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.insert_string = function(s){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_clear();
    }
    this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splice(this.caret,s)
    this.caret += s.length;
    this.checkpoint();
    if(this.autoreplace) this.check_for_symbol();
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_copy = function(){
    var sel = this.sel_get();
    if(!sel) return;
    GuppyBackend.clipboard = [];
    var clip_text = "";
    for(var i = 0; i < sel.node_list.length; i++){
	var node = sel.node_list[i].cloneNode(true);
	GuppyBackend.clipboard.push(node);
	if(this.cliptype) clip_text += this.doc.manual_render(this.cliptype, node);
    }
    if(this.cliptype) this.system_copy(clip_text);
    this.sel_clear();
}

GuppyBackend.prototype.system_copy = function(text) {
    if (window.clipboardData && window.clipboardData.setData)
        return clipboardData.setData("Text", text);
    else if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
        var textarea = document.createElement("textarea");
        textarea.textContent = text;
        textarea.style.position = "fixed";
	textarea.style.background = "transparent";
        document.body.appendChild(textarea);
        textarea.select();
        try { return document.execCommand("copy"); }
	catch (ex) { return false; }
        finally { document.body.removeChild(textarea); }
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_cut = function(){
    var node_list = this.sel_delete();
    if(!node_list) return;
    GuppyBackend.clipboard = [];
    var clip_text = "";
    for(var i = 0; i < node_list.length; i++){
	var node = node_list[i].cloneNode(true);
	GuppyBackend.clipboard.push(node);
	if(this.cliptype) clip_text += this.doc.manual_render(this.cliptype, node);
    }
    if(this.cliptype) this.system_copy(clip_text);
    this.sel_clear();
    this.checkpoint();
}

GuppyBackend.prototype.insert_nodes = function(node_list, move_cursor){
    var real_clipboard = [];
    for(var i = 0; i < node_list.length; i++){
	real_clipboard.push(node_list[i].cloneNode(true));
    }

    if(real_clipboard.length == 1){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret);
	if(move_cursor) this.caret += real_clipboard[0].firstChild.nodeValue.length;
    }
    else{
	var nn = this.make_e(real_clipboard[real_clipboard.length-1].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret));
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue;
	if(this.current.nextSibling == null)
	    this.current.parentNode.appendChild(nn)
	else
	    this.current.parentNode.insertBefore(nn, this.current.nextSibling)
	for(var i = 1; i < real_clipboard.length - 1; i++)
	    this.current.parentNode.insertBefore(real_clipboard[i], nn);
	if(move_cursor){
	    this.current = nn;
	    this.caret = real_clipboard[real_clipboard.length-1].firstChild.nodeValue.length
	}
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_paste = function(){
    this.sel_delete();
    this.sel_clear();
    if(!(GuppyBackend.clipboard) || GuppyBackend.clipboard.length == 0) return;
    this.insert_nodes(GuppyBackend.clipboard, true);
    this.checkpoint();
    return;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_clear = function(){
    this.sel_start = null;    
    this.sel_end = null;
    this.sel_status = GuppyBackend.SEL_NONE;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_delete = function(){
    var sel = this.sel_get();
    if(!sel) return null;
    sel_parent = sel.involved[0].parentNode;
    sel_prev = sel.involved[0].previousSibling;
    for(var i = 0; i < sel.involved.length; i++){
	var n = sel.involved[i];
	sel_parent.removeChild(n);
    }
    if(sel_prev == null){
	if(sel_parent.firstChild == null)
	    sel_parent.appendChild(sel.remnant);
	else
	    sel_parent.insertBefore(sel.remnant, sel_parent.firstChild);
    }
    else if(sel_prev.nodeName == 'f'){
	if(sel_prev.nextSibling == null)
	    sel_parent.appendChild(sel.remnant);
	else
	    sel_parent.insertBefore(sel.remnant, sel_prev.nextSibling);
    }
    this.current = sel.remnant
    this.caret = this.sel_start.caret;
    return sel.node_list;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_all = function(){
    this.home();
    this.set_sel_start();
    this.end();
    this.set_sel_end();
    if(this.sel_start.node != this.sel_end.node || this.sel_start.caret != this.sel_end.caret)
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_END;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_right = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	this.set_sel_start();
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_END;
    }
    if(this.caret >= GuppyUtils.get_length(this.current)){
	var nn = this.current.nextSibling;
	if(nn != null){
	    this.current = nn.nextSibling;
	    this.caret = 0;
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
	}
	else{
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
	}
    }
    else{
	this.caret += 1;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
    }
    if(this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret){
	this.sel_status = GuppyBackend.SEL_NONE;
    }
}

GuppyBackend.prototype.set_sel_boundary = function(sstatus, mouse){
    if(this.sel_status == GuppyBackend.SEL_NONE || mouse) this.sel_status = sstatus;
    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
	this.set_sel_start();
    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
	this.set_sel_end();
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.sel_left = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	this.set_sel_end();
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_START;
    }
    if(this.caret <= 0){
	var nn = this.current.previousSibling;
	if(nn != null){
	    this.current = nn.previousSibling;
	    this.caret = this.current.firstChild.nodeValue.length;
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
	}
	else{
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
	}
    }
    else{
	this.caret -= 1;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
    }
    if(this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret){
	this.sel_status = GuppyBackend.SEL_NONE;
    }
}

GuppyBackend.prototype.list_extend_copy_right = function(){this.list_extend("right", true);}
GuppyBackend.prototype.list_extend_copy_left = function(){this.list_extend("left", true);}
GuppyBackend.prototype.list_extend_right = function(){this.list_extend("right", false);}
GuppyBackend.prototype.list_extend_left = function(){this.list_extend("left", false);}
GuppyBackend.prototype.list_extend_up = function(){this.list_extend("up", false);}
GuppyBackend.prototype.list_extend_down = function(){this.list_extend("down", false);}
GuppyBackend.prototype.list_extend_copy_up = function(){this.list_extend("up", true);}
GuppyBackend.prototype.list_extend_copy_down = function(){this.list_extend("down", true);}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_vertical_move = function(down){
    var n = this.current;
    while(n.parentNode && n.parentNode.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l' && n.parentNode.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    var pos = 1;
    var cc = n;
    while(cc.previousSibling != null){
	pos++;
	cc = cc.previousSibling;
    }
    var new_l = down ? n.parentNode.nextSibling : n.parentNode.previousSibling
    if(!new_l) return;
    var idx = 1;
    var nn = new_l.firstChild;
    while(idx < pos){
	idx++;
	nn = nn.nextSibling;
    }
    this.current = nn.firstChild;
    this.caret = down ? 0 : this.current.firstChild.textContent.length;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_extend = function(direction, copy){
    var base = this.doc.base;
    var vertical = direction == "up" || direction == "down";
    var before = direction == "up" || direction == "left";
    var this_name = vertical ? "l" : "c";
    var n = this.current;
    while(n.parentNode && !(n.nodeName == this_name && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    var to_insert;
    
    // check if 2D and horizontal and extend all the other rows if so 
    if(!vertical && n.parentNode.parentNode.nodeName == "l"){
	to_insert = base.createElement("c");
	to_insert.appendChild(this.make_e(""));
	var pos = 1;
	var cc = n;
	while(cc.previousSibling != null){
	    pos++;
	    cc = cc.previousSibling;
	}
	var to_modify = [];
	var iterator = this.doc.xpath_list("./l/c[position()="+pos+"]", n.parentNode.parentNode);
	try{ for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){ to_modify.push(nn); }}
	catch(e) { this.fire_event("error",{"message":'XML modified during iteration? ' + e}); }
	for(var j = 0; j < to_modify.length; j++){
	    var nn = to_modify[j];
	    if(copy) nn.parentNode.insertBefore(nn.cloneNode(true), before ? nn : nn.nextSibling);
	    else nn.parentNode.insertBefore(to_insert.cloneNode(true), before ? nn : nn.nextSibling);
	    nn.parentNode.setAttribute("s",parseInt(nn.parentNode.getAttribute("s"))+1);
	}
	this.current = before ? n.previousSibling.lastChild : n.nextSibling.firstChild;
	this.caret = this.current.firstChild.textContent.length;
	this.checkpoint();
	return;
    }
    
    if(copy){
	to_insert = n.cloneNode(true);
    }
    else{
	if(vertical){
	    to_insert = base.createElement("l");
	    to_insert.setAttribute("s",n.getAttribute("s"))
	    for(var i = 0; i < parseInt(n.getAttribute("s")); i++){
		var c = base.createElement("c");
		c.appendChild(this.make_e(""));
		to_insert.appendChild(c);
	    }
	}
	else{
	    to_insert = base.createElement("c");
	    to_insert.appendChild(this.make_e(""));
	}
    }
    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))+1);
    n.parentNode.insertBefore(to_insert, before ? n : n.nextSibling);
    if(vertical) this.current = to_insert.firstChild.firstChild;
    else this.current = to_insert.firstChild;
    this.caret = 0;
    this.checkpoint();
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_remove_col = function(){
    var n = this.current;
    while(n.parentNode && n.parentNode.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l' && n.parentNode.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    
    // Don't remove if there is only a single column:
    if(n.previousSibling != null){
	this.current = n.previousSibling.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild;
	this.caret = 0;
    }
    else return;
    
    var pos = 1;
    var cc = n;
    
    // Find position of column
    while(cc.previousSibling != null){
	pos++;
	cc = cc.previousSibling;
    }
    var to_modify = [];
    var iterator = this.doc.xpath_list("./l/c[position()="+pos+"]", n.parentNode.parentNode)
    try{ for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){ to_modify.push(nn); }}
    catch(e) { this.fire_event("error",{"message":'XML modified during iteration? ' + e}); }
    for(var j = 0; j < to_modify.length; j++){
	var nn = to_modify[j];
	nn.parentNode.setAttribute("s",parseInt(nn.parentNode.getAttribute("s"))-1);
	nn.parentNode.removeChild(nn);
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_remove_row = function(){
    var n = this.current;
    while(n.parentNode && !(n.nodeName == 'l' && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    // Don't remove if there is only a single row:
    if(n.previousSibling != null){
	this.current = n.previousSibling.firstChild.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild.firstChild;
	this.caret = 0;
    }
    else return;

    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))-1);
    n.parentNode.removeChild(n);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.list_remove = function(){
    var n = this.current;
    while(n.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    if(n.parentNode.parentNode && n.parentNode.parentNode.nodeName == "l"){
	this.list_remove_col();
	return;
    }
    if(n.previousSibling != null){
	this.current = n.previousSibling.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild;
	this.caret = 0;
    }
    else return;
    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))-1);
    n.parentNode.removeChild(n);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.right = function(){
    this.sel_clear();
    if(this.caret >= GuppyUtils.get_length(this.current)){
	var nn = this.doc.xpath_node("following::e[1]", this.current);
	if(nn != null){
	    this.current = nn;
	    this.caret = 0;
	}
	else{
	    this.fire_event("right_end");
	}
    }
    else{
	this.caret += 1;
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.spacebar = function(){
    if(GuppyUtils.is_text(this.current)) this.insert_string(" ");
    else this.space_caret = this.caret;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.left = function(){
    this.sel_clear();
    if(this.caret <= 0){
	var pn = this.doc.xpath_node("preceding::e[1]", this.current);
	if(pn != null){
	    this.current = pn;
	    this.caret = this.current.firstChild.nodeValue.length;
	}
	else{
	    this.fire_event("left_end");
	}
    }
    else{
	this.caret -= 1;
    }
}

GuppyBackend.prototype.delete_from_c = function(){
    var pos = 0;
    var c = this.current.parentNode;
    while(c && c.nodeName == "c"){
	pos++;
	c = c.previousSibling;
    }
    var idx = this.current.parentNode.getAttribute("delete");
    var survivor_node = this.doc.xpath_node("./c[position()="+idx+"]", this.current.parentNode.parentNode);
    var survivor_nodes = [];
    for(var n = survivor_node.firstChild; n != null; n = n.nextSibling){
	survivor_nodes.push(n);
    }
    this.current = this.current.parentNode.parentNode;
    this.delete_from_f();
    this.insert_nodes(survivor_nodes, pos > idx);
}

GuppyBackend.prototype.delete_from_e = function(){
    // return false if we deleted something, and true otherwise.
    if(this.caret > 0){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret-1,"",1);
	this.caret--;
    }
    else{
	// The order of these is important
	if(this.current.previousSibling != null && this.current.previousSibling.getAttribute("char") == "yes"){
	    // The previous node is an f node but is really just a character.  Delete it.
	    this.current = this.current.previousSibling;
	    this.delete_from_f();
	}
	else if(this.current.previousSibling != null && this.current.previousSibling.nodeName == 'f'){
	    // We're in an e node just after an f node.  Move back into the f node (delete it?)
	    this.left();
	    return false;
	}
	else if(this.current.parentNode.previousSibling != null && this.current.parentNode.previousSibling.nodeName == 'c'){
	    // We're in a c child of an f node, but not the first one.  Go to the previous c
	    if(this.current.parentNode.hasAttribute("delete")){
		this.delete_from_c();
	    }
	    else{
		this.left();
		return false;
	    }
	}
	else if(this.current.previousSibling == null && this.current.parentNode.nodeName == 'c' && (this.current.parentNode.previousSibling == null || this.current.parentNode.previousSibling.nodeName != 'c')){
	    // We're in the first c child of an f node and at the beginning--delete the f node
	    var par = this.current.parentNode;
	    while(par.parentNode.nodeName == 'l' || par.parentNode.nodeName == 'c'){
		par = par.parentNode;
	    }
	    if(par.hasAttribute("delete")){
		this.delete_from_c();
	    }
	    else{
		this.current = par.parentNode;
		this.delete_from_f();
	    }
	}
	else{
	    // We're at the beginning (hopefully!) 
	    return false;
	}
    }
    return true;
}

GuppyBackend.prototype.delete_forward_from_e = function(){
    // return false if we deleted something, and true otherwise.
    if(this.caret < this.current.firstChild.nodeValue.length){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret,"",1);
    }
    else{
	//We're at the end
	if(this.current.nextSibling != null){
	    // The next node is an f node.  Delete it.
	    this.current = this.current.nextSibling;
	    this.delete_from_f();
	}
	else if(this.current.parentNode.nodeName == 'c'){
	    // We're in a c child of an f node.  Do nothing
	    return false;
	}
    }
    return true;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.backspace = function(){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_status = GuppyBackend.SEL_NONE;
	this.checkpoint();
    }
    else if(this.delete_from_e()){
	this.checkpoint();
    }
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.delete_key = function(){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_status = GuppyBackend.SEL_NONE;
	this.checkpoint();
    }
    else if(this.delete_forward_from_e()){
	this.checkpoint();
    }
}

GuppyBackend.prototype.backslash = function(){
    if(GuppyUtils.is_text(this.current)) return;
    this.insert_symbol("sym_name");
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.tab = function(){
    if(!GuppyUtils.is_symbol(this.current)){
	this.check_for_symbol();
	return;
    }
    var sym_name = this.current.firstChild.textContent;
    var candidates = [];
    for(var n in this.symbols){
	if(n.startsWith(sym_name)) candidates.push(n);
    }
    if(candidates.length == 1){
	this.current.firstChild.textContent = candidates[0];
	this.caret = candidates[0].length;
    }
    else {
	this.fire_event("completion",{"candidates":candidates});
    }
}

GuppyBackend.prototype.right_paren = function(){
    if(this.current.nodeName == 'e' && this.caret < this.current.firstChild.nodeValue.length - 1) return;
    else this.right();
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.up = function(){
    this.sel_clear();
    if(this.current.parentNode.hasAttribute("up")){
	var t = parseInt(this.current.parentNode.getAttribute("up"));
	var f = this.current.parentNode.parentNode;
	var n = f.firstChild;
	while(n != null && t > 0){
	    if(n.nodeName == 'c') t--;
	    if(t > 0) n = n.nextSibling;
	}
	this.current = n.lastChild;
	this.caret = this.current.firstChild.nodeValue.length;
    }
    else this.list_vertical_move(false);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.down = function(){
    this.sel_clear();
    if(this.current.parentNode.hasAttribute("down")){
	var t = parseInt(this.current.parentNode.getAttribute("down"));
	var f = this.current.parentNode.parentNode;
	var n = f.firstChild;
	while(n != null && t > 0){
	    if(n.nodeName == 'c') t--;
	    if(t > 0) n = n.nextSibling;
	}
	this.current = n.lastChild;
	this.caret = this.current.firstChild.nodeValue.length;
    }
    else this.list_vertical_move(true);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.home = function(){
    this.current = this.doc.root().firstChild;
    this.caret = 0;
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.end = function(){
    this.current = this.doc.root().lastChild;
    this.caret = this.current.firstChild.nodeValue.length;
}

GuppyBackend.prototype.checkpoint = function(){
    var base = this.doc.base;
    this.current.setAttribute("current","yes");
    this.current.setAttribute("caret",this.caret.toString());
    this.undo_now++;
    this.undo_data[this.undo_now] = base.cloneNode(true);
    this.undo_data.splice(this.undo_now+1, this.undo_data.length);
    this.fire_event("change",{"old":this.undo_data[this.undo_now-1],"new":this.undo_data[this.undo_now]});
    this.current.removeAttribute("current");
    this.current.removeAttribute("caret");
    if(this.parent && this.parent.ready) this.parent.render(true);
}

GuppyBackend.prototype.restore = function(t){
    this.doc.base = this.undo_data[t].cloneNode(true);
    this.find_current();
    this.current.removeAttribute("current");
    this.current.removeAttribute("caret");
}

GuppyBackend.prototype.find_current = function(){
    this.current = this.doc.xpath_node("//*[@current='yes']");
    this.caret = parseInt(this.current.getAttribute("caret"));
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.undo = function(){
    this.sel_clear();
    if(this.undo_now <= 0) return;
    this.undo_now--;
    this.restore(this.undo_now);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.redo = function(){
    this.sel_clear();
    if(this.undo_now >= this.undo_data.length-1) return;
    this.undo_now++;
    this.restore(this.undo_now);
}

/** 
    function
    @memberof GuppyBackend
    @param {string} name - param
*/
GuppyBackend.prototype.done = function(s){
    if(GuppyUtils.is_symbol(this.current)) this.complete_symbol();
    else this.fire_event("done");
}

GuppyBackend.prototype.complete_symbol = function(){
    var sym_name = this.current.firstChild.textContent;
    if(!(this.symbols[sym_name])) return;
    this.current = this.current.parentNode.parentNode;
    this.delete_from_f();
    this.insert_symbol(sym_name);
}

GuppyBackend.prototype.problem = function(message){
    this.fire_event("error",{"message":message});
}

GuppyBackend.prototype.is_blacklisted = function(symb_type){
    for(var i = 0; i < this.blacklist.length; i++)
	if(symb_type == this.blacklist[i]) return true;
    return false;
}

GuppyBackend.prototype.check_for_symbol = function(){
    var instance = this;
    if(GuppyUtils.is_text(this.current)) return;
    for(var s in this.symbols){
	if(instance.current.nodeName == 'e' && s.length <= (instance.caret - instance.space_caret) && !(GuppyUtils.is_blank(instance.current)) && instance.current.firstChild.nodeValue.search_at(instance.caret,s)){
	    var temp = instance.current.firstChild.nodeValue;
	    var temp_caret = instance.caret;
	    instance.current.firstChild.nodeValue = instance.current.firstChild.nodeValue.slice(0,instance.caret-s.length)+instance.current.firstChild.nodeValue.slice(instance.caret);
	    instance.caret -= s.length;
	    var success = instance.insert_symbol(s);
	    if(!success){
		instance.current.firstChild.nodeValue = temp;
		instance.caret = temp_caret;
	    }
	    break;
	}
    }
}

module.exports = GuppyBackend;

},{"../lib/katex/katex-modified.min.js":1,"./guppy_doc.js":5,"./guppy_symbols.js":7,"./guppy_utils.js":8,"mousetrap":2}],5:[function(require,module,exports){
/**
   @class
   @classdesc A class representing a Guppy document
   @param {string} [doc=<m><e></e></m>] - An XML string representing the document
   @constructor 
 */
var GuppyDoc = function(doc){
    doc = doc || "<m><e></e></m>";
    this.set_content(doc);
}

GuppyDoc.prototype.is_small = function(nn){
    var n = nn.parentNode;
    while(n != null && n.nodeName != 'm'){
	if(n.getAttribute("small") == "yes") return true;
	n = n.parentNode
	while(n != null && n.nodeName != 'c') n = n.parentNode;
    }
    return false;
}

GuppyDoc.prototype.ensure_text_nodes = function(){
    var l = this.base.getElementsByTagName("e");
    for(var i = 0; i < l.length; i++){
	if(!(l[i].firstChild)) l[i].appendChild(this.base.createTextNode(""));
    }
}

/** 
    Check if document is empty
    @memberof GuppyDoc
    @returns {boolean}
*/
GuppyDoc.prototype.is_blank = function(){
    if(this.base.getElementsByTagName("f").length > 0) return false;
    var l = this.base.getElementsByTagName("e");
    if(l.length == 1 && (!(l[0].firstChild) || l[0].firstChild.textContent == "")) return true;
    return false;
}


/** 
    Get the document as a DOM object
    @memberof GuppyDoc
    @returns {Element}
*/
GuppyDoc.prototype.root = function(){
    return this.base.documentElement;
}

/** 
    Get the content of the document as a string
    @memberof GuppyDoc
    @param {string} t - The rendering method to use ("latex", "text", "ast" (for syntax tree), or "xml" (for internal XML representation))
    @returns {string}
*/
GuppyDoc.prototype.get_content = function(t,r){
    if(t == "xml") return (new XMLSerializer()).serializeToString(this.base);
    else if(t == "ast") return JSON.stringify(this.syntax_tree());
    else return this.manual_render(t,this.root(),r);
}

GuppyDoc.prototype.syntax_tree = function(n){
    n = n || this.root()
    if(n.nodeName == "e"){
	console.log("Should never happen");
	//ans = n.firstChild.textContent;
    }
    else if(n.nodeName == "f"){
	var ans = {"args":[], "kwargs":{}};
	ans['value'] = n.getAttribute("type");
	ans['type'] = "function";
	if(n.hasAttribute("ast_value")) ans['value'] = n.getAttribute("ast_value");
	if(n.hasAttribute("ast_type")) ans['type'] = n.getAttribute("ast_type");
	else if(n.getAttribute("char") == "yes") ans['type'] = "name";
	
	var iterator = this.xpath_list("./*[name()='c' or name()='l']", n)
	for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){
	    if(nn.hasAttribute("name")) ans.kwargs[nn.getAttribute("name")] = this.syntax_tree(nn)
	    else ans.args.push(this.syntax_tree(nn))
	}
    }
    else if(n.nodeName == "l"){
	ans = [];
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    ans.push(this.syntax_tree(nn));
	}
    }
    else if(n.nodeName == "c" || n.nodeName == "m"){
	var tokens = []
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    if(nn.nodeName == "e"){
		tokens = tokens.concat(GuppyDoc.tokenise(nn.firstChild.textContent));
	    }
	    else if(nn.nodeName == "f"){
		tokens.push(this.syntax_tree(nn));
	    }
	}
	ans = GuppyDoc.parse(tokens);
    }
    return ans;
}

GuppyDoc.prototype.xpath_node = function(xpath, node){
    node = node || this.root()
    return this.base.evaluate(xpath, node, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
}

GuppyDoc.prototype.xpath_list = function(xpath, node){
    node = node || this.root()
    return this.base.evaluate(xpath, node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
}

/** 
    Get the names of symbols used in this document
    @memberof GuppyDoc
    @param {string[]} [groups] - A list of groups you want strings for
    @returns {string[]}
*/
GuppyDoc.prototype.get_symbols = function(groups){
    var types = {};
    var ans = [];
    var iterator = groups ? this.xpath_list("//f") : this.xpath_list("//f[@group='"+groups[i]+"']");
    for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext())
	types[nn.getAttribute("type")] = true;
    for(var t in types)
	ans.push(t);
    return ans;
}

/** 
    Set the content of the document
    @memberof GuppyDoc
    @param {string} xml_data - An XML string representing the content of the document
*/
GuppyDoc.prototype.set_content = function(xml_data){
    this.base = (new window.DOMParser()).parseFromString(xml_data, "text/xml");
    this.ensure_text_nodes();
}

GuppyDoc.bracket_xpath = "(count(./*) != 1 and not \
		          ( \
                            count(./e)=2 and \
			    count(./f)=1 and \
			    count(./e[string-length(text())=0])=2 and \
			    ( \
			      (\
                                count(./f/c)=1 and\
			        count(./f/c[@is_bracket='yes'])=1\
			      )\
			      or\
			      (\
			        f/@c='yes' and \
				count(./e[@current='yes'])=0 and \
				count(./e[@temp='yes'])=0 \
			      )\
			    )\
			  )\
			)  \
			or\
		        (\
			  count(./*) = 1 and \
			  string-length(./e/text()) != 1 and \
			  number(./e/text()) != ./e/text() \
			) \
			or \
		        ( \
			  count(./*) = 1 and \
			  ./e/@current = 'yes' \
			) \
			or \
		        ( \
			  count(./*) = 1 and \
			  ./e/@temp = 'yes' \
			)"

GuppyDoc.prototype.manual_render = function(t,n,r){
    var ans = "";
    if(n.nodeName == "e"){
	if(t == "latex" && r){
	    ans = n.getAttribute("render");
	}
	else if(t == "text"){
	    ans = n.firstChild.textContent;
	    if(n.previousSibling && n.nextSibling && ans == "")
		ans = " * ";
	    else {
		ans = ans.replace(/(.)([^a-zA-Z0-9.])(.)/g,"$1 $2 $3");
		ans = ans.replace(/([a-zA-Z])(?=\.)/g,"$1 * ");
		ans = ans.replace(/(\.)(?=[a-zA-Z])/g,"$1 * ");
		ans = ans.replace(/([a-zA-Z])(?=[a-zA-Z0-9])/g,"$1 * ");
		ans = ans.replace(/([a-zA-Z0-9])(?=[a-zA-Z])/g,"$1 * ");
		if(n.previousSibling && n.previousSibling.getAttribute("group") != "operations") ans = ans.replace(/^([a-zA-Z0-9])/g," * $1");
		if(n.nextSibling && n.nextSibling.getAttribute("group") != "operations") ans = ans.replace(/([a-zA-Z0-9])$/g,"$1 * ");
		ans = " "+ans+" ";
	    }
	}
	else{
	    ans = n.firstChild.textContent;
	}
    }
    else if(n.nodeName == "f"){
	var real_type = (t == "latex" && this.is_small(n)) ? "small_latex" : t;
	var nn = this.xpath_node("./b[@p='"+real_type+"']", n) || this.xpath_node("./b[@p='"+t+"']", n);
	if(nn) ans = this.manual_render(t,nn,r);
    }
    else if(n.nodeName == "b"){
	var cs = []
	var i = 1;
	var par = n.parentNode;
	for(var nn = par.firstChild; nn != null; nn = nn.nextSibling)
	    if(nn.nodeName == "c" || nn.nodeName == "l") cs[i++] = this.manual_render(t,nn,r);
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    if(nn.nodeType == 3) ans += nn.textContent;
	    else if(nn.nodeType == 1){
		if(nn.hasAttribute("d")){
		    var dim = parseInt(nn.getAttribute("d"));
		    var joiner = function(d,l){
			if(d > 1) for(var k = 0; k < l.length; k++) l[k] = joiner(d-1,l[k]);
			return l.join(nn.getAttribute('sep'+(d-1)));
		    }
		    ans += joiner(dim,cs[parseInt(nn.getAttribute("ref"))]);
		}
		else ans += cs[parseInt(nn.getAttribute("ref"))];
	    }
	}
    }
    else if(n.nodeName == "l"){
	ans = [];
	var i = 0;
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    ans[i++] = this.manual_render(t,nn,r);
	}
    }
    else if(n.nodeName == "c" || n.nodeName == "m"){
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling)
	    ans += this.manual_render(t,nn,r);
	if(t == "latex" &&
           n.getAttribute("bracket") == "yes" &&
	   this.base.evaluate(GuppyDoc.bracket_xpath, n, null,
			 XPathResult.BOOLEAN_TYPE, null).booleanValue){ 
	    ans = "\\left("+ans+"\\right)";
	}
    }
    return ans;
}

GuppyDoc.prototype.path_to = function(n){
    var name = n.nodeName;
    if(name == "m") return "guppy_loc_m";
    var ns = 0;
    for(var nn = n; nn != null; nn = nn.previousSibling) if(nn.nodeType == 1 && nn.nodeName == name) ns++;
    return this.path_to(n.parentNode)+"_"+name+""+ns;
}

GuppyDoc.tokenise = function(s){
    var tokens = [
	{"type":"number", "re":"^[0-9]+(\\.[0-9]+)?", "value":function(m){return Number(m)}},
	{"type":"operator", "re":"^[\-+*/!]", "value":function(m){return m}},
	{"type":"name", "re":"^[a-zA-Z]", "value":function(m){return m}},
	{"type":"space", "re":"^\\s+", "value":function(m){return m}},
    ];
    var ans = [];
    while(s.length > 0){
	var ok = false;
	for(var i = 0; i < tokens.length; i++){
	    var t = tokens[i];
	    re = RegExp(t.re);
	    var m = re.exec(s);
	    if(m){
		m = m[0];
		s = s.substring(m.length);
		ok = true;
		if(t.type != "space") ans.push({"type":t.type, "value": t.value(m)})
		break;
	    }
	}
	if(!ok){
	    console.log("Tokenising error");
	    return [];
	}
    }
    return ans;
}

GuppyDoc.parse = function(tokens){
    var symbol_table = {};

    var original_symbol = {
	nud: function () { throw Error("Undefined"); },
	led: function (left) { throw Error("Missing operator"); }
    };

    var mul = function(left){ return ["*", [left, this.nud()]]; };
    
    var symbol = function (id, bp) {
	var s = symbol_table[id];
	bp = bp || 0;
	if (s) {
            if (bp >= s.lbp) {
		s.lbp = bp;
            }
	} else {
            s = Object.create(original_symbol);
            s.id = s.value = id;
            s.lbp = bp;
            symbol_table[id] = s;
	}
	return s;
    };

    symbol("(end)");

    s = symbol("(blank)", 60);
    s.nud = function(){ return ["blank"];};
    
    s = symbol("(function)", 60);
    s.led = mul;
    s.nud = function(){ return [this.value, this.args || [], this.kwargs || {}];};
    
    s = symbol("(literal)", 60);
    s.led = mul;
    s.nud = function(){ return ["val", [this.value]] };

    s = symbol("(var)", 60);
    s.led = mul;
    s.nud = function(){ return ["var", [this.value]] };

    var token;
    var token_nr = 0;

    var advance = function (id) {
	var a, o, t, v;
	if (id && token.id !== id) {
            throw Error("Expected '" + id + "'");
	}
	if (token_nr >= tokens.length) {
            token = symbol_table["(end)"];
            return;
	}
	t = tokens[token_nr];
	token_nr += 1;
	v = t.value;
	var args = null;
	var kwargs = null;
	a = t.type;
	if (a === "name") {
            o = symbol_table["(var)"];
	} else if (a === "operator") {
            o = symbol_table[v];
            if (!o) {
		t.error("Unknown operator.");
            }
	} else if (a ===  "number") {
            a = "literal";
            o = symbol_table["(literal)"];
	} else if (a ===  "function") {
            a = "function";
            o = symbol_table["(function)"];
	    args = t.args;
	    kwargs = t.kwargs;
	} else {
            throw Error("Unexpected token",t);
	}
	token = Object.create(o);
	token.type = a;
	token.value = v;
	if(args) token.args = args;
	if(kwargs) token.kwargs = kwargs;
	return token;
    };


    var expression = function (rbp) {
	var left;
	var t = token;
	advance();
	left = t.nud();
	while (rbp < token.lbp) {
            t = token;
            advance();
            left = t.led(left);
	}
	return left;
    };

    var infix = function (id, bp, led) {
	var s = symbol(id, bp);
	s.led = led || function (left) {
            return [this.value, [left, expression(bp)]];
	};
	return s;
    }

    infix("+", 50);
    infix("-", 50);
    infix("*", 60);
    infix("/", 60);
    var prefix = function (id, nud) {
	var s = symbol(id);
	s.nud = nud || function () {
            return [this.value, [expression(70)]];
	};
	return s;
    }

    prefix("-");
    prefix("!");
    prefix("typeof");

    if(tokens.length == 0) return ["blank"];
    
    advance();
    
    return expression(10);
}

module.exports = GuppyDoc;

},{}],6:[function(require,module,exports){
GuppyHelp = document.createElement("div");
GuppyHelp.setAttribute("class","guppy_help");
GuppyHelp.style = "padding:10px;border:1px solid black; background-color: #fff;position:absolute;top:0;left:0;display:none;";
GuppyHelp.innerHTML = `Start typing a mathematical function to automatically insert it.  <style>td{ vertical-align:top;padding: 2px;}</style>
<table style="width:100%;table-layout:fixed">
<tr><td style="vertical-align:top;border-right:1px solid black;padding-right:15px;">
<table cell-padding="5px">
                <tr>
                    <td><b>Type...</b></td>
                    <td><b>...to create</b></td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">exp or ^</font>
                    </td>
                    <td>Exponent</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">sub or _</font>
                    </td>
                    <td>Subscript</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">frac or / </font>
                    </td>
                    <td>Big fraction</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">shift-/ </font>
                    </td>
                    <td>Division</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">abs</font>
                    </td>
                    <td>Absolute value</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">sqrt</font>
                    </td>
                    <td>Square root</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">root</font>
                    </td>
                    <td>nth root</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">pi</font>
                    </td>
                    <td>pi</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">sin/cos/tan</font>
                    </td>
                    <td>Sine/cosine/tangent</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">log or ln</font>
                    </td>
                    <td>Natural logarithm</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">deriv</font>
                    </td>
                    <td>Derivative</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">int</font>
                    </td>
                    <td>Indefinite integral</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">defi</font>
                    </td>
                    <td>Definite integral</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">sum</font>
                    </td>
                    <td>Summation</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">vec</font>
                    </td>
                    <td>Vector</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">mat</font>
                    </td>
                    <td>Matrix</td>
                </tr>
            </table></td><td style="vertical-align:top;padding-left:15px;">
            <table>
                <tr>
                    <td><b>Press...</b></td>
                    <td><b>...to do</b></td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">left/right arrows</font>
                    </td>
                    <td>Move cursor</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">shift+left/right arrows</font>
                    </td>
                    <td>Select region</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">ctrl+a</font>
                    </td>
                    <td>Select all</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">ctrl+x/c/v</font>
                    </td>
                    <td>Cut/copy/paste</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">ctrl+z/y</font>
                    </td>
                    <td>Undo/redo</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">ctrl+left/right</font>
                    </td>
                    <td>Add entry to list or column to matrix</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">shift+ctrl+left/right</font>
                    </td>
                    <td>Add copy of current entry/column to to list/matrix</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">ctrl+up/down</font>
                    </td>
                    <td>Add row to matrix</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">shift+ctrl+up/down</font>
                    </td>
                    <td>Add copy of current row to matrix</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">ctrl+backspace</font>
                    </td>
                    <td>Delete current entry in list or column in
                    matrix</td>
                </tr>
                <tr>
                    <td>
                        <font face="monospace">ctrl+shift+backspace</font>
                    </td>
                    <td>Delete current row in matrix</td>
                </tr>
</table></td></tr></table>`;

module.exports = GuppyHelp;

},{}],7:[function(require,module,exports){
GuppySymbols = {"symbols":{}};

GuppySymbols.eval_template = function(template, name, args){
    args['name'] = name;
    if(Object.prototype.toString.call(template) == "[object String]"){
	var ans = template;
	for(var name in args){
	    ans = ans.replace(new RegExp("\\{\\$"+name+"\\}"),args[name]);
	}
	return ans;
    }
    else{
	for(var x in template) {
	    template[x] = GuppySymbols.eval_template(template[x], name, args)
	}
	return template;
    }
}

module.exports = GuppySymbols;

},{}],8:[function(require,module,exports){
var GuppyUtils = {};

GuppyUtils.CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.TEMP_SMALL_CARET = "\\cursor[0em]{0.6em}"
GuppyUtils.TEMP_CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.SMALL_CARET = "\\cursor[-0.05em]{0.5em}"
GuppyUtils.SEL_CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.SMALL_SEL_CARET = "\\cursor[-0.05em]{0.5em}"
GuppyUtils.SEL_COLOR = "red"

GuppyUtils.is_blank = function(n){
    return n.firstChild == null || n.firstChild.nodeValue == '';
}

GuppyUtils.get_length = function(n){
    if(GuppyUtils.is_blank(n) || n.nodeName == 'f') return 0
    return n.firstChild.nodeValue.length;
}

GuppyUtils.path_to = function(n){
    var name = n.nodeName;
    if(name == "m") return "guppy_loc_m";
    var ns = 0;
    for(var nn = n; nn != null; nn = nn.previousSibling) if(nn.nodeType == 1 && nn.nodeName == name) ns++;
    return GuppyUtils.path_to(n.parentNode)+"_"+name+""+ns;
}

GuppyUtils.is_text = function(nn){
    return nn.parentNode.getAttribute("mode") && (nn.parentNode.getAttribute("mode") == "text" || nn.parentNode.getAttribute("mode") == "symbol");
}

GuppyUtils.is_symbol = function(nn){
    return nn.parentNode.getAttribute("mode") && nn.parentNode.getAttribute("mode") == "symbol";
}

GuppyUtils.is_small = function(nn){
    var n = nn.parentNode;
    while(n != null && n.nodeName != 'm'){
	if(n.getAttribute("small") == "yes"){
	    return true;
	}
	n = n.parentNode
	while(n != null && n.nodeName != 'c')
	    n = n.parentNode;
    }
    return false;
}

module.exports = GuppyUtils;

},{}]},{},[3])(3)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vzci9saWIvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsImxpYi9rYXRleC9rYXRleC1tb2RpZmllZC5taW4uanMiLCJub2RlX21vZHVsZXMvbW91c2V0cmFwL21vdXNldHJhcC5qcyIsInNyYy9ndXBweS5qcyIsInNyYy9ndXBweV9iYWNrZW5kLmpzIiwic3JjL2d1cHB5X2RvYy5qcyIsInNyYy9ndXBweV9oZWxwLmpzIiwic3JjL2d1cHB5X3N5bWJvbHMuanMiLCJzcmMvZ3VwcHlfdXRpbHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOWdDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDam9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcjNDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2xhQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN2TEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIihmdW5jdGlvbihlKXtpZih0eXBlb2YgZXhwb3J0cz09PVwib2JqZWN0XCImJnR5cGVvZiBtb2R1bGUhPT1cInVuZGVmaW5lZFwiKXttb2R1bGUuZXhwb3J0cz1lKCl9ZWxzZSBpZih0eXBlb2YgZGVmaW5lPT09XCJmdW5jdGlvblwiJiZkZWZpbmUuYW1kKXtkZWZpbmUoW10sZSl9ZWxzZXt2YXIgdDtpZih0eXBlb2Ygd2luZG93IT09XCJ1bmRlZmluZWRcIil7dD13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09XCJ1bmRlZmluZWRcIil7dD1nbG9iYWx9ZWxzZSBpZih0eXBlb2Ygc2VsZiE9PVwidW5kZWZpbmVkXCIpe3Q9c2VsZn1lbHNle3Q9dGhpc310LmthdGV4PWUoKX19KShmdW5jdGlvbigpe3ZhciBlLHQscjtyZXR1cm4gZnVuY3Rpb24gZSh0LHIsYSl7ZnVuY3Rpb24gaShvLHMpe2lmKCFyW29dKXtpZighdFtvXSl7dmFyIGw9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighcyYmbClyZXR1cm4gbChvLCEwKTtpZihuKXJldHVybiBuKG8sITApO3ZhciB1PW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgdS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLHV9dmFyIGg9cltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGguZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgcj10W29dWzFdW2VdO3JldHVybiBpKHI/cjplKX0saCxoLmV4cG9ydHMsZSx0LHIsYSl9cmV0dXJuIHJbb10uZXhwb3J0c312YXIgbj10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288YS5sZW5ndGg7bysrKWkoYVtvXSk7cmV0dXJuIGl9KHsxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vc3JjL1BhcnNlRXJyb3JcIik7dmFyIGk9ZShcIi4vc3JjL1NldHRpbmdzXCIpO3ZhciBuPWUoXCIuL3NyYy9idWlsZFRyZWVcIik7dmFyIG89ZShcIi4vc3JjL3BhcnNlVHJlZVwiKTt2YXIgcz1lKFwiLi9zcmMvdXRpbHNcIik7dmFyIGw9ZnVuY3Rpb24gZSh0LHIsYSl7cy5jbGVhck5vZGUocik7dmFyIGw9bmV3IGkoYSk7dmFyIHU9byh0LGwpO3ZhciBoPW4odSx0LGwpLnRvTm9kZSgpO3IuYXBwZW5kQ2hpbGQoaCl9O2lmKHR5cGVvZiBkb2N1bWVudCE9PVwidW5kZWZpbmVkXCIpe2lmKGRvY3VtZW50LmNvbXBhdE1vZGUhPT1cIkNTUzFDb21wYXRcIil7dHlwZW9mIGNvbnNvbGUhPT1cInVuZGVmaW5lZFwiJiZjb25zb2xlLndhcm4oXCJXYXJuaW5nOiBLYVRlWCBkb2Vzbid0IHdvcmsgaW4gcXVpcmtzIG1vZGUuIE1ha2Ugc3VyZSB5b3VyIFwiK1wid2Vic2l0ZSBoYXMgYSBzdWl0YWJsZSBkb2N0eXBlLlwiKTtsPWZ1bmN0aW9uIGUoKXt0aHJvdyBuZXcgYShcIkthVGVYIGRvZXNuJ3Qgd29yayBpbiBxdWlya3MgbW9kZS5cIil9fX12YXIgdT1mdW5jdGlvbiBlKHQscil7dmFyIGE9bmV3IGkocik7dmFyIHM9byh0LGEpO3JldHVybiBuKHMsdCxhKS50b01hcmt1cCgpfTt2YXIgaD1mdW5jdGlvbiBlKHQscil7dmFyIGE9bmV3IGkocik7cmV0dXJuIG8odCxhKX07dC5leHBvcnRzPXtyZW5kZXI6bCxyZW5kZXJUb1N0cmluZzp1LF9fcGFyc2U6aCxQYXJzZUVycm9yOmF9fSx7XCIuL3NyYy9QYXJzZUVycm9yXCI6MTAsXCIuL3NyYy9TZXR0aW5nc1wiOjEyLFwiLi9zcmMvYnVpbGRUcmVlXCI6MTcsXCIuL3NyYy9wYXJzZVRyZWVcIjoyNyxcIi4vc3JjL3V0aWxzXCI6MzF9XSwyOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXtkZWZhdWx0OmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnlcIiksX19lc01vZHVsZTp0cnVlfX0se1wiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5XCI6M31dLDM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi4vLi4vbW9kdWxlcy9fY29yZVwiKSxpPWEuSlNPTnx8KGEuSlNPTj17c3RyaW5naWZ5OkpTT04uc3RyaW5naWZ5fSk7dC5leHBvcnRzPWZ1bmN0aW9uIGUodCl7cmV0dXJuIGkuc3RyaW5naWZ5LmFwcGx5KGksYXJndW1lbnRzKX19LHtcIi4uLy4uL21vZHVsZXMvX2NvcmVcIjo0fV0sNDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPXQuZXhwb3J0cz17dmVyc2lvbjpcIjIuNC4wXCJ9O2lmKHR5cGVvZiBfX2U9PVwibnVtYmVyXCIpX19lPWF9LHt9XSw1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtpZighZS5fX21hdGNoQXRSZWxvY2F0YWJsZSl7dmFyIHQ9ZS5zb3VyY2UrXCJ8KClcIjt2YXIgcj1cImdcIisoZS5pZ25vcmVDYXNlP1wiaVwiOlwiXCIpKyhlLm11bHRpbGluZT9cIm1cIjpcIlwiKSsoZS51bmljb2RlP1widVwiOlwiXCIpO2UuX19tYXRjaEF0UmVsb2NhdGFibGU9bmV3IFJlZ0V4cCh0LHIpfXJldHVybiBlLl9fbWF0Y2hBdFJlbG9jYXRhYmxlfWZ1bmN0aW9uIGkoZSx0LHIpe2lmKGUuZ2xvYmFsfHxlLnN0aWNreSl7dGhyb3cgbmV3IEVycm9yKFwibWF0Y2hBdCguLi4pOiBPbmx5IG5vbi1nbG9iYWwgcmVnZXhlcyBhcmUgc3VwcG9ydGVkXCIpfXZhciBpPWEoZSk7aS5sYXN0SW5kZXg9cjt2YXIgbj1pLmV4ZWModCk7aWYobltuLmxlbmd0aC0xXT09bnVsbCl7bi5sZW5ndGg9bi5sZW5ndGgtMTtyZXR1cm4gbn1lbHNle3JldHVybiBudWxsfX10LmV4cG9ydHM9aX0se31dLDY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO3ZhciBpPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dmFyIG49T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtmdW5jdGlvbiBvKGUpe2lmKGU9PT1udWxsfHxlPT09dW5kZWZpbmVkKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWRcIil9cmV0dXJuIE9iamVjdChlKX1mdW5jdGlvbiBzKCl7dHJ5e2lmKCFPYmplY3QuYXNzaWduKXtyZXR1cm4gZmFsc2V9dmFyIGU9bmV3IFN0cmluZyhcImFiY1wiKTtlWzVdPVwiZGVcIjtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhlKVswXT09PVwiNVwiKXtyZXR1cm4gZmFsc2V9dmFyIHQ9e307Zm9yKHZhciByPTA7cjwxMDtyKyspe3RbXCJfXCIrU3RyaW5nLmZyb21DaGFyQ29kZShyKV09cn12YXIgYT1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHRbZV19KTtpZihhLmpvaW4oXCJcIikhPT1cIjAxMjM0NTY3ODlcIil7cmV0dXJuIGZhbHNlfXZhciBpPXt9O1wiYWJjZGVmZ2hpamtsbW5vcHFyc3RcIi5zcGxpdChcIlwiKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2lbZV09ZX0pO2lmKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30saSkpLmpvaW4oXCJcIikhPT1cImFiY2RlZmdoaWprbG1ub3BxcnN0XCIpe3JldHVybiBmYWxzZX1yZXR1cm4gdHJ1ZX1jYXRjaChlKXtyZXR1cm4gZmFsc2V9fXQuZXhwb3J0cz1zKCk/T2JqZWN0LmFzc2lnbjpmdW5jdGlvbihlLHQpe3ZhciByO3ZhciBzPW8oZSk7dmFyIGw7Zm9yKHZhciB1PTE7dTxhcmd1bWVudHMubGVuZ3RoO3UrKyl7cj1PYmplY3QoYXJndW1lbnRzW3VdKTtmb3IodmFyIGggaW4gcil7aWYoaS5jYWxsKHIsaCkpe3NbaF09cltoXX19aWYoYSl7bD1hKHIpO2Zvcih2YXIgcD0wO3A8bC5sZW5ndGg7cCsrKXtpZihuLmNhbGwocixsW3BdKSl7c1tsW3BdXT1yW2xbcF1dfX19fXJldHVybiBzfX0se31dLDc6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwibWF0Y2gtYXRcIik7dmFyIGk9ZShcIi4vUGFyc2VFcnJvclwiKTtmdW5jdGlvbiBuKGUpe3RoaXMuaW5wdXQ9ZTt0aGlzLnBvcz0wfWZ1bmN0aW9uIG8oZSx0LHIsYSl7dGhpcy50ZXh0PWU7dGhpcy5zdGFydD10O3RoaXMuZW5kPXI7dGhpcy5sZXhlcj1hfW8ucHJvdG90eXBlLnJhbmdlPWZ1bmN0aW9uKGUsdCl7aWYoZS5sZXhlciE9PXRoaXMubGV4ZXIpe3JldHVybiBuZXcgbyh0KX1yZXR1cm4gbmV3IG8odCx0aGlzLnN0YXJ0LGUuZW5kLHRoaXMubGV4ZXIpfTt2YXIgcz1uZXcgUmVnRXhwKFwiKFsgXFxyXFxuXFx0XSspfFwiK1wiKFshLVxcXFxbXFxcXF0tXFx1MjAyN1xcdTIwMmEtXFx1ZDdmZlxcdWY5MDAtXFx1ZmZmZl1cIitcInxbXFx1ZDgwMC1cXHVkYmZmXVtcXHVkYzAwLVxcdWRmZmZdXCIrXCJ8XFxcXFxcXFwoPzpbYS16QS1aXSt8W15cXHVkODAwLVxcdWRmZmZdKVwiK1wiKVwiKTtuLnByb3RvdHlwZS5sZXg9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmlucHV0O3ZhciB0PXRoaXMucG9zO2lmKHQ9PT1lLmxlbmd0aCl7cmV0dXJuIG5ldyBvKFwiRU9GXCIsdCx0LHRoaXMpfXZhciByPWEocyxlLHQpO2lmKHI9PT1udWxsKXt0aHJvdyBuZXcgaShcIlVuZXhwZWN0ZWQgY2hhcmFjdGVyOiAnXCIrZVt0XStcIidcIixuZXcgbyhlW3RdLHQsdCsxLHRoaXMpKX12YXIgbj1yWzJdfHxcIiBcIjt2YXIgbD10aGlzLnBvczt0aGlzLnBvcys9clswXS5sZW5ndGg7dmFyIHU9dGhpcy5wb3M7cmV0dXJuIG5ldyBvKG4sbCx1LHRoaXMpfTt0LmV4cG9ydHM9bn0se1wiLi9QYXJzZUVycm9yXCI6MTAsXCJtYXRjaC1hdFwiOjV9XSw4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vTGV4ZXJcIik7dmFyIGk9ZShcIi4vbWFjcm9zXCIpO3ZhciBuPWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIG89ZShcIm9iamVjdC1hc3NpZ25cIik7ZnVuY3Rpb24gcyhlLHQpe3RoaXMubGV4ZXI9bmV3IGEoZSk7dGhpcy5tYWNyb3M9byh7fSxpLHQpO3RoaXMuc3RhY2s9W107dGhpcy5kaXNjYXJkZWRXaGl0ZVNwYWNlPVtdfXMucHJvdG90eXBlLm5leHRUb2tlbj1mdW5jdGlvbigpe2Zvcig7Oyl7aWYodGhpcy5zdGFjay5sZW5ndGg9PT0wKXt0aGlzLnN0YWNrLnB1c2godGhpcy5sZXhlci5sZXgoKSl9dmFyIGU9dGhpcy5zdGFjay5wb3AoKTt2YXIgdD1lLnRleHQ7aWYoISh0LmNoYXJBdCgwKT09PVwiXFxcXFwiJiZ0aGlzLm1hY3Jvcy5oYXNPd25Qcm9wZXJ0eSh0KSkpe3JldHVybiBlfXZhciByPXZvaWQgMDt2YXIgaT10aGlzLm1hY3Jvc1t0XTtpZih0eXBlb2YgaT09PVwic3RyaW5nXCIpe3ZhciBvPTA7aWYoaS5pbmRleE9mKFwiI1wiKSE9PS0xKXt2YXIgcz1pLnJlcGxhY2UoLyMjL2csXCJcIik7d2hpbGUocy5pbmRleE9mKFwiI1wiKyhvKzEpKSE9PS0xKXsrK299fXZhciBsPW5ldyBhKGkpO2k9W107cj1sLmxleCgpO3doaWxlKHIudGV4dCE9PVwiRU9GXCIpe2kucHVzaChyKTtyPWwubGV4KCl9aS5yZXZlcnNlKCk7aS5udW1BcmdzPW87dGhpcy5tYWNyb3NbdF09aX1pZihpLm51bUFyZ3Mpe3ZhciB1PVtdO3ZhciBoPXZvaWQgMDtmb3IoaD0wO2g8aS5udW1BcmdzOysraCl7dmFyIHA9dGhpcy5nZXQodHJ1ZSk7aWYocC50ZXh0PT09XCJ7XCIpe3ZhciBjPVtdO3ZhciB2PTE7d2hpbGUodiE9PTApe3I9dGhpcy5nZXQoZmFsc2UpO2MucHVzaChyKTtpZihyLnRleHQ9PT1cIntcIil7Kyt2fWVsc2UgaWYoci50ZXh0PT09XCJ9XCIpey0tdn1lbHNlIGlmKHIudGV4dD09PVwiRU9GXCIpe3Rocm93IG5ldyBuKFwiRW5kIG9mIGlucHV0IGluIG1hY3JvIGFyZ3VtZW50XCIscCl9fWMucG9wKCk7Yy5yZXZlcnNlKCk7dVtoXT1jfWVsc2UgaWYocC50ZXh0PT09XCJFT0ZcIil7dGhyb3cgbmV3IG4oXCJFbmQgb2YgaW5wdXQgZXhwZWN0aW5nIG1hY3JvIGFyZ3VtZW50XCIsZSl9ZWxzZXt1W2hdPVtwXX19aT1pLnNsaWNlKCk7Zm9yKGg9aS5sZW5ndGgtMTtoPj0wOy0taCl7cj1pW2hdO2lmKHIudGV4dD09PVwiI1wiKXtpZihoPT09MCl7dGhyb3cgbmV3IG4oXCJJbmNvbXBsZXRlIHBsYWNlaG9sZGVyIGF0IGVuZCBvZiBtYWNybyBib2R5XCIscil9cj1pWy0taF07aWYoci50ZXh0PT09XCIjXCIpe2kuc3BsaWNlKGgrMSwxKX1lbHNlIGlmKC9eWzEtOV0kLy50ZXN0KHIudGV4dCkpe2kuc3BsaWNlLmFwcGx5KGksW2gsMl0uY29uY2F0KHVbci50ZXh0LTFdKSl9ZWxzZXt0aHJvdyBuZXcgbihcIk5vdCBhIHZhbGlkIGFyZ3VtZW50IG51bWJlclwiLHIpfX19fXRoaXMuc3RhY2s9dGhpcy5zdGFjay5jb25jYXQoaSl9fTtzLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7dGhpcy5kaXNjYXJkZWRXaGl0ZVNwYWNlPVtdO3ZhciB0PXRoaXMubmV4dFRva2VuKCk7aWYoZSl7d2hpbGUodC50ZXh0PT09XCIgXCIpe3RoaXMuZGlzY2FyZGVkV2hpdGVTcGFjZS5wdXNoKHQpO3Q9dGhpcy5uZXh0VG9rZW4oKX19cmV0dXJuIHR9O3MucHJvdG90eXBlLnVuZ2V0PWZ1bmN0aW9uKGUpe3RoaXMuc3RhY2sucHVzaChlKTt3aGlsZSh0aGlzLmRpc2NhcmRlZFdoaXRlU3BhY2UubGVuZ3RoIT09MCl7dGhpcy5zdGFjay5wdXNoKHRoaXMuZGlzY2FyZGVkV2hpdGVTcGFjZS5wb3AoKSl9fTt0LmV4cG9ydHM9c30se1wiLi9MZXhlclwiOjcsXCIuL1BhcnNlRXJyb3JcIjoxMCxcIi4vbWFjcm9zXCI6MjQsXCJvYmplY3QtYXNzaWduXCI6Nn1dLDk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9mb250TWV0cmljc1wiKTt2YXIgaT02O3ZhciBuPVtbMSwxLDFdLFsyLDEsMV0sWzMsMSwxXSxbNCwyLDFdLFs1LDIsMV0sWzYsMywxXSxbNyw0LDJdLFs4LDYsM10sWzksNyw2XSxbMTAsOCw3XSxbMTEsMTAsOV1dO3ZhciBvPVsuNSwuNiwuNywuOCwuOSwxLDEuMiwxLjQ0LDEuNzI4LDIuMDc0LDIuNDg4XTtmdW5jdGlvbiBzKGUpe3RoaXMuc3R5bGU9ZS5zdHlsZTt0aGlzLmNvbG9yPWUuY29sb3I7dGhpcy5zaXplPWUuc2l6ZXx8aTt0aGlzLnRleHRTaXplPWUudGV4dFNpemV8fHRoaXMuc2l6ZTt0aGlzLnBoYW50b209ZS5waGFudG9tO3RoaXMuZm9udD1lLmZvbnQ7dGhpcy5zaXplTXVsdGlwbGllcj1vW3RoaXMuc2l6ZS0xXTt0aGlzLl9mb250TWV0cmljcz1udWxsfXMucHJvdG90eXBlLmV4dGVuZD1mdW5jdGlvbihlKXt2YXIgdD17c3R5bGU6dGhpcy5zdHlsZSxzaXplOnRoaXMuc2l6ZSx0ZXh0U2l6ZTp0aGlzLnRleHRTaXplLGNvbG9yOnRoaXMuY29sb3IscGhhbnRvbTp0aGlzLnBoYW50b20sZm9udDp0aGlzLmZvbnR9O2Zvcih2YXIgciBpbiBlKXtpZihlLmhhc093blByb3BlcnR5KHIpKXt0W3JdPWVbcl19fXJldHVybiBuZXcgcyh0KX07ZnVuY3Rpb24gbChlLHQpe3JldHVybiB0LnNpemU8Mj9lOm5bZS0xXVt0LnNpemUtMV19cy5wcm90b3R5cGUuaGF2aW5nU3R5bGU9ZnVuY3Rpb24oZSl7aWYodGhpcy5zdHlsZT09PWUpe3JldHVybiB0aGlzfWVsc2V7cmV0dXJuIHRoaXMuZXh0ZW5kKHtzdHlsZTplLHNpemU6bCh0aGlzLnRleHRTaXplLGUpfSl9fTtzLnByb3RvdHlwZS5oYXZpbmdDcmFtcGVkU3R5bGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oYXZpbmdTdHlsZSh0aGlzLnN0eWxlLmNyYW1wKCkpfTtzLnByb3RvdHlwZS5oYXZpbmdTaXplPWZ1bmN0aW9uKGUpe2lmKHRoaXMuc2l6ZT09PWUmJnRoaXMudGV4dFNpemU9PT1lKXtyZXR1cm4gdGhpc31lbHNle3JldHVybiB0aGlzLmV4dGVuZCh7c3R5bGU6dGhpcy5zdHlsZS50ZXh0KCksc2l6ZTplLHRleHRTaXplOmV9KX19O3MucHJvdG90eXBlLmhhdmluZ0Jhc2VTdHlsZT1mdW5jdGlvbihlKXtlPWV8fHRoaXMuc3R5bGUudGV4dCgpO3ZhciB0PWwoaSxlKTtpZih0aGlzLnNpemU9PT10JiZ0aGlzLnRleHRTaXplPT09aSYmdGhpcy5zdHlsZT09PWUpe3JldHVybiB0aGlzfWVsc2V7cmV0dXJuIHRoaXMuZXh0ZW5kKHtzdHlsZTplLHNpemU6dCxiYXNlU2l6ZTppfSl9fTtzLnByb3RvdHlwZS53aXRoQ29sb3I9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZXh0ZW5kKHtjb2xvcjplfSl9O3MucHJvdG90eXBlLndpdGhQaGFudG9tPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXh0ZW5kKHtwaGFudG9tOnRydWV9KX07cy5wcm90b3R5cGUud2l0aEZvbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZXh0ZW5kKHtmb250OmV8fHRoaXMuZm9udH0pfTtzLnByb3RvdHlwZS5zaXppbmdDbGFzc2VzPWZ1bmN0aW9uKGUpe2lmKGUuc2l6ZSE9PXRoaXMuc2l6ZSl7cmV0dXJuW1wic2l6aW5nXCIsXCJyZXNldC1zaXplXCIrZS5zaXplLFwic2l6ZVwiK3RoaXMuc2l6ZV19ZWxzZXtyZXR1cm5bXX19O3MucHJvdG90eXBlLmJhc2VTaXppbmdDbGFzc2VzPWZ1bmN0aW9uKCl7aWYodGhpcy5zaXplIT09aSl7cmV0dXJuW1wic2l6aW5nXCIsXCJyZXNldC1zaXplXCIrdGhpcy5zaXplLFwic2l6ZVwiK2ldfWVsc2V7cmV0dXJuW119fTtzLnByb3RvdHlwZS5mb250TWV0cmljcz1mdW5jdGlvbigpe2lmKCF0aGlzLl9mb250TWV0cmljcyl7dGhpcy5fZm9udE1ldHJpY3M9YS5nZXRGb250TWV0cmljcyh0aGlzLnNpemUpfXJldHVybiB0aGlzLl9mb250TWV0cmljc307dmFyIHU9e1wia2F0ZXgtYmx1ZVwiOlwiIzY0OTVlZFwiLFwia2F0ZXgtb3JhbmdlXCI6XCIjZmZhNTAwXCIsXCJrYXRleC1waW5rXCI6XCIjZmYwMGFmXCIsXCJrYXRleC1yZWRcIjpcIiNkZjAwMzBcIixcImthdGV4LWdyZWVuXCI6XCIjMjhhZTdiXCIsXCJrYXRleC1ncmF5XCI6XCJncmF5XCIsXCJrYXRleC1wdXJwbGVcIjpcIiM5ZDM4YmRcIixcImthdGV4LWJsdWVBXCI6XCIjY2NmYWZmXCIsXCJrYXRleC1ibHVlQlwiOlwiIzgwZjZmZlwiLFwia2F0ZXgtYmx1ZUNcIjpcIiM2M2Q5ZWFcIixcImthdGV4LWJsdWVEXCI6XCIjMTFhY2NkXCIsXCJrYXRleC1ibHVlRVwiOlwiIzBjN2Y5OVwiLFwia2F0ZXgtdGVhbEFcIjpcIiM5NGZmZjVcIixcImthdGV4LXRlYWxCXCI6XCIjMjZlZGQ1XCIsXCJrYXRleC10ZWFsQ1wiOlwiIzAxZDFjMVwiLFwia2F0ZXgtdGVhbERcIjpcIiMwMWE5OTVcIixcImthdGV4LXRlYWxFXCI6XCIjMjA4MTcwXCIsXCJrYXRleC1ncmVlbkFcIjpcIiNiNmZmYjBcIixcImthdGV4LWdyZWVuQlwiOlwiIzhhZjI4MVwiLFwia2F0ZXgtZ3JlZW5DXCI6XCIjNzRjZjcwXCIsXCJrYXRleC1ncmVlbkRcIjpcIiMxZmFiNTRcIixcImthdGV4LWdyZWVuRVwiOlwiIzBkOTIzZlwiLFwia2F0ZXgtZ29sZEFcIjpcIiNmZmQwYTlcIixcImthdGV4LWdvbGRCXCI6XCIjZmZiYjcxXCIsXCJrYXRleC1nb2xkQ1wiOlwiI2ZmOWMzOVwiLFwia2F0ZXgtZ29sZERcIjpcIiNlMDdkMTBcIixcImthdGV4LWdvbGRFXCI6XCIjYTc1YTA1XCIsXCJrYXRleC1yZWRBXCI6XCIjZmNhOWE5XCIsXCJrYXRleC1yZWRCXCI6XCIjZmY4NDgyXCIsXCJrYXRleC1yZWRDXCI6XCIjZjk2ODVkXCIsXCJrYXRleC1yZWREXCI6XCIjZTg0ZDM5XCIsXCJrYXRleC1yZWRFXCI6XCIjYmMyNjEyXCIsXCJrYXRleC1tYXJvb25BXCI6XCIjZmZiZGUwXCIsXCJrYXRleC1tYXJvb25CXCI6XCIjZmY5MmM2XCIsXCJrYXRleC1tYXJvb25DXCI6XCIjZWQ1ZmE2XCIsXCJrYXRleC1tYXJvb25EXCI6XCIjY2EzMzdjXCIsXCJrYXRleC1tYXJvb25FXCI6XCIjOWUwMzRlXCIsXCJrYXRleC1wdXJwbGVBXCI6XCIjZGRkN2ZmXCIsXCJrYXRleC1wdXJwbGVCXCI6XCIjYzZiOWZjXCIsXCJrYXRleC1wdXJwbGVDXCI6XCIjYWE4N2ZmXCIsXCJrYXRleC1wdXJwbGVEXCI6XCIjNzg1NGFiXCIsXCJrYXRleC1wdXJwbGVFXCI6XCIjNTQzYjc4XCIsXCJrYXRleC1taW50QVwiOlwiI2Y1ZjllOFwiLFwia2F0ZXgtbWludEJcIjpcIiNlZGYyZGZcIixcImthdGV4LW1pbnRDXCI6XCIjZTBlNWNjXCIsXCJrYXRleC1ncmF5QVwiOlwiI2Y2ZjdmN1wiLFwia2F0ZXgtZ3JheUJcIjpcIiNmMGYxZjJcIixcImthdGV4LWdyYXlDXCI6XCIjZTNlNWU2XCIsXCJrYXRleC1ncmF5RFwiOlwiI2Q2ZDhkYVwiLFwia2F0ZXgtZ3JheUVcIjpcIiNiYWJlYzJcIixcImthdGV4LWdyYXlGXCI6XCIjODg4ZDkzXCIsXCJrYXRleC1ncmF5R1wiOlwiIzYyNjU2OVwiLFwia2F0ZXgtZ3JheUhcIjpcIiMzYjNlNDBcIixcImthdGV4LWdyYXlJXCI6XCIjMjEyNDJjXCIsXCJrYXRleC1rYUJsdWVcIjpcIiMzMTQ0NTNcIixcImthdGV4LWthR3JlZW5cIjpcIiM3MUIzMDdcIn07cy5wcm90b3R5cGUuZ2V0Q29sb3I9ZnVuY3Rpb24oKXtpZih0aGlzLnBoYW50b20pe3JldHVyblwidHJhbnNwYXJlbnRcIn1lbHNle3JldHVybiB1W3RoaXMuY29sb3JdfHx0aGlzLmNvbG9yfX07cy5CQVNFU0laRT1pO3QuZXhwb3J0cz1zfSx7XCIuL2ZvbnRNZXRyaWNzXCI6MjF9XSwxMDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSx0KXt2YXIgcj1cIkthVGVYIHBhcnNlIGVycm9yOiBcIitlO3ZhciBpPXZvaWQgMDt2YXIgbj12b2lkIDA7aWYodCYmdC5sZXhlciYmdC5zdGFydDw9dC5lbmQpe3ZhciBvPXQubGV4ZXIuaW5wdXQ7aT10LnN0YXJ0O249dC5lbmQ7aWYoaT09PW8ubGVuZ3RoKXtyKz1cIiBhdCBlbmQgb2YgaW5wdXQ6IFwifWVsc2V7cis9XCIgYXQgcG9zaXRpb24gXCIrKGkrMSkrXCI6IFwifXZhciBzPW8uc2xpY2UoaSxuKS5yZXBsYWNlKC9bXl0vZyxcIiQmXFx1MDMzMlwiKTt2YXIgbD12b2lkIDA7aWYoaT4xNSl7bD1cIlxcdTIwMjZcIitvLnNsaWNlKGktMTUsaSl9ZWxzZXtsPW8uc2xpY2UoMCxpKX12YXIgdT12b2lkIDA7aWYobisxNTxvLmxlbmd0aCl7dT1vLnNsaWNlKG4sbisxNSkrXCJcXHUyMDI2XCJ9ZWxzZXt1PW8uc2xpY2Uobil9cis9bCtzK3V9dmFyIGg9bmV3IEVycm9yKHIpO2gubmFtZT1cIlBhcnNlRXJyb3JcIjtoLl9fcHJvdG9fXz1hLnByb3RvdHlwZTtoLnBvc2l0aW9uPWk7cmV0dXJuIGh9YS5wcm90b3R5cGUuX19wcm90b19fPUVycm9yLnByb3RvdHlwZTt0LmV4cG9ydHM9YX0se31dLDExOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vZnVuY3Rpb25zXCIpO3ZhciBpPWUoXCIuL2Vudmlyb25tZW50c1wiKTt2YXIgbj1lKFwiLi9NYWNyb0V4cGFuZGVyXCIpO3ZhciBvPWUoXCIuL3N5bWJvbHNcIik7dmFyIHM9ZShcIi4vdXRpbHNcIik7dmFyIGw9ZShcIi4vdW5pY29kZVJlZ2V4ZXNcIikuY2prUmVnZXg7dmFyIHU9ZShcIi4vcGFyc2VEYXRhXCIpO3ZhciBoPWUoXCIuL1BhcnNlRXJyb3JcIik7ZnVuY3Rpb24gcChlLHQpe3RoaXMuZ3VsbGV0PW5ldyBuKGUsdC5tYWNyb3MpO2lmKHQuY29sb3JJc1RleHRDb2xvcil7dGhpcy5ndWxsZXQubWFjcm9zW1wiXFxcXGNvbG9yXCJdPVwiXFxcXHRleHRjb2xvclwifXRoaXMuc2V0dGluZ3M9dDt0aGlzLmxlZnRyaWdodERlcHRoPTB9dmFyIGM9dS5QYXJzZU5vZGU7ZnVuY3Rpb24gdihlLHQscil7dGhpcy5yZXN1bHQ9ZTt0aGlzLmlzRnVuY3Rpb249dDt0aGlzLnRva2VuPXJ9cC5wcm90b3R5cGUuZXhwZWN0PWZ1bmN0aW9uKGUsdCl7aWYodGhpcy5uZXh0VG9rZW4udGV4dCE9PWUpe3Rocm93IG5ldyBoKFwiRXhwZWN0ZWQgJ1wiK2UrXCInLCBnb3QgJ1wiK3RoaXMubmV4dFRva2VuLnRleHQrXCInXCIsdGhpcy5uZXh0VG9rZW4pfWlmKHQhPT1mYWxzZSl7dGhpcy5jb25zdW1lKCl9fTtwLnByb3RvdHlwZS5jb25zdW1lPWZ1bmN0aW9uKCl7dGhpcy5uZXh0VG9rZW49dGhpcy5ndWxsZXQuZ2V0KHRoaXMubW9kZT09PVwibWF0aFwiKX07cC5wcm90b3R5cGUuc3dpdGNoTW9kZT1mdW5jdGlvbihlKXt0aGlzLmd1bGxldC51bmdldCh0aGlzLm5leHRUb2tlbik7dGhpcy5tb2RlPWU7dGhpcy5jb25zdW1lKCl9O3AucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKCl7dGhpcy5tb2RlPVwibWF0aFwiO3RoaXMuY29uc3VtZSgpO3ZhciBlPXRoaXMucGFyc2VJbnB1dCgpO3JldHVybiBlfTtwLnByb3RvdHlwZS5wYXJzZUlucHV0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZUV4cHJlc3Npb24oZmFsc2UpO3RoaXMuZXhwZWN0KFwiRU9GXCIsZmFsc2UpO3JldHVybiBlfTt2YXIgZj1bXCJ9XCIsXCJcXFxcZW5kXCIsXCJcXFxccmlnaHRcIixcIiZcIixcIlxcXFxcXFxcXCIsXCJcXFxcY3JcIl07cC5wcm90b3R5cGUucGFyc2VFeHByZXNzaW9uPWZ1bmN0aW9uKGUsdCl7dmFyIHI9W107d2hpbGUodHJ1ZSl7dmFyIGk9dGhpcy5uZXh0VG9rZW47aWYoZi5pbmRleE9mKGkudGV4dCkhPT0tMSl7YnJlYWt9aWYodCYmaS50ZXh0PT09dCl7YnJlYWt9aWYoZSYmYVtpLnRleHRdJiZhW2kudGV4dF0uaW5maXgpe2JyZWFrfXZhciBuPXRoaXMucGFyc2VBdG9tKCk7aWYoIW4pe2lmKCF0aGlzLnNldHRpbmdzLnRocm93T25FcnJvciYmaS50ZXh0WzBdPT09XCJcXFxcXCIpe3ZhciBvPXRoaXMuaGFuZGxlVW5zdXBwb3J0ZWRDbWQoKTtyLnB1c2gobyk7Y29udGludWV9YnJlYWt9ci5wdXNoKG4pfXJldHVybiB0aGlzLmhhbmRsZUluZml4Tm9kZXMocil9O3AucHJvdG90eXBlLmhhbmRsZUluZml4Tm9kZXM9ZnVuY3Rpb24oZSl7dmFyIHQ9LTE7dmFyIHI9dm9pZCAwO2Zvcih2YXIgYT0wO2E8ZS5sZW5ndGg7YSsrKXt2YXIgaT1lW2FdO2lmKGkudHlwZT09PVwiaW5maXhcIil7aWYodCE9PS0xKXt0aHJvdyBuZXcgaChcIm9ubHkgb25lIGluZml4IG9wZXJhdG9yIHBlciBncm91cFwiLGkudmFsdWUudG9rZW4pfXQ9YTtyPWkudmFsdWUucmVwbGFjZVdpdGh9fWlmKHQhPT0tMSl7dmFyIG49dm9pZCAwO3ZhciBvPXZvaWQgMDt2YXIgcz1lLnNsaWNlKDAsdCk7dmFyIGw9ZS5zbGljZSh0KzEpO2lmKHMubGVuZ3RoPT09MSYmc1swXS50eXBlPT09XCJvcmRncm91cFwiKXtuPXNbMF19ZWxzZXtuPW5ldyBjKFwib3JkZ3JvdXBcIixzLHRoaXMubW9kZSl9aWYobC5sZW5ndGg9PT0xJiZsWzBdLnR5cGU9PT1cIm9yZGdyb3VwXCIpe289bFswXX1lbHNle289bmV3IGMoXCJvcmRncm91cFwiLGwsdGhpcy5tb2RlKX12YXIgdT10aGlzLmNhbGxGdW5jdGlvbihyLFtuLG9dLG51bGwpO3JldHVybltuZXcgYyh1LnR5cGUsdSx0aGlzLm1vZGUpXX1lbHNle3JldHVybiBlfX07dmFyIG09MTtwLnByb3RvdHlwZS5oYW5kbGVTdXBTdWJzY3JpcHQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5uZXh0VG9rZW47dmFyIHI9dC50ZXh0O3RoaXMuY29uc3VtZSgpO3ZhciBpPXRoaXMucGFyc2VHcm91cCgpO2lmKCFpKXtpZighdGhpcy5zZXR0aW5ncy50aHJvd09uRXJyb3ImJnRoaXMubmV4dFRva2VuLnRleHRbMF09PT1cIlxcXFxcIil7cmV0dXJuIHRoaXMuaGFuZGxlVW5zdXBwb3J0ZWRDbWQoKX1lbHNle3Rocm93IG5ldyBoKFwiRXhwZWN0ZWQgZ3JvdXAgYWZ0ZXIgJ1wiK3IrXCInXCIsdCl9fWVsc2UgaWYoaS5pc0Z1bmN0aW9uKXt2YXIgbj1hW2kucmVzdWx0XS5ncmVlZGluZXNzO2lmKG4+bSl7cmV0dXJuIHRoaXMucGFyc2VGdW5jdGlvbihpKX1lbHNle3Rocm93IG5ldyBoKFwiR290IGZ1bmN0aW9uICdcIitpLnJlc3VsdCtcIicgd2l0aCBubyBhcmd1bWVudHMgXCIrXCJhcyBcIitlLHQpfX1lbHNle3JldHVybiBpLnJlc3VsdH19O3AucHJvdG90eXBlLmhhbmRsZVVuc3VwcG9ydGVkQ21kPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5uZXh0VG9rZW4udGV4dDt2YXIgdD1bXTtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKyl7dC5wdXNoKG5ldyBjKFwidGV4dG9yZFwiLGVbcl0sXCJ0ZXh0XCIpKX12YXIgYT1uZXcgYyhcInRleHRcIix7Ym9keTp0LHR5cGU6XCJ0ZXh0XCJ9LHRoaXMubW9kZSk7dmFyIGk9bmV3IGMoXCJjb2xvclwiLHtjb2xvcjp0aGlzLnNldHRpbmdzLmVycm9yQ29sb3IsdmFsdWU6W2FdLHR5cGU6XCJjb2xvclwifSx0aGlzLm1vZGUpO3RoaXMuY29uc3VtZSgpO3JldHVybiBpfTtwLnByb3RvdHlwZS5wYXJzZUF0b209ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnBhcnNlSW1wbGljaXRHcm91cCgpO2lmKHRoaXMubW9kZT09PVwidGV4dFwiKXtyZXR1cm4gZX12YXIgdD12b2lkIDA7dmFyIHI9dm9pZCAwO3doaWxlKHRydWUpe3ZhciBhPXRoaXMubmV4dFRva2VuO2lmKGEudGV4dD09PVwiXFxcXGxpbWl0c1wifHxhLnRleHQ9PT1cIlxcXFxub2xpbWl0c1wiKXtpZighZXx8ZS50eXBlIT09XCJvcFwiKXt0aHJvdyBuZXcgaChcIkxpbWl0IGNvbnRyb2xzIG11c3QgZm9sbG93IGEgbWF0aCBvcGVyYXRvclwiLGEpfWVsc2V7dmFyIGk9YS50ZXh0PT09XCJcXFxcbGltaXRzXCI7ZS52YWx1ZS5saW1pdHM9aTtlLnZhbHVlLmFsd2F5c0hhbmRsZVN1cFN1Yj10cnVlfXRoaXMuY29uc3VtZSgpfWVsc2UgaWYoYS50ZXh0PT09XCJeXCIpe2lmKHQpe3Rocm93IG5ldyBoKFwiRG91YmxlIHN1cGVyc2NyaXB0XCIsYSl9dD10aGlzLmhhbmRsZVN1cFN1YnNjcmlwdChcInN1cGVyc2NyaXB0XCIpfWVsc2UgaWYoYS50ZXh0PT09XCJfXCIpe2lmKHIpe3Rocm93IG5ldyBoKFwiRG91YmxlIHN1YnNjcmlwdFwiLGEpfXI9dGhpcy5oYW5kbGVTdXBTdWJzY3JpcHQoXCJzdWJzY3JpcHRcIil9ZWxzZSBpZihhLnRleHQ9PT1cIidcIil7aWYodCl7dGhyb3cgbmV3IGgoXCJEb3VibGUgc3VwZXJzY3JpcHRcIixhKX12YXIgbj1uZXcgYyhcInRleHRvcmRcIixcIlxcXFxwcmltZVwiLHRoaXMubW9kZSk7dmFyIG89W25dO3RoaXMuY29uc3VtZSgpO3doaWxlKHRoaXMubmV4dFRva2VuLnRleHQ9PT1cIidcIil7by5wdXNoKG4pO3RoaXMuY29uc3VtZSgpfWlmKHRoaXMubmV4dFRva2VuLnRleHQ9PT1cIl5cIil7by5wdXNoKHRoaXMuaGFuZGxlU3VwU3Vic2NyaXB0KFwic3VwZXJzY3JpcHRcIikpfXQ9bmV3IGMoXCJvcmRncm91cFwiLG8sdGhpcy5tb2RlKX1lbHNle2JyZWFrfX1pZih0fHxyKXtyZXR1cm4gbmV3IGMoXCJzdXBzdWJcIix7YmFzZTplLHN1cDp0LHN1YjpyfSx0aGlzLm1vZGUpfWVsc2V7cmV0dXJuIGV9fTt2YXIgZD1bXCJcXFxcdGlueVwiLFwiXFxcXHNpeHB0c2l6ZVwiLFwiXFxcXHNjcmlwdHNpemVcIixcIlxcXFxmb290bm90ZXNpemVcIixcIlxcXFxzbWFsbFwiLFwiXFxcXG5vcm1hbHNpemVcIixcIlxcXFxsYXJnZVwiLFwiXFxcXExhcmdlXCIsXCJcXFxcTEFSR0VcIixcIlxcXFxodWdlXCIsXCJcXFxcSHVnZVwiXTt2YXIgZz1bXCJcXFxcZGlzcGxheXN0eWxlXCIsXCJcXFxcdGV4dHN0eWxlXCIsXCJcXFxcc2NyaXB0c3R5bGVcIixcIlxcXFxzY3JpcHRzY3JpcHRzdHlsZVwiXTt2YXIgeT17XCJcXFxccm1cIjpcIm1hdGhybVwiLFwiXFxcXHNmXCI6XCJtYXRoc2ZcIixcIlxcXFx0dFwiOlwibWF0aHR0XCIsXCJcXFxcYmZcIjpcIm1hdGhiZlwiLFwiXFxcXGl0XCI6XCJtYXRoaXRcIn07cC5wcm90b3R5cGUucGFyc2VJbXBsaWNpdEdyb3VwPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZVN5bWJvbCgpO2lmKGU9PW51bGwpe3JldHVybiB0aGlzLnBhcnNlRnVuY3Rpb24oKX12YXIgdD1lLnJlc3VsdDtpZih0PT09XCJcXFxcbGVmdFwiKXt2YXIgcj10aGlzLnBhcnNlRnVuY3Rpb24oZSk7Kyt0aGlzLmxlZnRyaWdodERlcHRoO3ZhciBhPXRoaXMucGFyc2VFeHByZXNzaW9uKGZhbHNlKTstLXRoaXMubGVmdHJpZ2h0RGVwdGg7dGhpcy5leHBlY3QoXCJcXFxccmlnaHRcIixmYWxzZSk7dmFyIG49dGhpcy5wYXJzZUZ1bmN0aW9uKCk7cmV0dXJuIG5ldyBjKFwibGVmdHJpZ2h0XCIse2JvZHk6YSxsZWZ0OnIudmFsdWUudmFsdWUscmlnaHQ6bi52YWx1ZS52YWx1ZX0sdGhpcy5tb2RlKX1lbHNlIGlmKHQ9PT1cIlxcXFxiZWdpblwiKXt2YXIgbz10aGlzLnBhcnNlRnVuY3Rpb24oZSk7dmFyIGw9by52YWx1ZS5uYW1lO2lmKCFpLmhhc093blByb3BlcnR5KGwpKXt0aHJvdyBuZXcgaChcIk5vIHN1Y2ggZW52aXJvbm1lbnQ6IFwiK2wsby52YWx1ZS5uYW1lR3JvdXApfXZhciB1PWlbbF07dmFyIHA9dGhpcy5wYXJzZUFyZ3VtZW50cyhcIlxcXFxiZWdpbntcIitsK1wifVwiLHUpO3ZhciB2PXttb2RlOnRoaXMubW9kZSxlbnZOYW1lOmwscGFyc2VyOnRoaXMscG9zaXRpb25zOnAucG9wKCl9O3ZhciBmPXUuaGFuZGxlcih2LHApO3RoaXMuZXhwZWN0KFwiXFxcXGVuZFwiLGZhbHNlKTt2YXIgbT10aGlzLm5leHRUb2tlbjt2YXIgeD10aGlzLnBhcnNlRnVuY3Rpb24oKTtpZih4LnZhbHVlLm5hbWUhPT1sKXt0aHJvdyBuZXcgaChcIk1pc21hdGNoOiBcXFxcYmVnaW57XCIrbCtcIn0gbWF0Y2hlZCBcIitcImJ5IFxcXFxlbmR7XCIreC52YWx1ZS5uYW1lK1wifVwiLG0pfWYucG9zaXRpb249eC5wb3NpdGlvbjtyZXR1cm4gZn1lbHNlIGlmKHMuY29udGFpbnMoZCx0KSl7dGhpcy5jb25zdW1lU3BhY2VzKCk7dmFyIGI9dGhpcy5wYXJzZUV4cHJlc3Npb24oZmFsc2UpO3JldHVybiBuZXcgYyhcInNpemluZ1wiLHtzaXplOnMuaW5kZXhPZihkLHQpKzEsdmFsdWU6Yn0sdGhpcy5tb2RlKX1lbHNlIGlmKHMuY29udGFpbnMoZyx0KSl7dGhpcy5jb25zdW1lU3BhY2VzKCk7dmFyIHc9dGhpcy5wYXJzZUV4cHJlc3Npb24odHJ1ZSk7cmV0dXJuIG5ldyBjKFwic3R5bGluZ1wiLHtzdHlsZTp0LnNsaWNlKDEsdC5sZW5ndGgtNSksdmFsdWU6d30sdGhpcy5tb2RlKX1lbHNlIGlmKHQgaW4geSl7dmFyIGs9eVt0XTt0aGlzLmNvbnN1bWVTcGFjZXMoKTt2YXIgej10aGlzLnBhcnNlRXhwcmVzc2lvbih0cnVlKTtpZihrLnNsaWNlKDAsNCk9PT1cInRleHRcIil7cmV0dXJuIG5ldyBjKFwidGV4dFwiLHtzdHlsZTprLGJvZHk6bmV3IGMoXCJvcmRncm91cFwiLHosdGhpcy5tb2RlKX0sdGhpcy5tb2RlKX1lbHNle3JldHVybiBuZXcgYyhcImZvbnRcIix7Zm9udDprLGJvZHk6bmV3IGMoXCJvcmRncm91cFwiLHosdGhpcy5tb2RlKX0sdGhpcy5tb2RlKX19ZWxzZSBpZih0PT09XCJcXFxcY29sb3JcIil7dmFyIE09dGhpcy5wYXJzZUNvbG9yR3JvdXAoZmFsc2UpO2lmKCFNKXt0aHJvdyBuZXcgaChcIlxcXFxjb2xvciBub3QgZm9sbG93ZWQgYnkgY29sb3JcIil9dmFyIFM9dGhpcy5wYXJzZUV4cHJlc3Npb24odHJ1ZSk7cmV0dXJuIG5ldyBjKFwiY29sb3JcIix7dHlwZTpcImNvbG9yXCIsY29sb3I6TS5yZXN1bHQudmFsdWUsdmFsdWU6U30sdGhpcy5tb2RlKX1lbHNlIGlmKHQ9PT1cIiRcIil7aWYodGhpcy5tb2RlPT09XCJtYXRoXCIpe3Rocm93IG5ldyBoKFwiJCB3aXRoaW4gbWF0aCBtb2RlXCIpfXRoaXMuY29uc3VtZSgpO3ZhciBBPXRoaXMubW9kZTt0aGlzLnN3aXRjaE1vZGUoXCJtYXRoXCIpO3ZhciBOPXRoaXMucGFyc2VFeHByZXNzaW9uKGZhbHNlLFwiJFwiKTt0aGlzLmV4cGVjdChcIiRcIix0cnVlKTt0aGlzLnN3aXRjaE1vZGUoQSk7cmV0dXJuIG5ldyBjKFwic3R5bGluZ1wiLHtzdHlsZTpcInRleHRcIix2YWx1ZTpOfSxcIm1hdGhcIil9ZWxzZXtyZXR1cm4gdGhpcy5wYXJzZUZ1bmN0aW9uKGUpfX07cC5wcm90b3R5cGUucGFyc2VGdW5jdGlvbj1mdW5jdGlvbihlKXtpZighZSl7ZT10aGlzLnBhcnNlR3JvdXAoKX1pZihlKXtpZihlLmlzRnVuY3Rpb24pe3ZhciB0PWUucmVzdWx0O3ZhciByPWFbdF07aWYodGhpcy5tb2RlPT09XCJ0ZXh0XCImJiFyLmFsbG93ZWRJblRleHQpe3Rocm93IG5ldyBoKFwiQ2FuJ3QgdXNlIGZ1bmN0aW9uICdcIit0K1wiJyBpbiB0ZXh0IG1vZGVcIixlLnRva2VuKX12YXIgaT10aGlzLnBhcnNlQXJndW1lbnRzKHQscik7dmFyIG49ZS50b2tlbjt2YXIgbz10aGlzLmNhbGxGdW5jdGlvbih0LGksaS5wb3AoKSxuKTtyZXR1cm4gbmV3IGMoby50eXBlLG8sdGhpcy5tb2RlKX1lbHNle3JldHVybiBlLnJlc3VsdH19ZWxzZXtyZXR1cm4gbnVsbH19O3AucHJvdG90eXBlLmNhbGxGdW5jdGlvbj1mdW5jdGlvbihlLHQscixpKXt2YXIgbj17ZnVuY05hbWU6ZSxwYXJzZXI6dGhpcyxwb3NpdGlvbnM6cix0b2tlbjppfTtyZXR1cm4gYVtlXS5oYW5kbGVyKG4sdCl9O3AucHJvdG90eXBlLnBhcnNlQXJndW1lbnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC5udW1BcmdzK3QubnVtT3B0aW9uYWxBcmdzO2lmKHI9PT0wKXtyZXR1cm5bW3RoaXMucG9zXV19dmFyIGk9dC5ncmVlZGluZXNzO3ZhciBuPVt0aGlzLnBvc107dmFyIG89W107Zm9yKHZhciBzPTA7czxyO3MrKyl7dmFyIGw9dGhpcy5uZXh0VG9rZW47dmFyIHU9dC5hcmdUeXBlcyYmdC5hcmdUeXBlc1tzXTt2YXIgcD12b2lkIDA7aWYoczx0Lm51bU9wdGlvbmFsQXJncyl7aWYodSl7cD10aGlzLnBhcnNlR3JvdXBPZlR5cGUodSx0cnVlKX1lbHNle3A9dGhpcy5wYXJzZUdyb3VwKHRydWUpfWlmKCFwKXtvLnB1c2gobnVsbCk7bi5wdXNoKHRoaXMucG9zKTtjb250aW51ZX19ZWxzZXtpZih1KXtwPXRoaXMucGFyc2VHcm91cE9mVHlwZSh1KX1lbHNle3A9dGhpcy5wYXJzZUdyb3VwKCl9aWYoIXApe2lmKCF0aGlzLnNldHRpbmdzLnRocm93T25FcnJvciYmdGhpcy5uZXh0VG9rZW4udGV4dFswXT09PVwiXFxcXFwiKXtwPW5ldyB2KHRoaXMuaGFuZGxlVW5zdXBwb3J0ZWRDbWQodGhpcy5uZXh0VG9rZW4udGV4dCksZmFsc2UpfWVsc2V7dGhyb3cgbmV3IGgoXCJFeHBlY3RlZCBncm91cCBhZnRlciAnXCIrZStcIidcIixsKX19fXZhciBjPXZvaWQgMDtpZihwLmlzRnVuY3Rpb24pe3ZhciBmPWFbcC5yZXN1bHRdLmdyZWVkaW5lc3M7aWYoZj5pKXtjPXRoaXMucGFyc2VGdW5jdGlvbihwKX1lbHNle3Rocm93IG5ldyBoKFwiR290IGZ1bmN0aW9uICdcIitwLnJlc3VsdCtcIicgYXMgXCIrXCJhcmd1bWVudCB0byAnXCIrZStcIidcIixsKX19ZWxzZXtjPXAucmVzdWx0fW8ucHVzaChjKTtuLnB1c2godGhpcy5wb3MpfW8ucHVzaChuKTtyZXR1cm4gb307cC5wcm90b3R5cGUucGFyc2VHcm91cE9mVHlwZT1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMubW9kZTtpZihlPT09XCJvcmlnaW5hbFwiKXtlPXJ9aWYoZT09PVwiY29sb3JcIil7cmV0dXJuIHRoaXMucGFyc2VDb2xvckdyb3VwKHQpfWlmKGU9PT1cInNpemVcIil7cmV0dXJuIHRoaXMucGFyc2VTaXplR3JvdXAodCl9aWYoZT09PVwic3RyaW5nXCIpe3ZhciBhPXRoaXMucGFyc2VTdHJpbmdHcm91cChcInN0cmluZ1wiLHQpO3JldHVybiBuZXcgdihhLnRleHQsZmFsc2UpfXRoaXMuc3dpdGNoTW9kZShlKTtpZihlPT09XCJ0ZXh0XCIpe3RoaXMuY29uc3VtZVNwYWNlcygpfXZhciBpPXRoaXMucGFyc2VHcm91cCh0KTt0aGlzLnN3aXRjaE1vZGUocik7cmV0dXJuIGl9O3AucHJvdG90eXBlLmNvbnN1bWVTcGFjZXM9ZnVuY3Rpb24oKXt3aGlsZSh0aGlzLm5leHRUb2tlbi50ZXh0PT09XCIgXCIpe3RoaXMuY29uc3VtZSgpfX07cC5wcm90b3R5cGUucGFyc2VTdHJpbmdHcm91cD1mdW5jdGlvbihlLHQpe2lmKHQmJnRoaXMubmV4dFRva2VuLnRleHQhPT1cIltcIil7cmV0dXJuIG51bGx9dmFyIHI9dGhpcy5tb2RlO3RoaXMubW9kZT1cInRleHRcIjt0aGlzLmV4cGVjdCh0P1wiW1wiOlwie1wiKTt2YXIgYT1cIlwiO3ZhciBpPXRoaXMubmV4dFRva2VuO3ZhciBuPWk7d2hpbGUodGhpcy5uZXh0VG9rZW4udGV4dCE9PSh0P1wiXVwiOlwifVwiKSl7aWYodGhpcy5uZXh0VG9rZW4udGV4dD09PVwiRU9GXCIpe3Rocm93IG5ldyBoKFwiVW5leHBlY3RlZCBlbmQgb2YgaW5wdXQgaW4gXCIrZSxpLnJhbmdlKHRoaXMubmV4dFRva2VuLGEpKX1uPXRoaXMubmV4dFRva2VuO2ErPW4udGV4dDt0aGlzLmNvbnN1bWUoKX10aGlzLm1vZGU9cjt0aGlzLmV4cGVjdCh0P1wiXVwiOlwifVwiKTtyZXR1cm4gaS5yYW5nZShuLGEpfTtwLnByb3RvdHlwZS5wYXJzZVJlZ2V4R3JvdXA9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLm1vZGU7dGhpcy5tb2RlPVwidGV4dFwiO3ZhciBhPXRoaXMubmV4dFRva2VuO3ZhciBpPWE7dmFyIG49XCJcIjt3aGlsZSh0aGlzLm5leHRUb2tlbi50ZXh0IT09XCJFT0ZcIiYmZS50ZXN0KG4rdGhpcy5uZXh0VG9rZW4udGV4dCkpe2k9dGhpcy5uZXh0VG9rZW47bis9aS50ZXh0O3RoaXMuY29uc3VtZSgpfWlmKG49PT1cIlwiKXt0aHJvdyBuZXcgaChcIkludmFsaWQgXCIrdCtcIjogJ1wiK2EudGV4dCtcIidcIixhKX10aGlzLm1vZGU9cjtyZXR1cm4gYS5yYW5nZShpLG4pfTtwLnByb3RvdHlwZS5wYXJzZUNvbG9yR3JvdXA9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5wYXJzZVN0cmluZ0dyb3VwKFwiY29sb3JcIixlKTtpZighdCl7cmV0dXJuIG51bGx9dmFyIHI9L14oI1thLXowLTldK3xbYS16XSspJC9pLmV4ZWModC50ZXh0KTtpZighcil7dGhyb3cgbmV3IGgoXCJJbnZhbGlkIGNvbG9yOiAnXCIrdC50ZXh0K1wiJ1wiLHQpfXJldHVybiBuZXcgdihuZXcgYyhcImNvbG9yXCIsclswXSx0aGlzLm1vZGUpLGZhbHNlKX07cC5wcm90b3R5cGUucGFyc2VTaXplR3JvdXA9ZnVuY3Rpb24oZSl7dmFyIHQ9dm9pZCAwO2lmKCFlJiZ0aGlzLm5leHRUb2tlbi50ZXh0IT09XCJ7XCIpe3Q9dGhpcy5wYXJzZVJlZ2V4R3JvdXAoL15bLStdPyAqKD86JHxcXGQrfFxcZCtcXC5cXGQqfFxcLlxcZCopICpbYS16XXswLDJ9ICokLyxcInNpemVcIil9ZWxzZXt0PXRoaXMucGFyc2VTdHJpbmdHcm91cChcInNpemVcIixlKX1pZighdCl7cmV0dXJuIG51bGx9dmFyIHI9LyhbLStdPykgKihcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspICooW2Etel17Mn0pLy5leGVjKHQudGV4dCk7aWYoIXIpe3Rocm93IG5ldyBoKFwiSW52YWxpZCBzaXplOiAnXCIrdC50ZXh0K1wiJ1wiLHQpfXZhciBhPXtudW1iZXI6KyhyWzFdK3JbMl0pLHVuaXQ6clszXX07aWYoYS51bml0IT09XCJlbVwiJiZhLnVuaXQhPT1cImV4XCImJmEudW5pdCE9PVwibXVcIil7dGhyb3cgbmV3IGgoXCJJbnZhbGlkIHVuaXQ6ICdcIithLnVuaXQrXCInXCIsdCl9cmV0dXJuIG5ldyB2KG5ldyBjKFwiY29sb3JcIixhLHRoaXMubW9kZSksZmFsc2UpfTtwLnByb3RvdHlwZS5wYXJzZUdyb3VwPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMubmV4dFRva2VuO2lmKHRoaXMubmV4dFRva2VuLnRleHQ9PT0oZT9cIltcIjpcIntcIikpe3RoaXMuY29uc3VtZSgpO3ZhciByPXRoaXMucGFyc2VFeHByZXNzaW9uKGZhbHNlLGU/XCJdXCI6bnVsbCk7dmFyIGE9dGhpcy5uZXh0VG9rZW47dGhpcy5leHBlY3QoZT9cIl1cIjpcIn1cIik7aWYodGhpcy5tb2RlPT09XCJ0ZXh0XCIpe3RoaXMuZm9ybUxpZ2F0dXJlcyhyKX1yZXR1cm4gbmV3IHYobmV3IGMoXCJvcmRncm91cFwiLHIsdGhpcy5tb2RlLHQsYSksZmFsc2UpfWVsc2V7cmV0dXJuIGU/bnVsbDp0aGlzLnBhcnNlU3ltYm9sKCl9fTtwLnByb3RvdHlwZS5mb3JtTGlnYXR1cmVzPWZ1bmN0aW9uKGUpe3ZhciB0PWUubGVuZ3RoLTE7Zm9yKHZhciByPTA7cjx0Oysrcil7dmFyIGE9ZVtyXTt2YXIgaT1hLnZhbHVlO2lmKGk9PT1cIi1cIiYmZVtyKzFdLnZhbHVlPT09XCItXCIpe2lmKHIrMTx0JiZlW3IrMl0udmFsdWU9PT1cIi1cIil7ZS5zcGxpY2UociwzLG5ldyBjKFwidGV4dG9yZFwiLFwiLS0tXCIsXCJ0ZXh0XCIsYSxlW3IrMl0pKTt0LT0yfWVsc2V7ZS5zcGxpY2UociwyLG5ldyBjKFwidGV4dG9yZFwiLFwiLS1cIixcInRleHRcIixhLGVbcisxXSkpO3QtPTF9fWlmKChpPT09XCInXCJ8fGk9PT1cImBcIikmJmVbcisxXS52YWx1ZT09PWkpe2Uuc3BsaWNlKHIsMixuZXcgYyhcInRleHRvcmRcIixpK2ksXCJ0ZXh0XCIsYSxlW3IrMV0pKTt0LT0xfX19O3AucHJvdG90eXBlLnBhcnNlU3ltYm9sPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5uZXh0VG9rZW47aWYoYVtlLnRleHRdKXt0aGlzLmNvbnN1bWUoKTtyZXR1cm4gbmV3IHYoZS50ZXh0LHRydWUsZSl9ZWxzZSBpZihvW3RoaXMubW9kZV1bZS50ZXh0XSl7dGhpcy5jb25zdW1lKCk7cmV0dXJuIG5ldyB2KG5ldyBjKG9bdGhpcy5tb2RlXVtlLnRleHRdLmdyb3VwLGUudGV4dCx0aGlzLm1vZGUsZSksZmFsc2UsZSl9ZWxzZSBpZih0aGlzLm1vZGU9PT1cInRleHRcIiYmbC50ZXN0KGUudGV4dCkpe3RoaXMuY29uc3VtZSgpO3JldHVybiBuZXcgdihuZXcgYyhcInRleHRvcmRcIixlLnRleHQsdGhpcy5tb2RlLGUpLGZhbHNlLGUpfWVsc2UgaWYoZS50ZXh0PT09XCIkXCIpe3JldHVybiBuZXcgdihlLnRleHQsZmFsc2UsZSl9ZWxzZXtyZXR1cm4gbnVsbH19O3AucHJvdG90eXBlLlBhcnNlTm9kZT1jO3QuZXhwb3J0cz1wfSx7XCIuL01hY3JvRXhwYW5kZXJcIjo4LFwiLi9QYXJzZUVycm9yXCI6MTAsXCIuL2Vudmlyb25tZW50c1wiOjIwLFwiLi9mdW5jdGlvbnNcIjoyMyxcIi4vcGFyc2VEYXRhXCI6MjYsXCIuL3N5bWJvbHNcIjoyOSxcIi4vdW5pY29kZVJlZ2V4ZXNcIjozMCxcIi4vdXRpbHNcIjozMX1dLDEyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vdXRpbHNcIik7ZnVuY3Rpb24gaShlKXtlPWV8fHt9O3RoaXMuZGlzcGxheU1vZGU9YS5kZWZsdChlLmRpc3BsYXlNb2RlLGZhbHNlKTt0aGlzLnRocm93T25FcnJvcj1hLmRlZmx0KGUudGhyb3dPbkVycm9yLHRydWUpO3RoaXMuZXJyb3JDb2xvcj1hLmRlZmx0KGUuZXJyb3JDb2xvcixcIiNjYzAwMDBcIik7dGhpcy5tYWNyb3M9ZS5tYWNyb3N8fHt9O3RoaXMuY29sb3JJc1RleHRDb2xvcj1hLmRlZmx0KGUuY29sb3JJc1RleHRDb2xvcixmYWxzZSl9dC5leHBvcnRzPWl9LHtcIi4vdXRpbHNcIjozMX1dLDEzOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlLHQscil7dGhpcy5pZD1lO3RoaXMuc2l6ZT10O3RoaXMuY3JhbXBlZD1yfWEucHJvdG90eXBlLnN1cD1mdW5jdGlvbigpe3JldHVybiBjW3ZbdGhpcy5pZF1dfTthLnByb3RvdHlwZS5zdWI9ZnVuY3Rpb24oKXtyZXR1cm4gY1tmW3RoaXMuaWRdXX07YS5wcm90b3R5cGUuZnJhY051bT1mdW5jdGlvbigpe3JldHVybiBjW21bdGhpcy5pZF1dfTthLnByb3RvdHlwZS5mcmFjRGVuPWZ1bmN0aW9uKCl7cmV0dXJuIGNbZFt0aGlzLmlkXV19O2EucHJvdG90eXBlLmNyYW1wPWZ1bmN0aW9uKCl7cmV0dXJuIGNbZ1t0aGlzLmlkXV19O2EucHJvdG90eXBlLnRleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gY1t5W3RoaXMuaWRdXX07YS5wcm90b3R5cGUuaXNUaWdodD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNpemU+PTJ9O3ZhciBpPTA7dmFyIG49MTt2YXIgbz0yO3ZhciBzPTM7dmFyIGw9NDt2YXIgdT01O3ZhciBoPTY7dmFyIHA9Nzt2YXIgYz1bbmV3IGEoaSwwLGZhbHNlKSxuZXcgYShuLDAsdHJ1ZSksbmV3IGEobywxLGZhbHNlKSxuZXcgYShzLDEsdHJ1ZSksbmV3IGEobCwyLGZhbHNlKSxuZXcgYSh1LDIsdHJ1ZSksbmV3IGEoaCwzLGZhbHNlKSxuZXcgYShwLDMsdHJ1ZSldO3ZhciB2PVtsLHUsbCx1LGgscCxoLHBdO3ZhciBmPVt1LHUsdSx1LHAscCxwLHBdO3ZhciBtPVtvLHMsbCx1LGgscCxoLHBdO3ZhciBkPVtzLHMsdSx1LHAscCxwLHBdO3ZhciBnPVtuLG4scyxzLHUsdSxwLHBdO3ZhciB5PVtpLG4sbyxzLG8scyxvLHNdO3QuZXhwb3J0cz17RElTUExBWTpjW2ldLFRFWFQ6Y1tvXSxTQ1JJUFQ6Y1tsXSxTQ1JJUFRTQ1JJUFQ6Y1toXX19LHt9XSwxNDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL2RvbVRyZWVcIik7dmFyIGk9ZShcIi4vZm9udE1ldHJpY3NcIik7dmFyIG49ZShcIi4vc3ltYm9sc1wiKTt2YXIgbz1lKFwiLi91dGlsc1wiKTt2YXIgcz1bXCJcXFxcaW1hdGhcIixcIlxcXFxqbWF0aFwiLFwiXFxcXHBvdW5kc1wiXTt2YXIgbD1mdW5jdGlvbiBlKHQscixhKXtpZihuW2FdW3RdJiZuW2FdW3RdLnJlcGxhY2Upe3Q9blthXVt0XS5yZXBsYWNlfXJldHVybnt2YWx1ZTp0LG1ldHJpY3M6aS5nZXRDaGFyYWN0ZXJNZXRyaWNzKHQscil9fTt2YXIgdT1mdW5jdGlvbiBlKHQscixpLG4sbyl7dmFyIHM9bCh0LHIsaSk7dmFyIHU9cy5tZXRyaWNzO3Q9cy52YWx1ZTt2YXIgaD12b2lkIDA7aWYodSl7dmFyIHA9dS5pdGFsaWM7aWYoaT09PVwidGV4dFwiKXtwPTB9aD1uZXcgYS5zeW1ib2xOb2RlKHQsdS5oZWlnaHQsdS5kZXB0aCxwLHUuc2tldyxvKX1lbHNle3R5cGVvZiBjb25zb2xlIT09XCJ1bmRlZmluZWRcIiYmY29uc29sZS53YXJuKFwiTm8gY2hhcmFjdGVyIG1ldHJpY3MgZm9yICdcIit0K1wiJyBpbiBzdHlsZSAnXCIrcitcIidcIik7aD1uZXcgYS5zeW1ib2xOb2RlKHQsMCwwLDAsMCxvKX1pZihuKXtoLm1heEZvbnRTaXplPW4uc2l6ZU11bHRpcGxpZXI7aWYobi5zdHlsZS5pc1RpZ2h0KCkpe2guY2xhc3Nlcy5wdXNoKFwibXRpZ2h0XCIpfWlmKG4uZ2V0Q29sb3IoKSl7aC5zdHlsZS5jb2xvcj1uLmdldENvbG9yKCl9fXJldHVybiBofTt2YXIgaD1mdW5jdGlvbiBlKHQscixhLGkpe2lmKHQ9PT1cIlxcXFxcInx8bltyXVt0XS5mb250PT09XCJtYWluXCIpe3JldHVybiB1KHQsXCJNYWluLVJlZ3VsYXJcIixyLGEsaSl9ZWxzZXtyZXR1cm4gdSh0LFwiQU1TLVJlZ3VsYXJcIixyLGEsaS5jb25jYXQoW1wiYW1zcm1cIl0pKX19O3ZhciBwPWZ1bmN0aW9uIGUodCxyLGEsaSxvKXtpZihvPT09XCJtYXRob3JkXCIpe3ZhciBzPWModCxyLGEsaSk7cmV0dXJuIHUodCxzLmZvbnROYW1lLHIsYSxpLmNvbmNhdChbcy5mb250Q2xhc3NdKSl9ZWxzZSBpZihvPT09XCJ0ZXh0b3JkXCIpe3ZhciBsPW5bcl1bdF0mJm5bcl1bdF0uZm9udDtpZihsPT09XCJhbXNcIil7cmV0dXJuIHUodCxcIkFNUy1SZWd1bGFyXCIscixhLGkuY29uY2F0KFtcImFtc3JtXCJdKSl9ZWxzZXtyZXR1cm4gdSh0LFwiTWFpbi1SZWd1bGFyXCIscixhLGkuY29uY2F0KFtcIm1hdGhybVwiXSkpfX1lbHNle3Rocm93IG5ldyBFcnJvcihcInVuZXhwZWN0ZWQgdHlwZTogXCIrbytcIiBpbiBtYXRoRGVmYXVsdFwiKX19O3ZhciBjPWZ1bmN0aW9uIGUodCxyLGEsaSl7aWYoL1swLTldLy50ZXN0KHQuY2hhckF0KDApKXx8by5jb250YWlucyhzLHQpKXtyZXR1cm57Zm9udE5hbWU6XCJNYWluLUl0YWxpY1wiLGZvbnRDbGFzczpcIm1haW5pdFwifX1lbHNle3JldHVybntmb250TmFtZTpcIk1hdGgtSXRhbGljXCIsZm9udENsYXNzOlwibWF0aGl0XCJ9fX07dmFyIHY9ZnVuY3Rpb24gZSh0LHIsYSl7dmFyIGk9dC5tb2RlO3ZhciBuPXQudmFsdWU7dmFyIGg9W1wibW9yZFwiXTt2YXIgdj1yLmZvbnQ7aWYodil7dmFyIGY9dm9pZCAwO2lmKHY9PT1cIm1hdGhpdFwifHxvLmNvbnRhaW5zKHMsbikpe2Y9YyhuLGkscixoKX1lbHNle2Y9d1t2XX1pZihsKG4sZi5mb250TmFtZSxpKS5tZXRyaWNzKXtyZXR1cm4gdShuLGYuZm9udE5hbWUsaSxyLGguY29uY2F0KFtmLmZvbnRDbGFzc3x8dl0pKX1lbHNle3JldHVybiBwKG4saSxyLGgsYSl9fWVsc2V7cmV0dXJuIHAobixpLHIsaCxhKX19O3ZhciBmPWZ1bmN0aW9uIGUodCl7dmFyIHI9MDt2YXIgYT0wO3ZhciBpPTA7aWYodC5jaGlsZHJlbil7Zm9yKHZhciBuPTA7bjx0LmNoaWxkcmVuLmxlbmd0aDtuKyspe2lmKHQuY2hpbGRyZW5bbl0uaGVpZ2h0PnIpe3I9dC5jaGlsZHJlbltuXS5oZWlnaHR9aWYodC5jaGlsZHJlbltuXS5kZXB0aD5hKXthPXQuY2hpbGRyZW5bbl0uZGVwdGh9aWYodC5jaGlsZHJlbltuXS5tYXhGb250U2l6ZT5pKXtpPXQuY2hpbGRyZW5bbl0ubWF4Rm9udFNpemV9fX10LmhlaWdodD1yO3QuZGVwdGg9YTt0Lm1heEZvbnRTaXplPWl9O3ZhciBtPWZ1bmN0aW9uIGUodCxyLGkpe3ZhciBuPW5ldyBhLnNwYW4odCxyLGkpO2Yobik7cmV0dXJuIG59O3ZhciBkPWZ1bmN0aW9uIGUodCxyKXt0LmNoaWxkcmVuPXIuY29uY2F0KHQuY2hpbGRyZW4pO2YodCl9O3ZhciBnPWZ1bmN0aW9uIGUodCxyKXt2YXIgaT1uZXcgYS5kb2N1bWVudEZyYWdtZW50KHQscik7ZihpKTtyZXR1cm4gaX07dmFyIHk9ZnVuY3Rpb24gZSh0LHIpe3ZhciBpPW0oW10sW25ldyBhLnN5bWJvbE5vZGUoXCJcXHUyMDBiXCIpXSk7aS5zdHlsZS5mb250U2l6ZT1yK1wiZW1cIjt2YXIgbj1tKFtcImZvbnRzaXplLWVuc3VyZXJcIl0uY29uY2F0KHQuYmFzZVNpemluZ0NsYXNzZXMoKSksW2ldKTtyZXR1cm4gbn07dmFyIHg9ZnVuY3Rpb24gZSh0LHIsaSxuKXt2YXIgbz12b2lkIDA7dmFyIHM9dm9pZCAwO3ZhciBsPXZvaWQgMDtpZihyPT09XCJpbmRpdmlkdWFsU2hpZnRcIil7dmFyIHU9dDt0PVt1WzBdXTtvPS11WzBdLnNoaWZ0LXVbMF0uZWxlbS5kZXB0aDtzPW87Zm9yKGw9MTtsPHUubGVuZ3RoO2wrKyl7dmFyIGg9LXVbbF0uc2hpZnQtcy11W2xdLmVsZW0uZGVwdGg7dmFyIHA9aC0odVtsLTFdLmVsZW0uaGVpZ2h0K3VbbC0xXS5lbGVtLmRlcHRoKTtzPXMraDt0LnB1c2goe3R5cGU6XCJrZXJuXCIsc2l6ZTpwfSk7dC5wdXNoKHVbbF0pfX1lbHNlIGlmKHI9PT1cInRvcFwiKXt2YXIgYz1pO2ZvcihsPTA7bDx0Lmxlbmd0aDtsKyspe2lmKHRbbF0udHlwZT09PVwia2VyblwiKXtjLT10W2xdLnNpemV9ZWxzZXtjLT10W2xdLmVsZW0uaGVpZ2h0K3RbbF0uZWxlbS5kZXB0aH19bz1jfWVsc2UgaWYocj09PVwiYm90dG9tXCIpe289LWl9ZWxzZSBpZihyPT09XCJzaGlmdFwiKXtvPS10WzBdLmVsZW0uZGVwdGgtaX1lbHNlIGlmKHI9PT1cImZpcnN0QmFzZWxpbmVcIil7bz0tdFswXS5lbGVtLmRlcHRofWVsc2V7bz0wfXZhciB2PTA7Zm9yKGw9MDtsPHQubGVuZ3RoO2wrKyl7aWYodFtsXS50eXBlPT09XCJlbGVtXCIpe3Y9TWF0aC5tYXgodix0W2xdLmVsZW0ubWF4Rm9udFNpemUpfX12YXIgZj15KG4sdik7dmFyIGQ9W107cz1vO2ZvcihsPTA7bDx0Lmxlbmd0aDtsKyspe2lmKHRbbF0udHlwZT09PVwia2VyblwiKXtzKz10W2xdLnNpemV9ZWxzZXt2YXIgZz10W2xdLmVsZW07dmFyIHg9LWcuZGVwdGgtcztzKz1nLmhlaWdodCtnLmRlcHRoO3ZhciBiPW0oW10sW2YsZ10pO2IuaGVpZ2h0LT14O2IuZGVwdGgrPXg7Yi5zdHlsZS50b3A9eCtcImVtXCI7ZC5wdXNoKGIpfX12YXIgdz1tKFtcImJhc2VsaW5lLWZpeFwiXSxbZixuZXcgYS5zeW1ib2xOb2RlKFwiXFx1MjAwYlwiKV0pO2QucHVzaCh3KTt2YXIgaz1tKFtcInZsaXN0XCJdLGQpO2suaGVpZ2h0PU1hdGgubWF4KHMsay5oZWlnaHQpO2suZGVwdGg9TWF0aC5tYXgoLW8say5kZXB0aCk7cmV0dXJuIGt9O3ZhciBiPXtcIlxcXFxxcXVhZFwiOntzaXplOlwiMmVtXCIsY2xhc3NOYW1lOlwicXF1YWRcIn0sXCJcXFxccXVhZFwiOntzaXplOlwiMWVtXCIsY2xhc3NOYW1lOlwicXVhZFwifSxcIlxcXFxlbnNwYWNlXCI6e3NpemU6XCIwLjVlbVwiLGNsYXNzTmFtZTpcImVuc3BhY2VcIn0sXCJcXFxcO1wiOntzaXplOlwiMC4yNzc3NzhlbVwiLGNsYXNzTmFtZTpcInRoaWNrc3BhY2VcIn0sXCJcXFxcOlwiOntzaXplOlwiMC4yMjIyMmVtXCIsY2xhc3NOYW1lOlwibWVkaXVtc3BhY2VcIn0sXCJcXFxcLFwiOntzaXplOlwiMC4xNjY2N2VtXCIsY2xhc3NOYW1lOlwidGhpbnNwYWNlXCJ9LFwiXFxcXCFcIjp7c2l6ZTpcIi0wLjE2NjY3ZW1cIixjbGFzc05hbWU6XCJuZWdhdGl2ZXRoaW5zcGFjZVwifX07dmFyIHc9e21hdGhiZjp7dmFyaWFudDpcImJvbGRcIixmb250TmFtZTpcIk1haW4tQm9sZFwifSxtYXRocm06e3ZhcmlhbnQ6XCJub3JtYWxcIixmb250TmFtZTpcIk1haW4tUmVndWxhclwifSx0ZXh0aXQ6e3ZhcmlhbnQ6XCJpdGFsaWNcIixmb250TmFtZTpcIk1haW4tSXRhbGljXCJ9LG1hdGhiYjp7dmFyaWFudDpcImRvdWJsZS1zdHJ1Y2tcIixmb250TmFtZTpcIkFNUy1SZWd1bGFyXCJ9LG1hdGhjYWw6e3ZhcmlhbnQ6XCJzY3JpcHRcIixmb250TmFtZTpcIkNhbGlncmFwaGljLVJlZ3VsYXJcIn0sbWF0aGZyYWs6e3ZhcmlhbnQ6XCJmcmFrdHVyXCIsZm9udE5hbWU6XCJGcmFrdHVyLVJlZ3VsYXJcIn0sbWF0aHNjcjp7dmFyaWFudDpcInNjcmlwdFwiLGZvbnROYW1lOlwiU2NyaXB0LVJlZ3VsYXJcIn0sbWF0aHNmOnt2YXJpYW50Olwic2Fucy1zZXJpZlwiLGZvbnROYW1lOlwiU2Fuc1NlcmlmLVJlZ3VsYXJcIn0sbWF0aHR0Ont2YXJpYW50OlwibW9ub3NwYWNlXCIsZm9udE5hbWU6XCJUeXBld3JpdGVyLVJlZ3VsYXJcIn19O3QuZXhwb3J0cz17Zm9udE1hcDp3LG1ha2VTeW1ib2w6dSxtYXRoc3ltOmgsbWFrZVNwYW46bSxtYWtlRnJhZ21lbnQ6ZyxtYWtlVkxpc3Q6eCxtYWtlT3JkOnYscHJlcGVuZENoaWxkcmVuOmQsc3BhY2luZ0Z1bmN0aW9uczpifX0se1wiLi9kb21UcmVlXCI6MTksXCIuL2ZvbnRNZXRyaWNzXCI6MjEsXCIuL3N5bWJvbHNcIjoyOSxcIi4vdXRpbHNcIjozMX1dLDE1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeVwiKTt2YXIgaT1uKGEpO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBvPWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIHM9ZShcIi4vU3R5bGVcIik7dmFyIGw9ZShcIi4vYnVpbGRDb21tb25cIik7dmFyIHU9ZShcIi4vZGVsaW1pdGVyXCIpO3ZhciBoPWUoXCIuL2RvbVRyZWVcIik7dmFyIHA9ZShcIi4vdXRpbHNcIik7dmFyIGM9ZShcIi4vc3RyZXRjaHlcIik7dmFyIHY9bC5tYWtlU3Bhbjt2YXIgZj1mdW5jdGlvbiBlKHQpe3JldHVybiB0IGluc3RhbmNlb2YgaC5zcGFuJiZ0LmNsYXNzZXNbMF09PT1cIm1zcGFjZVwifTt2YXIgbT1mdW5jdGlvbiBlKHQpe3JldHVybiB0JiZ0LmNsYXNzZXNbMF09PT1cIm1iaW5cIn07dmFyIGQ9ZnVuY3Rpb24gZSh0LHIpe2lmKHQpe3JldHVybiBwLmNvbnRhaW5zKFtcIm1iaW5cIixcIm1vcGVuXCIsXCJtcmVsXCIsXCJtb3BcIixcIm1wdW5jdFwiXSx0LmNsYXNzZXNbMF0pfWVsc2V7cmV0dXJuIHJ9fTt2YXIgZz1mdW5jdGlvbiBlKHQscil7aWYodCl7cmV0dXJuIHAuY29udGFpbnMoW1wibXJlbFwiLFwibWNsb3NlXCIsXCJtcHVuY3RcIl0sdC5jbGFzc2VzWzBdKX1lbHNle3JldHVybiByfX07dmFyIHk9ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPXI7d2hpbGUoYTx0Lmxlbmd0aCYmZih0W2FdKSl7YSsrfWlmKGE9PT1yKXtyZXR1cm4gbnVsbH1lbHNle3JldHVybiB0LnNwbGljZShyLGEtcil9fTt2YXIgeD1mdW5jdGlvbiBlKHQscixhKXt2YXIgaT1bXTtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIG89dFtuXTt2YXIgcz1xKG8scik7aWYocyBpbnN0YW5jZW9mIGguZG9jdW1lbnRGcmFnbWVudCl7QXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoaSxzLmNoaWxkcmVuKX1lbHNle2kucHVzaChzKX19Zm9yKHZhciB1PTA7dTxpLmxlbmd0aDt1Kyspe3ZhciBwPXkoaSx1KTtpZihwKXtpZih1PGkubGVuZ3RoKXtpZihpW3VdaW5zdGFuY2VvZiBoLnN5bWJvbE5vZGUpe2lbdV09dihbXS5jb25jYXQoaVt1XS5jbGFzc2VzKSxbaVt1XV0pfWwucHJlcGVuZENoaWxkcmVuKGlbdV0scCl9ZWxzZXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShpLHApO2JyZWFrfX19Zm9yKHZhciBjPTA7YzxpLmxlbmd0aDtjKyspe3ZhciBmPTE7dmFyIHg9MTt3aGlsZShpW2MtZl0mJmlbYy1mXS5jbGFzc2VzWzBdPT09XCJjdXJzb3JcIil7ZisrfXdoaWxlKGlbYyt4XSYmaVtjK3hdLmNsYXNzZXNbMF09PT1cImN1cnNvclwiKXt4Kyt9aWYobShpW2NdKSYmKGQoaVtjLWZdLGEpfHxnKGlbYyt4XSxhKSkpe2lbY10uY2xhc3Nlc1swXT1cIm1vcmRcIn19cmV0dXJuIGl9O3ZhciBiPWZ1bmN0aW9uIGUodCl7aWYodCBpbnN0YW5jZW9mIGguZG9jdW1lbnRGcmFnbWVudCl7aWYodC5jaGlsZHJlbi5sZW5ndGgpe3JldHVybiBlKHQuY2hpbGRyZW5bdC5jaGlsZHJlbi5sZW5ndGgtMV0pfX1lbHNle2lmKHAuY29udGFpbnMoW1wibW9yZFwiLFwibW9wXCIsXCJtYmluXCIsXCJtcmVsXCIsXCJtb3BlblwiLFwibWNsb3NlXCIsXCJtcHVuY3RcIixcIm1pbm5lclwiXSx0LmNsYXNzZXNbMF0pKXtyZXR1cm4gdC5jbGFzc2VzWzBdfX1yZXR1cm4gbnVsbH07dmFyIHc9ZnVuY3Rpb24gZSh0LHIpe2lmKCF0LnZhbHVlLmJhc2Upe3JldHVybiBmYWxzZX1lbHNle3ZhciBhPXQudmFsdWUuYmFzZTtpZihhLnR5cGU9PT1cIm9wXCIpe3JldHVybiBhLnZhbHVlLmxpbWl0cyYmKHIuc3R5bGUuc2l6ZT09PXMuRElTUExBWS5zaXplfHxhLnZhbHVlLmFsd2F5c0hhbmRsZVN1cFN1Yil9ZWxzZSBpZihhLnR5cGU9PT1cImFjY2VudFwiKXtyZXR1cm4geihhLnZhbHVlLmJhc2UpfWVsc2UgaWYoYS50eXBlPT09XCJob3JpekJyYWNlXCIpe3ZhciBpPXQudmFsdWUuc3ViP2ZhbHNlOnRydWU7cmV0dXJuIGk9PT1hLnZhbHVlLmlzT3Zlcn1lbHNle3JldHVybiBudWxsfX19O3ZhciBrPWZ1bmN0aW9uIGUodCl7aWYoIXQpe3JldHVybiBmYWxzZX1lbHNlIGlmKHQudHlwZT09PVwib3JkZ3JvdXBcIil7aWYodC52YWx1ZS5sZW5ndGg9PT0xKXtyZXR1cm4gZSh0LnZhbHVlWzBdKX1lbHNle3JldHVybiB0fX1lbHNlIGlmKHQudHlwZT09PVwiY29sb3JcIil7aWYodC52YWx1ZS52YWx1ZS5sZW5ndGg9PT0xKXtyZXR1cm4gZSh0LnZhbHVlLnZhbHVlWzBdKX1lbHNle3JldHVybiB0fX1lbHNlIGlmKHQudHlwZT09PVwiZm9udFwiKXtyZXR1cm4gZSh0LnZhbHVlLmJvZHkpfWVsc2V7cmV0dXJuIHR9fTt2YXIgej1mdW5jdGlvbiBlKHQpe3ZhciByPWsodCk7cmV0dXJuIHIudHlwZT09PVwibWF0aG9yZFwifHxyLnR5cGU9PT1cInRleHRvcmRcInx8ci50eXBlPT09XCJiaW5cInx8ci50eXBlPT09XCJyZWxcInx8ci50eXBlPT09XCJpbm5lclwifHxyLnR5cGU9PT1cIm9wZW5cInx8ci50eXBlPT09XCJjbG9zZVwifHxyLnR5cGU9PT1cInB1bmN0XCJ9O3ZhciBNPWZ1bmN0aW9uIGUodCxyKXt2YXIgYT1bXCJudWxsZGVsaW1pdGVyXCJdLmNvbmNhdCh0LmJhc2VTaXppbmdDbGFzc2VzKCkpO3JldHVybiB2KHIuY29uY2F0KGEpKX07dmFyIFM9e307Uy5tYXRob3JkPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGwubWFrZU9yZChlLHQsXCJtYXRob3JkXCIpfTtTLnRleHRvcmQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbC5tYWtlT3JkKGUsdCxcInRleHRvcmRcIil9O1MuYmluPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGwubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0LFtcIm1iaW5cIl0pfTtTLnJlbD1mdW5jdGlvbihlLHQpe3JldHVybiBsLm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCxbXCJtcmVsXCJdKX07Uy5vcGVuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGwubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0LFtcIm1vcGVuXCJdKX07Uy5jbG9zZT1mdW5jdGlvbihlLHQpe3JldHVybiBsLm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCxbXCJtY2xvc2VcIl0pfTtTLmlubmVyPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGwubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0LFtcIm1pbm5lclwiXSl9O1MucHVuY3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbC5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQsW1wibXB1bmN0XCJdKX07Uy5vcmRncm91cD1mdW5jdGlvbihlLHQpe3JldHVybiB2KFtcIm1vcmRcIl0seChlLnZhbHVlLHQsdHJ1ZSksdCl9O1MudGV4dD1mdW5jdGlvbihlLHQpe3ZhciByPXQud2l0aEZvbnQoZS52YWx1ZS5zdHlsZSk7dmFyIGE9eChlLnZhbHVlLmJvZHkscix0cnVlKTtmb3IodmFyIGk9MDtpPGEubGVuZ3RoLTE7aSsrKXtpZihhW2ldLnRyeUNvbWJpbmUoYVtpKzFdKSl7YS5zcGxpY2UoaSsxLDEpO2ktLX19cmV0dXJuIHYoW1wibW9yZFwiLFwidGV4dFwiXSxhLHIpfTtTLnhtbENsYXNzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT14KGUudmFsdWUudmFsdWUsdCxyKTtyZXR1cm4gbmV3IGwubWFrZUZyYWdtZW50KGEsW2UudmFsdWUuY2xdKX07Uy5jb2xvcj1mdW5jdGlvbihlLHQpe3ZhciByPXgoZS52YWx1ZS52YWx1ZSx0LndpdGhDb2xvcihlLnZhbHVlLmNvbG9yKSxmYWxzZSk7cmV0dXJuIG5ldyBsLm1ha2VGcmFnbWVudChyKX07Uy5zdXBzdWI9ZnVuY3Rpb24oZSx0KXtpZih3KGUsdCkpe3JldHVybiBTW2UudmFsdWUuYmFzZS50eXBlXShlLHQpfXZhciByPXEoZS52YWx1ZS5iYXNlLHQpO3ZhciBhPXZvaWQgMDt2YXIgaT12b2lkIDA7dmFyIG49dC5mb250TWV0cmljcygpO3ZhciBvPXZvaWQgMDt2YXIgdT0wO3ZhciBwPTA7aWYoZS52YWx1ZS5zdXApe289dC5oYXZpbmdTdHlsZSh0LnN0eWxlLnN1cCgpKTthPXEoZS52YWx1ZS5zdXAsbyx0KTtpZigheihlLnZhbHVlLmJhc2UpKXt1PXIuaGVpZ2h0LW8uZm9udE1ldHJpY3MoKS5zdXBEcm9wKm8uc2l6ZU11bHRpcGxpZXIvdC5zaXplTXVsdGlwbGllcn19aWYoZS52YWx1ZS5zdWIpe289dC5oYXZpbmdTdHlsZSh0LnN0eWxlLnN1YigpKTtpPXEoZS52YWx1ZS5zdWIsbyx0KTtpZigheihlLnZhbHVlLmJhc2UpKXtwPXIuZGVwdGgrby5mb250TWV0cmljcygpLnN1YkRyb3Aqby5zaXplTXVsdGlwbGllci90LnNpemVNdWx0aXBsaWVyfX12YXIgYz12b2lkIDA7aWYodC5zdHlsZT09PXMuRElTUExBWSl7Yz1uLnN1cDF9ZWxzZSBpZih0LnN0eWxlLmNyYW1wZWQpe2M9bi5zdXAzfWVsc2V7Yz1uLnN1cDJ9dmFyIGY9dC5zaXplTXVsdGlwbGllcjt2YXIgbT0uNS9uLnB0UGVyRW0vZitcImVtXCI7dmFyIGQ9dm9pZCAwO2lmKCFlLnZhbHVlLnN1cCl7cD1NYXRoLm1heChwLG4uc3ViMSxpLmhlaWdodC0uOCpuLnhIZWlnaHQpO2Q9bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06aX1dLFwic2hpZnRcIixwLHQpO2QuY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luUmlnaHQ9bTtpZihyIGluc3RhbmNlb2YgaC5zeW1ib2xOb2RlKXtkLmNoaWxkcmVuWzBdLnN0eWxlLm1hcmdpbkxlZnQ9LXIuaXRhbGljK1wiZW1cIn19ZWxzZSBpZighZS52YWx1ZS5zdWIpe3U9TWF0aC5tYXgodSxjLGEuZGVwdGgrLjI1Km4ueEhlaWdodCk7ZD1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTphfV0sXCJzaGlmdFwiLC11LHQpO2QuY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luUmlnaHQ9bX1lbHNle3U9TWF0aC5tYXgodSxjLGEuZGVwdGgrLjI1Km4ueEhlaWdodCk7cD1NYXRoLm1heChwLG4uc3ViMik7dmFyIGc9bi5kZWZhdWx0UnVsZVRoaWNrbmVzcztpZih1LWEuZGVwdGgtKGkuaGVpZ2h0LXApPDQqZyl7cD00KmctKHUtYS5kZXB0aCkraS5oZWlnaHQ7dmFyIHk9Ljgqbi54SGVpZ2h0LSh1LWEuZGVwdGgpO2lmKHk+MCl7dSs9eTtwLT15fX1kPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmksc2hpZnQ6cH0se3R5cGU6XCJlbGVtXCIsZWxlbTphLHNoaWZ0Oi11fV0sXCJpbmRpdmlkdWFsU2hpZnRcIixudWxsLHQpO2lmKHIgaW5zdGFuY2VvZiBoLnN5bWJvbE5vZGUpe2QuY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luTGVmdD0tci5pdGFsaWMrXCJlbVwifWQuY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luUmlnaHQ9bTtkLmNoaWxkcmVuWzFdLnN0eWxlLm1hcmdpblJpZ2h0PW19dmFyIHg9YihyKXx8XCJtb3JkXCI7cmV0dXJuIHYoW3hdLFtyLHYoW1wibXN1cHN1YlwiXSxbZF0pXSx0KX07Uy5nZW5mcmFjPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC5zdHlsZTtpZihlLnZhbHVlLnNpemU9PT1cImRpc3BsYXlcIil7cj1zLkRJU1BMQVl9ZWxzZSBpZihlLnZhbHVlLnNpemU9PT1cInRleHRcIil7cj1zLlRFWFR9dmFyIGE9ci5mcmFjTnVtKCk7dmFyIGk9ci5mcmFjRGVuKCk7dmFyIG49dm9pZCAwO249dC5oYXZpbmdTdHlsZShhKTt2YXIgbz1xKGUudmFsdWUubnVtZXIsbix0KTtuPXQuaGF2aW5nU3R5bGUoaSk7dmFyIGg9cShlLnZhbHVlLmRlbm9tLG4sdCk7dmFyIHA9dm9pZCAwO2lmKGUudmFsdWUuaGFzQmFyTGluZSl7cD1OKFwiZnJhYy1saW5lXCIsdCl9ZWxzZXtwPW51bGx9dmFyIGM9cD9wLmhlaWdodDowO3ZhciBmPXZvaWQgMDt2YXIgbT12b2lkIDA7dmFyIGQ9dm9pZCAwO2lmKHIuc2l6ZT09PXMuRElTUExBWS5zaXplKXtmPXQuZm9udE1ldHJpY3MoKS5udW0xO2lmKGM+MCl7bT0zKmN9ZWxzZXttPTcqdC5mb250TWV0cmljcygpLmRlZmF1bHRSdWxlVGhpY2tuZXNzfWQ9dC5mb250TWV0cmljcygpLmRlbm9tMX1lbHNle2lmKGM+MCl7Zj10LmZvbnRNZXRyaWNzKCkubnVtMjttPWN9ZWxzZXtmPXQuZm9udE1ldHJpY3MoKS5udW0zO209Myp0LmZvbnRNZXRyaWNzKCkuZGVmYXVsdFJ1bGVUaGlja25lc3M7XG59ZD10LmZvbnRNZXRyaWNzKCkuZGVub20yfXZhciBnPXZvaWQgMDtpZihjPT09MCl7dmFyIHk9Zi1vLmRlcHRoLShoLmhlaWdodC1kKTtpZih5PG0pe2YrPS41KihtLXkpO2QrPS41KihtLXkpfWc9bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06aCxzaGlmdDpkfSx7dHlwZTpcImVsZW1cIixlbGVtOm8sc2hpZnQ6LWZ9XSxcImluZGl2aWR1YWxTaGlmdFwiLG51bGwsdCl9ZWxzZXt2YXIgeD10LmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodDtpZihmLW8uZGVwdGgtKHgrLjUqYyk8bSl7Zis9bS0oZi1vLmRlcHRoLSh4Ky41KmMpKX1pZih4LS41KmMtKGguaGVpZ2h0LWQpPG0pe2QrPW0tKHgtLjUqYy0oaC5oZWlnaHQtZCkpfXZhciBiPS0oeC0uNSpjKTtnPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmgsc2hpZnQ6ZH0se3R5cGU6XCJlbGVtXCIsZWxlbTpwLHNoaWZ0OmJ9LHt0eXBlOlwiZWxlbVwiLGVsZW06byxzaGlmdDotZn1dLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KX1uPXQuaGF2aW5nU3R5bGUocik7Zy5oZWlnaHQqPW4uc2l6ZU11bHRpcGxpZXIvdC5zaXplTXVsdGlwbGllcjtnLmRlcHRoKj1uLnNpemVNdWx0aXBsaWVyL3Quc2l6ZU11bHRpcGxpZXI7dmFyIHc9dm9pZCAwO2lmKHIuc2l6ZT09PXMuRElTUExBWS5zaXplKXt3PXQuZm9udE1ldHJpY3MoKS5kZWxpbTF9ZWxzZXt3PXQuZm9udE1ldHJpY3MoKS5kZWxpbTJ9dmFyIGs9dm9pZCAwO3ZhciB6PXZvaWQgMDtpZihlLnZhbHVlLmxlZnREZWxpbT09bnVsbCl7az1NKHQsW1wibW9wZW5cIl0pfWVsc2V7az11LmN1c3RvbVNpemVkRGVsaW0oZS52YWx1ZS5sZWZ0RGVsaW0sdyx0cnVlLHQuaGF2aW5nU3R5bGUociksZS5tb2RlLFtcIm1vcGVuXCJdKX1pZihlLnZhbHVlLnJpZ2h0RGVsaW09PW51bGwpe3o9TSh0LFtcIm1jbG9zZVwiXSl9ZWxzZXt6PXUuY3VzdG9tU2l6ZWREZWxpbShlLnZhbHVlLnJpZ2h0RGVsaW0sdyx0cnVlLHQuaGF2aW5nU3R5bGUociksZS5tb2RlLFtcIm1jbG9zZVwiXSl9cmV0dXJuIHYoW1wibW9yZFwiXS5jb25jYXQobi5zaXppbmdDbGFzc2VzKHQpKSxbayx2KFtcIm1mcmFjXCJdLFtnXSksel0sdCl9O3ZhciBBPWZ1bmN0aW9uIGUodCxyKXt2YXIgYT10Lm51bWJlcjtpZih0LnVuaXQ9PT1cImV4XCIpe2EqPXIuZm9udE1ldHJpY3MoKS5lbVBlckV4fWVsc2UgaWYodC51bml0PT09XCJtdVwiKXthLz0xOH1yZXR1cm4gYX07Uy5hcnJheT1mdW5jdGlvbihlLHQpe3ZhciByPXZvaWQgMDt2YXIgYT12b2lkIDA7dmFyIGk9ZS52YWx1ZS5ib2R5Lmxlbmd0aDt2YXIgbj0wO3ZhciBzPW5ldyBBcnJheShpKTt2YXIgdT0xL3QuZm9udE1ldHJpY3MoKS5wdFBlckVtO3ZhciBoPTUqdTt2YXIgYz0xMip1O3ZhciBmPTMqdTt2YXIgbT1wLmRlZmx0KGUudmFsdWUuYXJyYXlzdHJldGNoLDEpO3ZhciBkPW0qYzt2YXIgZz0uNypkO3ZhciB5PS4zKmQ7dmFyIHg9MDtmb3Iocj0wO3I8ZS52YWx1ZS5ib2R5Lmxlbmd0aDsrK3Ipe3ZhciBiPWUudmFsdWUuYm9keVtyXTt2YXIgdz1nO3ZhciBrPXk7aWYobjxiLmxlbmd0aCl7bj1iLmxlbmd0aH12YXIgej1uZXcgQXJyYXkoYi5sZW5ndGgpO2ZvcihhPTA7YTxiLmxlbmd0aDsrK2Epe3ZhciBNPXEoYlthXSx0KTtpZihrPE0uZGVwdGgpe2s9TS5kZXB0aH1pZih3PE0uaGVpZ2h0KXt3PU0uaGVpZ2h0fXpbYV09TX12YXIgUz0wO2lmKGUudmFsdWUucm93R2Fwc1tyXSl7Uz1BKGUudmFsdWUucm93R2Fwc1tyXS52YWx1ZSx0KTtpZihTPjApe1MrPXk7aWYoazxTKXtrPVN9Uz0wfX1pZihlLnZhbHVlLmFkZEpvdCl7ays9Zn16LmhlaWdodD13O3ouZGVwdGg9azt4Kz13O3oucG9zPXg7eCs9aytTO3Nbcl09en12YXIgTj14LzIrdC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQ7dmFyIFQ9ZS52YWx1ZS5jb2xzfHxbXTt2YXIgQz1bXTt2YXIgRT12b2lkIDA7dmFyIE89dm9pZCAwO2ZvcihhPTAsTz0wO2E8bnx8TzxULmxlbmd0aDsrK2EsKytPKXt2YXIgUj1UW09dfHx7fTt2YXIgTD10cnVlO3doaWxlKFIudHlwZT09PVwic2VwYXJhdG9yXCIpe2lmKCFMKXtFPXYoW1wiYXJyYXljb2xzZXBcIl0sW10pO0Uuc3R5bGUud2lkdGg9dC5mb250TWV0cmljcygpLmRvdWJsZVJ1bGVTZXArXCJlbVwiO0MucHVzaChFKX1pZihSLnNlcGFyYXRvcj09PVwifFwiKXt2YXIgRD12KFtcInZlcnRpY2FsLXNlcGFyYXRvclwiXSxbXSk7RC5zdHlsZS5oZWlnaHQ9eCtcImVtXCI7RC5zdHlsZS52ZXJ0aWNhbEFsaWduPS0oeC1OKStcImVtXCI7Qy5wdXNoKEQpfWVsc2V7dGhyb3cgbmV3IG8oXCJJbnZhbGlkIHNlcGFyYXRvciB0eXBlOiBcIitSLnNlcGFyYXRvcil9TysrO1I9VFtPXXx8e307TD1mYWxzZX1pZihhPj1uKXtjb250aW51ZX12YXIgUD12b2lkIDA7aWYoYT4wfHxlLnZhbHVlLmhza2lwQmVmb3JlQW5kQWZ0ZXIpe1A9cC5kZWZsdChSLnByZWdhcCxoKTtpZihQIT09MCl7RT12KFtcImFycmF5Y29sc2VwXCJdLFtdKTtFLnN0eWxlLndpZHRoPVArXCJlbVwiO0MucHVzaChFKX19dmFyIEI9W107Zm9yKHI9MDtyPGk7KytyKXt2YXIgRj1zW3JdO3ZhciBJPUZbYV07aWYoIUkpe2NvbnRpbnVlfXZhciBWPUYucG9zLU47SS5kZXB0aD1GLmRlcHRoO0kuaGVpZ2h0PUYuaGVpZ2h0O0IucHVzaCh7dHlwZTpcImVsZW1cIixlbGVtOkksc2hpZnQ6Vn0pfUI9bC5tYWtlVkxpc3QoQixcImluZGl2aWR1YWxTaGlmdFwiLG51bGwsdCk7Qj12KFtcImNvbC1hbGlnbi1cIisoUi5hbGlnbnx8XCJjXCIpXSxbQl0pO0MucHVzaChCKTtpZihhPG4tMXx8ZS52YWx1ZS5oc2tpcEJlZm9yZUFuZEFmdGVyKXtQPXAuZGVmbHQoUi5wb3N0Z2FwLGgpO2lmKFAhPT0wKXtFPXYoW1wiYXJyYXljb2xzZXBcIl0sW10pO0Uuc3R5bGUud2lkdGg9UCtcImVtXCI7Qy5wdXNoKEUpfX19cz12KFtcIm10YWJsZVwiXSxDKTtyZXR1cm4gdihbXCJtb3JkXCJdLFtzXSx0KX07Uy5zcGFjaW5nPWZ1bmN0aW9uKGUsdCl7aWYoZS52YWx1ZT09PVwiXFxcXCBcInx8ZS52YWx1ZT09PVwiXFxcXHNwYWNlXCJ8fGUudmFsdWU9PT1cIiBcInx8ZS52YWx1ZT09PVwiflwiKXtpZihlLm1vZGU9PT1cInRleHRcIil7cmV0dXJuIGwubWFrZU9yZChlLHQsXCJ0ZXh0b3JkXCIpfWVsc2V7cmV0dXJuIHYoW1wibXNwYWNlXCJdLFtsLm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCldLHQpfX1lbHNle3JldHVybiB2KFtcIm1zcGFjZVwiLGwuc3BhY2luZ0Z1bmN0aW9uc1tlLnZhbHVlXS5jbGFzc05hbWVdLFtdLHQpfX07Uy5sbGFwPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dihbXCJpbm5lclwiXSxbcShlLnZhbHVlLmJvZHksdCldKTt2YXIgYT12KFtcImZpeFwiXSxbXSk7cmV0dXJuIHYoW1wibW9yZFwiLFwibGxhcFwiXSxbcixhXSx0KX07Uy5ybGFwPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dihbXCJpbm5lclwiXSxbcShlLnZhbHVlLmJvZHksdCldKTt2YXIgYT12KFtcImZpeFwiXSxbXSk7cmV0dXJuIHYoW1wibW9yZFwiLFwicmxhcFwiXSxbcixhXSx0KX07Uy5vcD1mdW5jdGlvbihlLHQpe3ZhciByPXZvaWQgMDt2YXIgYT12b2lkIDA7dmFyIGk9ZmFsc2U7aWYoZS50eXBlPT09XCJzdXBzdWJcIil7cj1lLnZhbHVlLnN1cDthPWUudmFsdWUuc3ViO2U9ZS52YWx1ZS5iYXNlO2k9dHJ1ZX12YXIgbj10LnN0eWxlO3ZhciBvPVtcIlxcXFxzbWFsbGludFwiXTt2YXIgdT1mYWxzZTtpZihuLnNpemU9PT1zLkRJU1BMQVkuc2l6ZSYmZS52YWx1ZS5zeW1ib2wmJiFwLmNvbnRhaW5zKG8sZS52YWx1ZS5ib2R5KSl7dT10cnVlfXZhciBjPXZvaWQgMDtpZihlLnZhbHVlLnN5bWJvbCl7dmFyIGY9dT9cIlNpemUyLVJlZ3VsYXJcIjpcIlNpemUxLVJlZ3VsYXJcIjtjPWwubWFrZVN5bWJvbChlLnZhbHVlLmJvZHksZixcIm1hdGhcIix0LFtcIm1vcFwiLFwib3Atc3ltYm9sXCIsdT9cImxhcmdlLW9wXCI6XCJzbWFsbC1vcFwiXSl9ZWxzZSBpZihlLnZhbHVlLnZhbHVlKXt2YXIgbT14KGUudmFsdWUudmFsdWUsdCx0cnVlKTtpZihtLmxlbmd0aD09PTEmJm1bMF1pbnN0YW5jZW9mIGguc3ltYm9sTm9kZSl7Yz1tWzBdO2MuY2xhc3Nlc1swXT1cIm1vcFwifWVsc2V7Yz12KFtcIm1vcFwiXSxtLHQpfX1lbHNle3ZhciBkPVtdO2Zvcih2YXIgZz0xO2c8ZS52YWx1ZS5ib2R5Lmxlbmd0aDtnKyspe2QucHVzaChsLm1hdGhzeW0oZS52YWx1ZS5ib2R5W2ddLGUubW9kZSkpfWM9dihbXCJtb3BcIl0sZCx0KX12YXIgeT0wO3ZhciBiPTA7aWYoYyBpbnN0YW5jZW9mIGguc3ltYm9sTm9kZSl7eT0oYy5oZWlnaHQtYy5kZXB0aCkvMi10LmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodDtiPWMuaXRhbGljfWlmKGkpe2M9dihbXSxbY10pO3ZhciB3PXZvaWQgMDt2YXIgaz12b2lkIDA7dmFyIHo9dm9pZCAwO3ZhciBNPXZvaWQgMDt2YXIgUz12b2lkIDA7aWYocil7Uz10LmhhdmluZ1N0eWxlKG4uc3VwKCkpO3c9cShyLFMsdCk7az1NYXRoLm1heCh0LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nMSx0LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nMy13LmRlcHRoKX1pZihhKXtTPXQuaGF2aW5nU3R5bGUobi5zdWIoKSk7ej1xKGEsUyx0KTtNPU1hdGgubWF4KHQuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmcyLHQuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc0LXouaGVpZ2h0KX12YXIgQT12b2lkIDA7dmFyIE49dm9pZCAwO3ZhciBUPXZvaWQgMDtpZighcil7Tj1jLmhlaWdodC15O0E9bC5tYWtlVkxpc3QoW3t0eXBlOlwia2VyblwiLHNpemU6dC5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzV9LHt0eXBlOlwiZWxlbVwiLGVsZW06en0se3R5cGU6XCJrZXJuXCIsc2l6ZTpNfSx7dHlwZTpcImVsZW1cIixlbGVtOmN9XSxcInRvcFwiLE4sdCk7QS5jaGlsZHJlblswXS5zdHlsZS5tYXJnaW5MZWZ0PS1iK1wiZW1cIn1lbHNlIGlmKCFhKXtUPWMuZGVwdGgreTtBPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmN9LHt0eXBlOlwia2VyblwiLHNpemU6a30se3R5cGU6XCJlbGVtXCIsZWxlbTp3fSx7dHlwZTpcImtlcm5cIixzaXplOnQuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc1fV0sXCJib3R0b21cIixULHQpO0EuY2hpbGRyZW5bMV0uc3R5bGUubWFyZ2luTGVmdD1iK1wiZW1cIn1lbHNlIGlmKCFyJiYhYSl7cmV0dXJuIGN9ZWxzZXtUPXQuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc1K3ouaGVpZ2h0K3ouZGVwdGgrTStjLmRlcHRoK3k7QT1sLm1ha2VWTGlzdChbe3R5cGU6XCJrZXJuXCIsc2l6ZTp0LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nNX0se3R5cGU6XCJlbGVtXCIsZWxlbTp6fSx7dHlwZTpcImtlcm5cIixzaXplOk19LHt0eXBlOlwiZWxlbVwiLGVsZW06Y30se3R5cGU6XCJrZXJuXCIsc2l6ZTprfSx7dHlwZTpcImVsZW1cIixlbGVtOnd9LHt0eXBlOlwia2VyblwiLHNpemU6dC5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzV9XSxcImJvdHRvbVwiLFQsdCk7QS5jaGlsZHJlblswXS5zdHlsZS5tYXJnaW5MZWZ0PS1iK1wiZW1cIjtBLmNoaWxkcmVuWzJdLnN0eWxlLm1hcmdpbkxlZnQ9YitcImVtXCJ9cmV0dXJuIHYoW1wibW9wXCIsXCJvcC1saW1pdHNcIl0sW0FdLHQpfWVsc2V7aWYoeSl7Yy5zdHlsZS5wb3NpdGlvbj1cInJlbGF0aXZlXCI7Yy5zdHlsZS50b3A9eStcImVtXCJ9cmV0dXJuIGN9fTtTLm1vZD1mdW5jdGlvbihlLHQpe3ZhciByPVtdO2lmKGUudmFsdWUubW9kVHlwZT09PVwiYm1vZFwiKXtpZighdC5zdHlsZS5pc1RpZ2h0KCkpe3IucHVzaCh2KFtcIm1zcGFjZVwiLFwibmVnYXRpdmVtZWRpdW1zcGFjZVwiXSxbXSx0KSl9ci5wdXNoKHYoW1wibXNwYWNlXCIsXCJ0aGlja3NwYWNlXCJdLFtdLHQpKX1lbHNlIGlmKHQuc3R5bGUuc2l6ZT09PXMuRElTUExBWS5zaXplKXtyLnB1c2godihbXCJtc3BhY2VcIixcInF1YWRcIl0sW10sdCkpfWVsc2UgaWYoZS52YWx1ZS5tb2RUeXBlPT09XCJtb2RcIil7ci5wdXNoKHYoW1wibXNwYWNlXCIsXCJ0d2VsdmVtdXNwYWNlXCJdLFtdLHQpKX1lbHNle3IucHVzaCh2KFtcIm1zcGFjZVwiLFwiZWlnaHRtdXNwYWNlXCJdLFtdLHQpKX1pZihlLnZhbHVlLm1vZFR5cGU9PT1cInBvZFwifHxlLnZhbHVlLm1vZFR5cGU9PT1cInBtb2RcIil7ci5wdXNoKGwubWF0aHN5bShcIihcIixlLm1vZGUpKX1pZihlLnZhbHVlLm1vZFR5cGUhPT1cInBvZFwiKXt2YXIgYT1bbC5tYXRoc3ltKFwibVwiLGUubW9kZSksbC5tYXRoc3ltKFwib1wiLGUubW9kZSksbC5tYXRoc3ltKFwiZFwiLGUubW9kZSldO2lmKGUudmFsdWUubW9kVHlwZT09PVwiYm1vZFwiKXtyLnB1c2godihbXCJtYmluXCJdLGEsdCkpO3IucHVzaCh2KFtcIm1zcGFjZVwiLFwidGhpY2tzcGFjZVwiXSxbXSx0KSk7aWYoIXQuc3R5bGUuaXNUaWdodCgpKXtyLnB1c2godihbXCJtc3BhY2VcIixcIm5lZ2F0aXZlbWVkaXVtc3BhY2VcIl0sW10sdCkpfX1lbHNle0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHIsYSk7ci5wdXNoKHYoW1wibXNwYWNlXCIsXCJzaXhtdXNwYWNlXCJdLFtdLHQpKX19aWYoZS52YWx1ZS52YWx1ZSl7QXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkocix4KGUudmFsdWUudmFsdWUsdCxmYWxzZSkpfWlmKGUudmFsdWUubW9kVHlwZT09PVwicG9kXCJ8fGUudmFsdWUubW9kVHlwZT09PVwicG1vZFwiKXtyLnB1c2gobC5tYXRoc3ltKFwiKVwiLGUubW9kZSkpfXJldHVybiBsLm1ha2VGcmFnbWVudChyKX07Uy5rYXRleD1mdW5jdGlvbihlLHQpe3ZhciByPXYoW1wia1wiXSxbbC5tYXRoc3ltKFwiS1wiLGUubW9kZSldLHQpO3ZhciBhPXYoW1wiYVwiXSxbbC5tYXRoc3ltKFwiQVwiLGUubW9kZSldLHQpO2EuaGVpZ2h0PShhLmhlaWdodCsuMikqLjc1O2EuZGVwdGg9KGEuaGVpZ2h0LS4yKSouNzU7dmFyIGk9dihbXCJ0XCJdLFtsLm1hdGhzeW0oXCJUXCIsZS5tb2RlKV0sdCk7dmFyIG49dihbXCJlXCJdLFtsLm1hdGhzeW0oXCJFXCIsZS5tb2RlKV0sdCk7bi5oZWlnaHQ9bi5oZWlnaHQtLjIxNTU7bi5kZXB0aD1uLmRlcHRoKy4yMTU1O3ZhciBvPXYoW1wieFwiXSxbbC5tYXRoc3ltKFwiWFwiLGUubW9kZSldLHQpO3JldHVybiB2KFtcIm1vcmRcIixcImthdGV4LWxvZ29cIl0sW3IsYSxpLG4sb10sdCl9O3ZhciBOPWZ1bmN0aW9uIGUodCxyKXt2YXIgYT1yLmhhdmluZ0Jhc2VTdHlsZSgpO3ZhciBpPXYoW3RdLmNvbmNhdChhLnNpemluZ0NsYXNzZXMocikpLFtdLHIpO2kuaGVpZ2h0PXIuZm9udE1ldHJpY3MoKS5kZWZhdWx0UnVsZVRoaWNrbmVzcy9yLnNpemVNdWx0aXBsaWVyO2kubWF4Rm9udFNpemU9MTtyZXR1cm4gaX07Uy5vdmVybGluZT1mdW5jdGlvbihlLHQpe3ZhciByPXEoZS52YWx1ZS5ib2R5LHQuaGF2aW5nQ3JhbXBlZFN0eWxlKCkpO3ZhciBhPU4oXCJvdmVybGluZS1saW5lXCIsdCk7dmFyIGk9bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06cn0se3R5cGU6XCJrZXJuXCIsc2l6ZTozKmEuaGVpZ2h0fSx7dHlwZTpcImVsZW1cIixlbGVtOmF9LHt0eXBlOlwia2VyblwiLHNpemU6YS5oZWlnaHR9XSxcImZpcnN0QmFzZWxpbmVcIixudWxsLHQpO3JldHVybiB2KFtcIm1vcmRcIixcIm92ZXJsaW5lXCJdLFtpXSx0KX07Uy51bmRlcmxpbmU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1xKGUudmFsdWUuYm9keSx0KTt2YXIgYT1OKFwidW5kZXJsaW5lLWxpbmVcIix0KTt2YXIgaT1sLm1ha2VWTGlzdChbe3R5cGU6XCJrZXJuXCIsc2l6ZTphLmhlaWdodH0se3R5cGU6XCJlbGVtXCIsZWxlbTphfSx7dHlwZTpcImtlcm5cIixzaXplOjMqYS5oZWlnaHR9LHt0eXBlOlwiZWxlbVwiLGVsZW06cn1dLFwidG9wXCIsci5oZWlnaHQsdCk7cmV0dXJuIHYoW1wibW9yZFwiLFwidW5kZXJsaW5lXCJdLFtpXSx0KX07Uy5zcXJ0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9cShlLnZhbHVlLmJvZHksdC5oYXZpbmdDcmFtcGVkU3R5bGUoKSk7dmFyIGE9TihcInNxcnQtbGluZVwiLHQpO3ZhciBpPWEuaGVpZ2h0O3ZhciBuPWk7aWYodC5zdHlsZS5pZDxzLlRFWFQuaWQpe249dC5mb250TWV0cmljcygpLnhIZWlnaHQqdC5zaXplTXVsdGlwbGllcn12YXIgbz1pK24vNDt2YXIgaD0oci5oZWlnaHQrci5kZXB0aCtvK2kpKnQuc2l6ZU11bHRpcGxpZXI7dmFyIHA9dihbXCJzcXJ0LXNpZ25cIl0sW3UuY3VzdG9tU2l6ZWREZWxpbShcIlxcXFxzdXJkXCIsaCxmYWxzZSx0LGUubW9kZSldLHQpO3ZhciBjPXAuaGVpZ2h0K3AuZGVwdGgtaTtpZihjPnIuaGVpZ2h0K3IuZGVwdGgrbyl7bz0obytjLXIuaGVpZ2h0LXIuZGVwdGgpLzJ9dmFyIGY9LShyLmhlaWdodCtvK2kpK3AuaGVpZ2h0O3Auc3R5bGUudG9wPWYrXCJlbVwiO3AuaGVpZ2h0LT1mO3AuZGVwdGgrPWY7dmFyIG09dm9pZCAwO2lmKHIuaGVpZ2h0PT09MCYmci5kZXB0aD09PTApe209digpfWVsc2V7bT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpyfSx7dHlwZTpcImtlcm5cIixzaXplOm99LHt0eXBlOlwiZWxlbVwiLGVsZW06YX0se3R5cGU6XCJrZXJuXCIsc2l6ZTppfV0sXCJmaXJzdEJhc2VsaW5lXCIsbnVsbCx0KX1pZighZS52YWx1ZS5pbmRleCl7cmV0dXJuIHYoW1wibW9yZFwiLFwic3FydFwiXSxbcCxtXSx0KX1lbHNle3ZhciBkPXQuaGF2aW5nU3R5bGUocy5TQ1JJUFRTQ1JJUFQpO3ZhciBnPXEoZS52YWx1ZS5pbmRleCxkLHQpO3ZhciB5PU1hdGgubWF4KHAuaGVpZ2h0LG0uaGVpZ2h0KTt2YXIgeD1NYXRoLm1heChwLmRlcHRoLG0uZGVwdGgpO3ZhciBiPS42Kih5LXgpO3ZhciB3PWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmd9XSxcInNoaWZ0XCIsLWIsdCk7dmFyIGs9dihbXCJyb290XCJdLFt3XSk7cmV0dXJuIHYoW1wibW9yZFwiLFwic3FydFwiXSxbayxwLG1dLHQpfX07ZnVuY3Rpb24gVChlLHQscil7dmFyIGE9eChlLHQsZmFsc2UpO3ZhciBpPXQuc2l6ZU11bHRpcGxpZXIvci5zaXplTXVsdGlwbGllcjtmb3IodmFyIG49MDtuPGEubGVuZ3RoO24rKyl7dmFyIG89cC5pbmRleE9mKGFbbl0uY2xhc3NlcyxcInNpemluZ1wiKTtpZihvPDApe0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGFbbl0uY2xhc3Nlcyx0LnNpemluZ0NsYXNzZXMocikpfWVsc2UgaWYoYVtuXS5jbGFzc2VzW28rMV09PT1cInJlc2V0LXNpemVcIit0LnNpemUpe2Fbbl0uY2xhc3Nlc1tvKzFdPVwicmVzZXQtc2l6ZVwiK3Iuc2l6ZX1hW25dLmhlaWdodCo9aTthW25dLmRlcHRoKj1pfXJldHVybiBsLm1ha2VGcmFnbWVudChhKX1TLnNpemluZz1mdW5jdGlvbihlLHQpe3ZhciByPXQuaGF2aW5nU2l6ZShlLnZhbHVlLnNpemUpO3JldHVybiBUKGUudmFsdWUudmFsdWUscix0KX07Uy5zdHlsaW5nPWZ1bmN0aW9uKGUsdCl7dmFyIHI9e2Rpc3BsYXk6cy5ESVNQTEFZLHRleHQ6cy5URVhULHNjcmlwdDpzLlNDUklQVCxzY3JpcHRzY3JpcHQ6cy5TQ1JJUFRTQ1JJUFR9O3ZhciBhPXJbZS52YWx1ZS5zdHlsZV07dmFyIGk9dC5oYXZpbmdTdHlsZShhKTtyZXR1cm4gVChlLnZhbHVlLnZhbHVlLGksdCl9O1MuZm9udD1mdW5jdGlvbihlLHQpe3ZhciByPWUudmFsdWUuZm9udDtyZXR1cm4gcShlLnZhbHVlLmJvZHksdC53aXRoRm9udChyKSl9O1MuZGVsaW1zaXppbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLnZhbHVlLnZhbHVlO2lmKHI9PT1cIi5cIil7cmV0dXJuIHYoW2UudmFsdWUubWNsYXNzXSl9cmV0dXJuIHUuc2l6ZWREZWxpbShyLGUudmFsdWUuc2l6ZSx0LGUubW9kZSxbZS52YWx1ZS5tY2xhc3NdKX07Uy5sZWZ0cmlnaHQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj14KGUudmFsdWUuYm9keSx0LHRydWUpO3ZhciBhPTA7dmFyIGk9MDt2YXIgbj1mYWxzZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKyl7aWYocltvXS5pc01pZGRsZSl7bj10cnVlfWVsc2V7YT1NYXRoLm1heChyW29dLmhlaWdodCxhKTtpPU1hdGgubWF4KHJbb10uZGVwdGgsaSl9fWEqPXQuc2l6ZU11bHRpcGxpZXI7aSo9dC5zaXplTXVsdGlwbGllcjt2YXIgcz12b2lkIDA7aWYoZS52YWx1ZS5sZWZ0PT09XCIuXCIpe3M9TSh0LFtcIm1vcGVuXCJdKX1lbHNle3M9dS5sZWZ0UmlnaHREZWxpbShlLnZhbHVlLmxlZnQsYSxpLHQsZS5tb2RlLFtcIm1vcGVuXCJdKX1yLnVuc2hpZnQocyk7aWYobil7Zm9yKHZhciBoPTE7aDxyLmxlbmd0aDtoKyspe3ZhciBwPXJbaF07aWYocC5pc01pZGRsZSl7cltoXT11LmxlZnRSaWdodERlbGltKHAuaXNNaWRkbGUudmFsdWUsYSxpLHAuaXNNaWRkbGUub3B0aW9ucyxlLm1vZGUsW10pO3ZhciBjPXkocC5jaGlsZHJlbiwwKTtpZihjKXtsLnByZXBlbmRDaGlsZHJlbihyW2hdLGMpfX19fXZhciBmPXZvaWQgMDtpZihlLnZhbHVlLnJpZ2h0PT09XCIuXCIpe2Y9TSh0LFtcIm1jbG9zZVwiXSl9ZWxzZXtmPXUubGVmdFJpZ2h0RGVsaW0oZS52YWx1ZS5yaWdodCxhLGksdCxlLm1vZGUsW1wibWNsb3NlXCJdKX1yLnB1c2goZik7cmV0dXJuIHYoW1wibWlubmVyXCJdLHIsdCl9O1MuY3Vyc29yPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT12KFtcImN1cnNvclwiXSxbXSx0KTt2YXIgaT0wO3ZhciBuPUEoZS52YWx1ZS5oZWlnaHQsdCk7aWYoZS52YWx1ZS5zaGlmdCl7aT1BKGUudmFsdWUuc2hpZnQsdCl9aS89dC5zaXplTXVsdGlwbGllcjtuLz10LnNpemVNdWx0aXBsaWVyO2Euc3R5bGUubWFyZ2luUmlnaHQ9XCItMXB4XCI7YS5zdHlsZS5ib3JkZXJSaWdodD1cIjFweCBzb2xpZFwiO2Euc3R5bGUubWFyZ2luQm90dG9tPWkrXCJlbVwiO2Euc3R5bGUuaGVpZ2h0PW4rXCJlbVwiO2Eud2lkdGg9MTthLmhlaWdodD1uK2k7YS5kZXB0aD0taTtlLnZhbHVlLnByZXZpb3VzPXI7cmV0dXJuIGF9O1MubWlkZGxlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dm9pZCAwO2lmKGUudmFsdWUudmFsdWU9PT1cIi5cIil7cj1NKHQsW10pfWVsc2V7cj11LnNpemVkRGVsaW0oZS52YWx1ZS52YWx1ZSwxLHQsZS5tb2RlLFtdKTtyLmlzTWlkZGxlPXt2YWx1ZTplLnZhbHVlLnZhbHVlLG9wdGlvbnM6dH19cmV0dXJuIHJ9O1MucnVsZT1mdW5jdGlvbihlLHQscil7dmFyIGE9dihbXCJtb3JkXCIsXCJydWxlXCJdLFtdLHQpO3ZhciBpPTA7aWYoZS52YWx1ZS5zaGlmdCl7aT1BKGUudmFsdWUuc2hpZnQsdCl9dmFyIG49QShlLnZhbHVlLndpZHRoLHQpO3ZhciBvPUEoZS52YWx1ZS5oZWlnaHQsdCk7aS89dC5zaXplTXVsdGlwbGllcjtuLz10LnNpemVNdWx0aXBsaWVyO28vPXQuc2l6ZU11bHRpcGxpZXI7YS5zdHlsZS5ib3JkZXJSaWdodFdpZHRoPW4rXCJlbVwiO2Euc3R5bGUuYm9yZGVyVG9wV2lkdGg9bytcImVtXCI7YS5zdHlsZS5ib3R0b209aStcImVtXCI7YS53aWR0aD1uO2EuaGVpZ2h0PW8raTthLmRlcHRoPS1pO3JldHVybiBhfTtTLmtlcm49ZnVuY3Rpb24oZSx0KXt2YXIgcj12KFtcIm1vcmRcIixcInJ1bGVcIl0sW10sdCk7dmFyIGE9MDtpZihlLnZhbHVlLmRpbWVuc2lvbil7YT1BKGUudmFsdWUuZGltZW5zaW9uLHQpfWEvPXQuc2l6ZU11bHRpcGxpZXI7ci5zdHlsZS5tYXJnaW5MZWZ0PWErXCJlbVwiO3JldHVybiByfTtTLmFjY2VudD1mdW5jdGlvbihlLHQpe3ZhciByPWUudmFsdWUuYmFzZTt2YXIgYT12b2lkIDA7aWYoZS50eXBlPT09XCJzdXBzdWJcIil7dmFyIGk9ZTtlPWkudmFsdWUuYmFzZTtyPWUudmFsdWUuYmFzZTtpLnZhbHVlLmJhc2U9cjthPXEoaSx0KX12YXIgbj1xKHIsdC5oYXZpbmdDcmFtcGVkU3R5bGUoKSk7dmFyIG89ZS52YWx1ZS5pc1NoaWZ0eSYmeihyKTt2YXIgcz0wO2lmKG8pe3ZhciB1PWsocik7dmFyIGg9cSh1LHQuaGF2aW5nQ3JhbXBlZFN0eWxlKCkpO3M9aC5za2V3fXZhciBwPU1hdGgubWluKG4uaGVpZ2h0LHQuZm9udE1ldHJpY3MoKS54SGVpZ2h0KTt2YXIgZj12b2lkIDA7aWYoIWUudmFsdWUuaXNTdHJldGNoeSl7dmFyIG09bC5tYWtlU3ltYm9sKGUudmFsdWUubGFiZWwsXCJNYWluLVJlZ3VsYXJcIixcIm1hdGhcIix0KTttLml0YWxpYz0wO3ZhciBkPWUudmFsdWUubGFiZWw9PT1cIlxcXFx2ZWNcIj9cImFjY2VudC12ZWNcIjpudWxsO2Y9dihbXCJhY2NlbnQtYm9keVwiLGRdLFt2KFtdLFttXSldKTtmLnN0eWxlLm1hcmdpbkxlZnQ9MipzK1wiZW1cIjtmPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOm59LHt0eXBlOlwia2VyblwiLHNpemU6LXB9LHt0eXBlOlwiZWxlbVwiLGVsZW06Zn1dLFwiZmlyc3RCYXNlbGluZVwiLG51bGwsdCl9ZWxzZXtmPWMuc3ZnU3BhbihlLHQpO2lmKHM+MCl7dmFyIGc9XCJjYWxjKDEwMCUgLSBcIisyKnMrXCJlbSkgMTAwJVwiO2Yuc3R5bGUuYmFja2dyb3VuZFNpemU9Z31mPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOm59LHt0eXBlOlwiZWxlbVwiLGVsZW06Zn1dLFwiZmlyc3RCYXNlbGluZVwiLG51bGwsdCl9dmFyIHk9dihbXCJtb3JkXCIsXCJhY2NlbnRcIl0sW2ZdLHQpO2lmKGEpe2EuY2hpbGRyZW5bMF09eTthLmhlaWdodD1NYXRoLm1heCh5LmhlaWdodCxhLmhlaWdodCk7YS5jbGFzc2VzWzBdPVwibW9yZFwiO3JldHVybiBhfWVsc2V7cmV0dXJuIHl9fTtTLmhvcml6QnJhY2U9ZnVuY3Rpb24oZSx0KXt2YXIgcj10LnN0eWxlO3ZhciBhPWUudHlwZT09PVwic3Vwc3ViXCI7dmFyIGk9dm9pZCAwO3ZhciBuPXZvaWQgMDtpZihhKXtpZihlLnZhbHVlLnN1cCl7bj10LmhhdmluZ1N0eWxlKHIuc3VwKCkpO2k9cShlLnZhbHVlLnN1cCxuLHQpfWVsc2V7bj10LmhhdmluZ1N0eWxlKHIuc3ViKCkpO2k9cShlLnZhbHVlLnN1YixuLHQpfWU9ZS52YWx1ZS5iYXNlfXZhciBvPXEoZS52YWx1ZS5iYXNlLHQuaGF2aW5nU3R5bGUoci5jcmFtcCgpKSk7dmFyIHM9Yy5zdmdTcGFuKGUsdCk7dmFyIHU9dm9pZCAwO2lmKGUudmFsdWUuaXNPdmVyKXt1PWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOm99LHt0eXBlOlwia2VyblwiLHNpemU6LjF9LHt0eXBlOlwiZWxlbVwiLGVsZW06c31dLFwiZmlyc3RCYXNlbGluZVwiLG51bGwsdCl9ZWxzZXt1PWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOnN9LHt0eXBlOlwia2VyblwiLHNpemU6LjF9LHt0eXBlOlwiZWxlbVwiLGVsZW06b31dLFwiYm90dG9tXCIsby5kZXB0aCsuMStzLmhlaWdodCx0KX1pZihhKXt2YXIgaD12KFtcIm1vcmRcIixlLnZhbHVlLmlzT3Zlcj9cIm1vdmVyXCI6XCJtdW5kZXJcIl0sW3VdLHQpO2lmKGUudmFsdWUuaXNPdmVyKXt1PWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmh9LHt0eXBlOlwia2VyblwiLHNpemU6LjJ9LHt0eXBlOlwiZWxlbVwiLGVsZW06aX1dLFwiZmlyc3RCYXNlbGluZVwiLG51bGwsdCl9ZWxzZXt1PWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOml9LHt0eXBlOlwia2VyblwiLHNpemU6LjJ9LHt0eXBlOlwiZWxlbVwiLGVsZW06aH1dLFwiYm90dG9tXCIsaC5kZXB0aCsuMitpLmhlaWdodCx0KX19cmV0dXJuIHYoW1wibW9yZFwiLGUudmFsdWUuaXNPdmVyP1wibW92ZXJcIjpcIm11bmRlclwiXSxbdV0sdCl9O1MuYWNjZW50VW5kZXI9ZnVuY3Rpb24oZSx0KXt2YXIgcj1xKGUudmFsdWUuYm9keSx0KTt2YXIgYT1jLnN2Z1NwYW4oZSx0KTt2YXIgaT0vdGlsZGUvLnRlc3QoZS52YWx1ZS5sYWJlbCk/LjEyOjA7dmFyIG49bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06YX0se3R5cGU6XCJrZXJuXCIsc2l6ZTppfSx7dHlwZTpcImVsZW1cIixlbGVtOnJ9XSxcImJvdHRvbVwiLGEuaGVpZ2h0K2ksdCk7cmV0dXJuIHYoW1wibW9yZFwiLFwiYWNjZW50dW5kZXJcIl0sW25dLHQpfTtTLmVuY2xvc2U9ZnVuY3Rpb24oZSx0KXt2YXIgcj1xKGUudmFsdWUuYm9keSx0KTt2YXIgYT1lLnZhbHVlLmxhYmVsLnN1YnN0cigxKTt2YXIgaT10LnNpemVNdWx0aXBsaWVyO3ZhciBuPXZvaWQgMDt2YXIgbz0wO3ZhciBzPTA7aWYoYT09PVwic291dFwiKXtuPXYoW1wic3RyZXRjaHlcIixcInNvdXRcIl0pO24uaGVpZ2h0PXQuZm9udE1ldHJpY3MoKS5kZWZhdWx0UnVsZVRoaWNrbmVzcy9pO24ubWF4Rm9udFNpemU9MTtzPS0uNSp0LmZvbnRNZXRyaWNzKCkueEhlaWdodH1lbHNle3IuY2xhc3Nlcy5wdXNoKGE9PT1cImZib3hcIj9cImJveHBhZFwiOlwiY2FuY2VsLXBhZFwiKTt2YXIgdT16KGUudmFsdWUuYm9keSk7bz1hPT09XCJmYm94XCI/LjM0OnU/LjI6MDtzPXIuZGVwdGgrbztuPWMuZW5jbG9zZVNwYW4ocix1LGEsbyx0KX12YXIgaD1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpyLHNoaWZ0OjB9LHt0eXBlOlwiZWxlbVwiLGVsZW06bixzaGlmdDpzfV0sXCJpbmRpdmlkdWFsU2hpZnRcIixudWxsLHQpO2lmKG4uaGVpZ2h0PmgubWF4Rm9udFNpemUpe2guY2hpbGRyZW5bMV0uc3R5bGUudG9wPS0oci5oZWlnaHQrby0uOS9pKStcImVtXCJ9aWYoL2NhbmNlbC8udGVzdChhKSl7cmV0dXJuIHYoW1wibW9yZFwiLFwiY2FuY2VsLWxhcFwiXSxbaF0sdCl9ZWxzZXtyZXR1cm4gdihbXCJtb3JkXCJdLFtoXSx0KX19O1MueEFycm93PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC5zdHlsZTt2YXIgYT10LmhhdmluZ1N0eWxlKHIuc3VwKCkpO3ZhciBpPXEoZS52YWx1ZS5ib2R5LGEsdCk7dmFyIG49dm9pZCAwO2lmKGUudmFsdWUuYmVsb3cpe2E9dC5oYXZpbmdTdHlsZShyLnN1YigpKTtuPXEoZS52YWx1ZS5iZWxvdyxhLHQpfXZhciBvPWMuc3ZnU3BhbihlLHQpO3ZhciBzPS10LmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodCtvLmRlcHRoO3ZhciB1PS10LmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodC1vLmhlaWdodC0uMTExO3ZhciBoPXZvaWQgMDtpZihlLnZhbHVlLmJlbG93KXt2YXIgcD0tdC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQrbi5oZWlnaHQrby5oZWlnaHQrLjExMTtoPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmksc2hpZnQ6dX0se3R5cGU6XCJlbGVtXCIsZWxlbTpvLHNoaWZ0OnN9LHt0eXBlOlwiZWxlbVwiLGVsZW06bixzaGlmdDpwfV0sXCJpbmRpdmlkdWFsU2hpZnRcIixudWxsLHQpfWVsc2V7aD1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTppLHNoaWZ0OnV9LHt0eXBlOlwiZWxlbVwiLGVsZW06byxzaGlmdDpzfV0sXCJpbmRpdmlkdWFsU2hpZnRcIixudWxsLHQpfXZhciBmPXYoW1wibXJlbFwiLFwieC1hcnJvd1wiXSxbaF0sdCk7Zi5kZXB0aD1mLmRlcHRoO2YuaGVpZ2h0PWYuaGVpZ2h0O3JldHVybiBmfTtTLnBoYW50b209ZnVuY3Rpb24oZSx0KXt2YXIgcj14KGUudmFsdWUudmFsdWUsdC53aXRoUGhhbnRvbSgpLGZhbHNlKTtyZXR1cm4gbmV3IGwubWFrZUZyYWdtZW50KHIpfTtTLm1jbGFzcz1mdW5jdGlvbihlLHQpe3ZhciByPXgoZS52YWx1ZS52YWx1ZSx0LHRydWUpO3JldHVybiB2KFtlLnZhbHVlLm1jbGFzc10scix0KX07dmFyIHE9ZnVuY3Rpb24gZSh0LHIsYSl7aWYoIXQpe3JldHVybiB2KCl9aWYoU1t0LnR5cGVdKXt2YXIgaT1TW3QudHlwZV0odCxyKTtpZihhJiZyLnNpemUhPT1hLnNpemUpe2k9dihyLnNpemluZ0NsYXNzZXMoYSksW2ldLHIpO3ZhciBuPXIuc2l6ZU11bHRpcGxpZXIvYS5zaXplTXVsdGlwbGllcjtpLmhlaWdodCo9bjtpLmRlcHRoKj1ufXJldHVybiBpfWVsc2V7dGhyb3cgbmV3IG8oXCJHb3QgZ3JvdXAgb2YgdW5rbm93biB0eXBlOiAnXCIrdC50eXBlK1wiJ1wiKX19O3ZhciBDPWZ1bmN0aW9uIGUodCxyKXt0PUpTT04ucGFyc2UoKDAsaS5kZWZhdWx0KSh0KSk7dmFyIGE9eCh0LHIsdHJ1ZSk7dmFyIG49dihbXCJiYXNlXCJdLGEscik7dmFyIG89dihbXCJzdHJ1dFwiXSk7dmFyIHM9dihbXCJzdHJ1dFwiLFwiYm90dG9tXCJdKTtvLnN0eWxlLmhlaWdodD1uLmhlaWdodCtcImVtXCI7cy5zdHlsZS5oZWlnaHQ9bi5oZWlnaHQrbi5kZXB0aCtcImVtXCI7cy5zdHlsZS52ZXJ0aWNhbEFsaWduPS1uLmRlcHRoK1wiZW1cIjt2YXIgbD12KFtcImthdGV4LWh0bWxcIl0sW28scyxuXSk7bC5zZXRBdHRyaWJ1dGUoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKTtyZXR1cm4gbH07dC5leHBvcnRzPUN9LHtcIi4vUGFyc2VFcnJvclwiOjEwLFwiLi9TdHlsZVwiOjEzLFwiLi9idWlsZENvbW1vblwiOjE0LFwiLi9kZWxpbWl0ZXJcIjoxOCxcIi4vZG9tVHJlZVwiOjE5LFwiLi9zdHJldGNoeVwiOjI4LFwiLi91dGlsc1wiOjMxLFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5XCI6Mn1dLDE2OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vYnVpbGRDb21tb25cIik7dmFyIGk9ZShcIi4vZm9udE1ldHJpY3NcIik7dmFyIG49ZShcIi4vbWF0aE1MVHJlZVwiKTt2YXIgbz1lKFwiLi9QYXJzZUVycm9yXCIpO3ZhciBzPWUoXCIuL3N5bWJvbHNcIik7dmFyIGw9ZShcIi4vdXRpbHNcIik7dmFyIHU9ZShcIi4vc3RyZXRjaHlcIik7dmFyIGg9YS5tYWtlU3Bhbjt2YXIgcD1hLmZvbnRNYXA7dmFyIGM9ZnVuY3Rpb24gZSh0LHIpe2lmKHNbcl1bdF0mJnNbcl1bdF0ucmVwbGFjZSl7dD1zW3JdW3RdLnJlcGxhY2V9cmV0dXJuIG5ldyBuLlRleHROb2RlKHQpfTt2YXIgdj1mdW5jdGlvbiBlKHQscil7dmFyIGE9ci5mb250O2lmKCFhKXtyZXR1cm4gbnVsbH12YXIgbj10Lm1vZGU7aWYoYT09PVwibWF0aGl0XCIpe3JldHVyblwiaXRhbGljXCJ9dmFyIG89dC52YWx1ZTtpZihsLmNvbnRhaW5zKFtcIlxcXFxpbWF0aFwiLFwiXFxcXGptYXRoXCJdLG8pKXtyZXR1cm4gbnVsbH1pZihzW25dW29dJiZzW25dW29dLnJlcGxhY2Upe289c1tuXVtvXS5yZXBsYWNlfXZhciB1PXBbYV0uZm9udE5hbWU7aWYoaS5nZXRDaGFyYWN0ZXJNZXRyaWNzKG8sdSkpe3JldHVybiBwW3IuZm9udF0udmFyaWFudH1yZXR1cm4gbnVsbH07dmFyIGY9e307dmFyIG09e21pOlwiaXRhbGljXCIsbW46XCJub3JtYWxcIixtdGV4dDpcIm5vcm1hbFwifTtmLm1hdGhvcmQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1pXCIsW2MoZS52YWx1ZSxlLm1vZGUpXSk7dmFyIGE9dihlLHQpfHxcIml0YWxpY1wiO2lmKGEhPT1tW3IudHlwZV0pe3Iuc2V0QXR0cmlidXRlKFwibWF0aHZhcmlhbnRcIixhKX1yZXR1cm4gcn07Zi50ZXh0b3JkPWZ1bmN0aW9uKGUsdCl7dmFyIHI9YyhlLnZhbHVlLGUubW9kZSk7dmFyIGE9dihlLHQpfHxcIm5vcm1hbFwiO3ZhciBpPXZvaWQgMDtpZihlLm1vZGU9PT1cInRleHRcIil7aT1uZXcgbi5NYXRoTm9kZShcIm10ZXh0XCIsW3JdKX1lbHNlIGlmKC9bMC05XS8udGVzdChlLnZhbHVlKSl7aT1uZXcgbi5NYXRoTm9kZShcIm1uXCIsW3JdKX1lbHNle2k9bmV3IG4uTWF0aE5vZGUoXCJtaVwiLFtyXSl9aWYoYSE9PW1baS50eXBlXSl7aS5zZXRBdHRyaWJ1dGUoXCJtYXRodmFyaWFudFwiLGEpfXJldHVybiBpfTtmLmJpbj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZSxlLm1vZGUpXSk7cmV0dXJuIHR9O2YucmVsPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhlLnZhbHVlLGUubW9kZSldKTtyZXR1cm4gdH07Zi5vcGVuPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhlLnZhbHVlLGUubW9kZSldKTtyZXR1cm4gdH07Zi5jbG9zZT1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZSxlLm1vZGUpXSk7cmV0dXJuIHR9O2YuaW5uZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUsZS5tb2RlKV0pO3JldHVybiB0fTtmLnB1bmN0PWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhlLnZhbHVlLGUubW9kZSldKTt0LnNldEF0dHJpYnV0ZShcInNlcGFyYXRvclwiLFwidHJ1ZVwiKTtyZXR1cm4gdH07Zi5vcmRncm91cD1mdW5jdGlvbihlLHQpe3ZhciByPWQoZS52YWx1ZSx0KTt2YXIgYT1uZXcgbi5NYXRoTm9kZShcIm1yb3dcIixyKTtyZXR1cm4gYX07Zi50ZXh0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS52YWx1ZS5ib2R5O3ZhciBhPVtdO3ZhciBpPW51bGw7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspe3ZhciBzPWcocltvXSx0KTtpZihzLnR5cGU9PT1cIm10ZXh0XCImJmkhPW51bGwpe0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGkuY2hpbGRyZW4scy5jaGlsZHJlbil9ZWxzZXthLnB1c2gocyk7aWYocy50eXBlPT09XCJtdGV4dFwiKXtpPXN9fX1pZihhLmxlbmd0aD09PTEpe3JldHVybiBhWzBdfWVsc2V7cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibXJvd1wiLGEpfX07Zi5jb2xvcj1mdW5jdGlvbihlLHQpe3ZhciByPWQoZS52YWx1ZS52YWx1ZSx0KTt2YXIgYT1uZXcgbi5NYXRoTm9kZShcIm1zdHlsZVwiLHIpO2Euc2V0QXR0cmlidXRlKFwibWF0aGNvbG9yXCIsZS52YWx1ZS5jb2xvcik7cmV0dXJuIGF9O2YueG1sQ2xhc3M9ZnVuY3Rpb24oZSx0KXt2YXIgcj1kKGUudmFsdWUudmFsdWUsdCk7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtc3R5bGVcIixyKTthLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsZS52YWx1ZS5jbCk7cmV0dXJuIGF9O2Yuc3Vwc3ViPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZmFsc2U7dmFyIGE9dm9pZCAwO3ZhciBpPXZvaWQgMDtpZihlLnZhbHVlLmJhc2Upe2lmKGUudmFsdWUuYmFzZS52YWx1ZS50eXBlPT09XCJob3JpekJyYWNlXCIpe2k9ZS52YWx1ZS5zdXA/dHJ1ZTpmYWxzZTtpZihpPT09ZS52YWx1ZS5iYXNlLnZhbHVlLmlzT3Zlcil7cj10cnVlO2E9ZS52YWx1ZS5iYXNlLnZhbHVlLmlzT3Zlcn19fXZhciBvPVtnKGUudmFsdWUuYmFzZSx0KV07aWYoZS52YWx1ZS5zdWIpe28ucHVzaChnKGUudmFsdWUuc3ViLHQpKX1pZihlLnZhbHVlLnN1cCl7by5wdXNoKGcoZS52YWx1ZS5zdXAsdCkpfXZhciBzPXZvaWQgMDtpZihyKXtzPWE/XCJtb3ZlclwiOlwibXVuZGVyXCJ9ZWxzZSBpZighZS52YWx1ZS5zdWIpe3M9XCJtc3VwXCJ9ZWxzZSBpZighZS52YWx1ZS5zdXApe3M9XCJtc3ViXCJ9ZWxzZXtzPVwibXN1YnN1cFwifXZhciBsPW5ldyBuLk1hdGhOb2RlKHMsbyk7cmV0dXJuIGx9O2YuZ2VuZnJhYz1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibWZyYWNcIixbZyhlLnZhbHVlLm51bWVyLHQpLGcoZS52YWx1ZS5kZW5vbSx0KV0pO2lmKCFlLnZhbHVlLmhhc0JhckxpbmUpe3Iuc2V0QXR0cmlidXRlKFwibGluZXRoaWNrbmVzc1wiLFwiMHB4XCIpfWlmKGUudmFsdWUubGVmdERlbGltIT1udWxsfHxlLnZhbHVlLnJpZ2h0RGVsaW0hPW51bGwpe3ZhciBhPVtdO2lmKGUudmFsdWUubGVmdERlbGltIT1udWxsKXt2YXIgaT1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW25ldyBuLlRleHROb2RlKGUudmFsdWUubGVmdERlbGltKV0pO2kuc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIik7YS5wdXNoKGkpfWEucHVzaChyKTtpZihlLnZhbHVlLnJpZ2h0RGVsaW0hPW51bGwpe3ZhciBvPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbbmV3IG4uVGV4dE5vZGUoZS52YWx1ZS5yaWdodERlbGltKV0pO28uc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIik7YS5wdXNoKG8pfXZhciBzPW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiLGEpO3JldHVybiBzfXJldHVybiByfTtmLmFycmF5PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibXRhYmxlXCIsZS52YWx1ZS5ib2R5Lm1hcChmdW5jdGlvbihlKXtyZXR1cm4gbmV3IG4uTWF0aE5vZGUoXCJtdHJcIixlLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gbmV3IG4uTWF0aE5vZGUoXCJtdGRcIixbZyhlLHQpXSl9KSl9KSl9O2Yuc3FydD1mdW5jdGlvbihlLHQpe3ZhciByPXZvaWQgMDtpZihlLnZhbHVlLmluZGV4KXtyPW5ldyBuLk1hdGhOb2RlKFwibXJvb3RcIixbZyhlLnZhbHVlLmJvZHksdCksZyhlLnZhbHVlLmluZGV4LHQpXSl9ZWxzZXtyPW5ldyBuLk1hdGhOb2RlKFwibXNxcnRcIixbZyhlLnZhbHVlLmJvZHksdCldKX1yZXR1cm4gcn07Zi5sZWZ0cmlnaHQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1kKGUudmFsdWUuYm9keSx0KTtpZihlLnZhbHVlLmxlZnQhPT1cIi5cIil7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUubGVmdCxlLm1vZGUpXSk7YS5zZXRBdHRyaWJ1dGUoXCJmZW5jZVwiLFwidHJ1ZVwiKTtyLnVuc2hpZnQoYSl9aWYoZS52YWx1ZS5yaWdodCE9PVwiLlwiKXt2YXIgaT1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZS5yaWdodCxlLm1vZGUpXSk7aS5zZXRBdHRyaWJ1dGUoXCJmZW5jZVwiLFwidHJ1ZVwiKTtyLnB1c2goaSl9dmFyIG89bmV3IG4uTWF0aE5vZGUoXCJtcm93XCIscik7cmV0dXJuIG99O2YubWlkZGxlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUubWlkZGxlLGUubW9kZSldKTtyLnNldEF0dHJpYnV0ZShcImZlbmNlXCIsXCJ0cnVlXCIpO3JldHVybiByfTtmLmFjY2VudD1mdW5jdGlvbihlLHQpe3ZhciByPXZvaWQgMDtpZihlLnZhbHVlLmlzU3RyZXRjaHkpe3I9dS5tYXRoTUxub2RlKGUudmFsdWUubGFiZWwpfWVsc2V7cj1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZS5sYWJlbCxlLm1vZGUpXSl9dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtb3ZlclwiLFtnKGUudmFsdWUuYmFzZSx0KSxyXSk7YS5zZXRBdHRyaWJ1dGUoXCJhY2NlbnRcIixcInRydWVcIik7cmV0dXJuIGF9O2Yuc3BhY2luZz1mdW5jdGlvbihlKXt2YXIgdD12b2lkIDA7aWYoZS52YWx1ZT09PVwiXFxcXCBcInx8ZS52YWx1ZT09PVwiXFxcXHNwYWNlXCJ8fGUudmFsdWU9PT1cIiBcInx8ZS52YWx1ZT09PVwiflwiKXt0PW5ldyBuLk1hdGhOb2RlKFwibXRleHRcIixbbmV3IG4uVGV4dE5vZGUoXCJcXHhhMFwiKV0pfWVsc2V7dD1uZXcgbi5NYXRoTm9kZShcIm1zcGFjZVwiKTt0LnNldEF0dHJpYnV0ZShcIndpZHRoXCIsYS5zcGFjaW5nRnVuY3Rpb25zW2UudmFsdWVdLnNpemUpfXJldHVybiB0fTtmLm9wPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dm9pZCAwO2lmKGUudmFsdWUuc3ltYm9sKXtyPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhlLnZhbHVlLmJvZHksZS5tb2RlKV0pfWVsc2UgaWYoZS52YWx1ZS52YWx1ZSl7cj1uZXcgbi5NYXRoTm9kZShcIm1vXCIsZChlLnZhbHVlLnZhbHVlLHQpKX1lbHNle3I9bmV3IG4uTWF0aE5vZGUoXCJtaVwiLFtuZXcgbi5UZXh0Tm9kZShlLnZhbHVlLmJvZHkuc2xpY2UoMSkpXSl9cmV0dXJuIHJ9O2YuY3Vyc29yPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibXRleHRcIixbbmV3IG4uVGV4dE5vZGUoXCJ8XCIpXSk7cmV0dXJuIHR9O2YubW9kPWZ1bmN0aW9uKGUsdCl7dmFyIHI9W107aWYoZS52YWx1ZS5tb2RUeXBlPT09XCJwb2RcInx8ZS52YWx1ZS5tb2RUeXBlPT09XCJwbW9kXCIpe3IucHVzaChuZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoXCIoXCIsZS5tb2RlKV0pKX1pZihlLnZhbHVlLm1vZFR5cGUhPT1cInBvZFwiKXtyLnB1c2gobmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKFwibW9kXCIsZS5tb2RlKV0pKX1pZihlLnZhbHVlLnZhbHVlKXt2YXIgYT1uZXcgbi5NYXRoTm9kZShcIm1zcGFjZVwiKTthLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsXCIwLjMzMzMzM2VtXCIpO3IucHVzaChhKTtyPXIuY29uY2F0KGQoZS52YWx1ZS52YWx1ZSx0KSl9aWYoZS52YWx1ZS5tb2RUeXBlPT09XCJwb2RcInx8ZS52YWx1ZS5tb2RUeXBlPT09XCJwbW9kXCIpe3IucHVzaChuZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoXCIpXCIsZS5tb2RlKV0pKX1yZXR1cm4gbmV3IG4uTWF0aE5vZGUoXCJtb1wiLHIpfTtmLmthdGV4PWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibXRleHRcIixbbmV3IG4uVGV4dE5vZGUoXCJLYVRlWFwiKV0pO3JldHVybiB0fTtmLmZvbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLnZhbHVlLmZvbnQ7cmV0dXJuIGcoZS52YWx1ZS5ib2R5LHQud2l0aEZvbnQocikpfTtmLmRlbGltc2l6aW5nPWZ1bmN0aW9uKGUpe3ZhciB0PVtdO2lmKGUudmFsdWUudmFsdWUhPT1cIi5cIil7dC5wdXNoKGMoZS52YWx1ZS52YWx1ZSxlLm1vZGUpKX12YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1vXCIsdCk7aWYoZS52YWx1ZS5tY2xhc3M9PT1cIm1vcGVuXCJ8fGUudmFsdWUubWNsYXNzPT09XCJtY2xvc2VcIil7ci5zZXRBdHRyaWJ1dGUoXCJmZW5jZVwiLFwidHJ1ZVwiKX1lbHNle3Iuc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcImZhbHNlXCIpfXJldHVybiByfTtmLnN0eWxpbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcj1kKGUudmFsdWUudmFsdWUsdCk7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtc3R5bGVcIixyKTt2YXIgaT17ZGlzcGxheTpbXCIwXCIsXCJ0cnVlXCJdLHRleHQ6W1wiMFwiLFwiZmFsc2VcIl0sc2NyaXB0OltcIjFcIixcImZhbHNlXCJdLHNjcmlwdHNjcmlwdDpbXCIyXCIsXCJmYWxzZVwiXX07dmFyIG89aVtlLnZhbHVlLnN0eWxlXTthLnNldEF0dHJpYnV0ZShcInNjcmlwdGxldmVsXCIsb1swXSk7YS5zZXRBdHRyaWJ1dGUoXCJkaXNwbGF5c3R5bGVcIixvWzFdKTtyZXR1cm4gYX07Zi5zaXppbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcj10LmhhdmluZ1NpemUoZS52YWx1ZS5zaXplKTt2YXIgYT1kKGUudmFsdWUudmFsdWUscik7dmFyIGk9bmV3IG4uTWF0aE5vZGUoXCJtc3R5bGVcIixhKTtpLnNldEF0dHJpYnV0ZShcIm1hdGhzaXplXCIsci5zaXplTXVsdGlwbGllcitcImVtXCIpO3JldHVybiBpfTtmLm92ZXJsaW5lPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtuZXcgbi5UZXh0Tm9kZShcIlxcdTIwM2VcIildKTtyLnNldEF0dHJpYnV0ZShcInN0cmV0Y2h5XCIsXCJ0cnVlXCIpO3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibW92ZXJcIixbZyhlLnZhbHVlLmJvZHksdCkscl0pO2Euc2V0QXR0cmlidXRlKFwiYWNjZW50XCIsXCJ0cnVlXCIpO3JldHVybiBhfTtmLnVuZGVybGluZT1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbbmV3IG4uVGV4dE5vZGUoXCJcXHUyMDNlXCIpXSk7ci5zZXRBdHRyaWJ1dGUoXCJzdHJldGNoeVwiLFwidHJ1ZVwiKTt2YXIgYT1uZXcgbi5NYXRoTm9kZShcIm11bmRlclwiLFtnKGUudmFsdWUuYm9keSx0KSxyXSk7YS5zZXRBdHRyaWJ1dGUoXCJhY2NlbnR1bmRlclwiLFwidHJ1ZVwiKTtyZXR1cm4gYX07Zi5hY2NlbnRVbmRlcj1mdW5jdGlvbihlLHQpe3ZhciByPXUubWF0aE1Mbm9kZShlLnZhbHVlLmxhYmVsKTt2YXIgYT1uZXcgbi5NYXRoTm9kZShcIm11bmRlclwiLFtnKGUudmFsdWUuYm9keSx0KSxyXSk7YS5zZXRBdHRyaWJ1dGUoXCJhY2NlbnR1bmRlclwiLFwidHJ1ZVwiKTtyZXR1cm4gYX07Zi5lbmNsb3NlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtZW5jbG9zZVwiLFtnKGUudmFsdWUuYm9keSx0KV0pO3ZhciBhPVwiXCI7c3dpdGNoKGUudmFsdWUubGFiZWwpe2Nhc2VcIlxcXFxiY2FuY2VsXCI6YT1cImRvd25kaWFnb25hbHN0cmlrZVwiO2JyZWFrO2Nhc2VcIlxcXFxzb3V0XCI6YT1cImhvcml6b250YWxzdHJpa2VcIjticmVhaztjYXNlXCJcXFxcZmJveFwiOmE9XCJib3hcIjticmVhaztkZWZhdWx0OmE9XCJ1cGRpYWdvbmFsc3RyaWtlXCJ9ci5zZXRBdHRyaWJ1dGUoXCJub3RhdGlvblwiLGEpO3JldHVybiByfTtmLmhvcml6QnJhY2U9ZnVuY3Rpb24oZSx0KXt2YXIgcj11Lm1hdGhNTG5vZGUoZS52YWx1ZS5sYWJlbCk7cmV0dXJuIG5ldyBuLk1hdGhOb2RlKGUudmFsdWUuaXNPdmVyP1wibW92ZXJcIjpcIm11bmRlclwiLFtnKGUudmFsdWUuYmFzZSx0KSxyXSl9O2YueEFycm93PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dS5tYXRoTUxub2RlKGUudmFsdWUubGFiZWwpO3ZhciBhPXZvaWQgMDt2YXIgaT12b2lkIDA7aWYoZS52YWx1ZS5ib2R5KXt2YXIgbz1nKGUudmFsdWUuYm9keSx0KTtpZihlLnZhbHVlLmJlbG93KXtpPWcoZS52YWx1ZS5iZWxvdyx0KTthPW5ldyBuLk1hdGhOb2RlKFwibXVuZGVyb3ZlclwiLFtyLGksb10pfWVsc2V7YT1uZXcgbi5NYXRoTm9kZShcIm1vdmVyXCIsW3Isb10pfX1lbHNlIGlmKGUudmFsdWUuYmVsb3cpe2k9ZyhlLnZhbHVlLmJlbG93LHQpO2E9bmV3IG4uTWF0aE5vZGUoXCJtdW5kZXJcIixbcixpXSl9ZWxzZXthPW5ldyBuLk1hdGhOb2RlKFwibW92ZXJcIixbcl0pfXJldHVybiBhfTtmLnJ1bGU9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtcm93XCIpO3JldHVybiB0fTtmLmtlcm49ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtcm93XCIpO3JldHVybiB0fTtmLmxsYXA9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1wYWRkZWRcIixbZyhlLnZhbHVlLmJvZHksdCldKTtyLnNldEF0dHJpYnV0ZShcImxzcGFjZVwiLFwiLTF3aWR0aFwiKTtyLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsXCIwcHhcIik7cmV0dXJuIHJ9O2YucmxhcD1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibXBhZGRlZFwiLFtnKGUudmFsdWUuYm9keSx0KV0pO3Iuc2V0QXR0cmlidXRlKFwid2lkdGhcIixcIjBweFwiKTtyZXR1cm4gcn07Zi5waGFudG9tPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZChlLnZhbHVlLnZhbHVlLHQpO3JldHVybiBuZXcgbi5NYXRoTm9kZShcIm1waGFudG9tXCIscil9O2YubWNsYXNzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZChlLnZhbHVlLnZhbHVlLHQpO3JldHVybiBuZXcgbi5NYXRoTm9kZShcIm1zdHlsZVwiLHIpfTt2YXIgZD1mdW5jdGlvbiBlKHQscil7dmFyIGE9W107Zm9yKHZhciBpPTA7aTx0Lmxlbmd0aDtpKyspe3ZhciBuPXRbaV07YS5wdXNoKGcobixyKSl9cmV0dXJuIGF9O3ZhciBnPWZ1bmN0aW9uIGUodCxyKXtpZighdCl7cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibXJvd1wiKX1pZihmW3QudHlwZV0pe3JldHVybiBmW3QudHlwZV0odCxyKX1lbHNle3Rocm93IG5ldyBvKFwiR290IGdyb3VwIG9mIHVua25vd24gdHlwZTogJ1wiK3QudHlwZStcIidcIil9fTt2YXIgeT1mdW5jdGlvbiBlKHQscixhKXt2YXIgaT1kKHQsYSk7dmFyIG89bmV3IG4uTWF0aE5vZGUoXCJtcm93XCIsaSk7dmFyIHM9bmV3IG4uTWF0aE5vZGUoXCJhbm5vdGF0aW9uXCIsW25ldyBuLlRleHROb2RlKHIpXSk7cy5zZXRBdHRyaWJ1dGUoXCJlbmNvZGluZ1wiLFwiYXBwbGljYXRpb24veC10ZXhcIik7dmFyIGw9bmV3IG4uTWF0aE5vZGUoXCJzZW1hbnRpY3NcIixbbyxzXSk7dmFyIHU9bmV3IG4uTWF0aE5vZGUoXCJtYXRoXCIsW2xdKTtyZXR1cm4gaChbXCJrYXRleC1tYXRobWxcIl0sW3VdKX07dC5leHBvcnRzPXl9LHtcIi4vUGFyc2VFcnJvclwiOjEwLFwiLi9idWlsZENvbW1vblwiOjE0LFwiLi9mb250TWV0cmljc1wiOjIxLFwiLi9tYXRoTUxUcmVlXCI6MjUsXCIuL3N0cmV0Y2h5XCI6MjgsXCIuL3N5bWJvbHNcIjoyOSxcIi4vdXRpbHNcIjozMX1dLDE3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vYnVpbGRIVE1MXCIpO3ZhciBpPWUoXCIuL2J1aWxkTWF0aE1MXCIpO3ZhciBuPWUoXCIuL2J1aWxkQ29tbW9uXCIpO3ZhciBvPWUoXCIuL09wdGlvbnNcIik7dmFyIHM9ZShcIi4vU2V0dGluZ3NcIik7dmFyIGw9ZShcIi4vU3R5bGVcIik7dmFyIHU9bi5tYWtlU3Bhbjt2YXIgaD1mdW5jdGlvbiBlKHQscixuKXtuPW58fG5ldyBzKHt9KTt2YXIgaD1sLlRFWFQ7aWYobi5kaXNwbGF5TW9kZSl7aD1sLkRJU1BMQVl9dmFyIHA9bmV3IG8oe3N0eWxlOmh9KTt2YXIgYz1pKHQscixwKTt2YXIgdj1hKHQscCk7dmFyIGY9dShbXCJrYXRleFwiXSxbYyx2XSk7aWYobi5kaXNwbGF5TW9kZSl7cmV0dXJuIHUoW1wia2F0ZXgtZGlzcGxheVwiXSxbZl0pfWVsc2V7cmV0dXJuIGZ9fTt0LmV4cG9ydHM9aH0se1wiLi9PcHRpb25zXCI6OSxcIi4vU2V0dGluZ3NcIjoxMixcIi4vU3R5bGVcIjoxMyxcIi4vYnVpbGRDb21tb25cIjoxNCxcIi4vYnVpbGRIVE1MXCI6MTUsXCIuL2J1aWxkTWF0aE1MXCI6MTZ9XSwxODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIGk9ZShcIi4vU3R5bGVcIik7dmFyIG49ZShcIi4vYnVpbGRDb21tb25cIik7dmFyIG89ZShcIi4vZm9udE1ldHJpY3NcIik7dmFyIHM9ZShcIi4vc3ltYm9sc1wiKTt2YXIgbD1lKFwiLi91dGlsc1wiKTt2YXIgdT1uLm1ha2VTcGFuO3ZhciBoPWZ1bmN0aW9uIGUodCxyKXtpZihzLm1hdGhbdF0mJnMubWF0aFt0XS5yZXBsYWNlKXtyZXR1cm4gby5nZXRDaGFyYWN0ZXJNZXRyaWNzKHMubWF0aFt0XS5yZXBsYWNlLHIpfWVsc2V7cmV0dXJuIG8uZ2V0Q2hhcmFjdGVyTWV0cmljcyh0LHIpfX07dmFyIHA9ZnVuY3Rpb24gZSh0LHIsYSxpKXt2YXIgbj1hLmhhdmluZ0Jhc2VTdHlsZShyKTt2YXIgbz11KChpfHxbXSkuY29uY2F0KG4uc2l6aW5nQ2xhc3NlcyhhKSksW3RdLGEpO28uaGVpZ2h0Kj1uLnNpemVNdWx0aXBsaWVyL2Euc2l6ZU11bHRpcGxpZXI7by5kZXB0aCo9bi5zaXplTXVsdGlwbGllci9hLnNpemVNdWx0aXBsaWVyO28ubWF4Rm9udFNpemU9bi5zaXplTXVsdGlwbGllcjtyZXR1cm4gb307dmFyIGM9ZnVuY3Rpb24gZSh0LHIsYSl7dmFyIGk9ci5oYXZpbmdCYXNlU3R5bGUoYSk7dmFyIG49KDEtci5zaXplTXVsdGlwbGllci9pLnNpemVNdWx0aXBsaWVyKSpyLmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodDt0LmNsYXNzZXMucHVzaChcImRlbGltY2VudGVyXCIpO3Quc3R5bGUudG9wPW4rXCJlbVwiO3QuaGVpZ2h0LT1uO3QuZGVwdGgrPW59O3ZhciB2PWZ1bmN0aW9uIGUodCxyLGEsaSxvLHMpe3ZhciBsPW4ubWFrZVN5bWJvbCh0LFwiTWFpbi1SZWd1bGFyXCIsbyxpKTt2YXIgdT1wKGwscixpLHMpO2lmKGEpe2ModSxpLHIpfXJldHVybiB1fTt2YXIgZj1mdW5jdGlvbiBlKHQscixhLGkpe3JldHVybiBuLm1ha2VTeW1ib2wodCxcIlNpemVcIityK1wiLVJlZ3VsYXJcIixhLGkpfTt2YXIgbT1mdW5jdGlvbiBlKHQscixhLG4sbyxzKXt2YXIgbD1mKHQscixvLG4pO3ZhciBoPXAodShbXCJkZWxpbXNpemluZ1wiLFwic2l6ZVwiK3JdLFtsXSxuKSxpLlRFWFQsbixzKTtpZihhKXtjKGgsbixpLlRFWFQpfXJldHVybiBofTt2YXIgZD1mdW5jdGlvbiBlKHQscixhKXt2YXIgaT12b2lkIDA7aWYocj09PVwiU2l6ZTEtUmVndWxhclwiKXtpPVwiZGVsaW0tc2l6ZTFcIn1lbHNlIGlmKHI9PT1cIlNpemU0LVJlZ3VsYXJcIil7aT1cImRlbGltLXNpemU0XCJ9dmFyIG89dShbXCJkZWxpbXNpemluZ2lubmVyXCIsaV0sW3UoW10sW24ubWFrZVN5bWJvbCh0LHIsYSldKV0pO3JldHVybnt0eXBlOlwiZWxlbVwiLGVsZW06b319O3ZhciBnPWZ1bmN0aW9uIGUodCxyLGEsbyxzLGwpe3ZhciBjPXZvaWQgMDt2YXIgdj12b2lkIDA7dmFyIGY9dm9pZCAwO3ZhciBtPXZvaWQgMDtjPWY9bT10O3Y9bnVsbDt2YXIgZz1cIlNpemUxLVJlZ3VsYXJcIjtpZih0PT09XCJcXFxcdXBhcnJvd1wiKXtmPW09XCJcXHUyM2QwXCJ9ZWxzZSBpZih0PT09XCJcXFxcVXBhcnJvd1wiKXtmPW09XCJcXHUyMDE2XCJ9ZWxzZSBpZih0PT09XCJcXFxcZG93bmFycm93XCIpe2M9Zj1cIlxcdTIzZDBcIn1lbHNlIGlmKHQ9PT1cIlxcXFxEb3duYXJyb3dcIil7Yz1mPVwiXFx1MjAxNlwifWVsc2UgaWYodD09PVwiXFxcXHVwZG93bmFycm93XCIpe2M9XCJcXFxcdXBhcnJvd1wiO2Y9XCJcXHUyM2QwXCI7bT1cIlxcXFxkb3duYXJyb3dcIn1lbHNlIGlmKHQ9PT1cIlxcXFxVcGRvd25hcnJvd1wiKXtjPVwiXFxcXFVwYXJyb3dcIjtmPVwiXFx1MjAxNlwiO209XCJcXFxcRG93bmFycm93XCJ9ZWxzZSBpZih0PT09XCJbXCJ8fHQ9PT1cIlxcXFxsYnJhY2tcIil7Yz1cIlxcdTIzYTFcIjtmPVwiXFx1MjNhMlwiO209XCJcXHUyM2EzXCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIl1cInx8dD09PVwiXFxcXHJicmFja1wiKXtjPVwiXFx1MjNhNFwiO2Y9XCJcXHUyM2E1XCI7bT1cIlxcdTIzYTZcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXGxmbG9vclwiKXtmPWM9XCJcXHUyM2EyXCI7bT1cIlxcdTIzYTNcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXGxjZWlsXCIpe2M9XCJcXHUyM2ExXCI7Zj1tPVwiXFx1MjNhMlwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxccmZsb29yXCIpe2Y9Yz1cIlxcdTIzYTVcIjttPVwiXFx1MjNhNlwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxccmNlaWxcIil7Yz1cIlxcdTIzYTRcIjtmPW09XCJcXHUyM2E1XCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIihcIil7Yz1cIlxcdTIzOWJcIjtmPVwiXFx1MjM5Y1wiO209XCJcXHUyMzlkXCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIilcIil7Yz1cIlxcdTIzOWVcIjtmPVwiXFx1MjM5ZlwiO209XCJcXHUyM2EwXCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFx7XCJ8fHQ9PT1cIlxcXFxsYnJhY2VcIil7Yz1cIlxcdTIzYTdcIjt2PVwiXFx1MjNhOFwiO209XCJcXHUyM2E5XCI7Zj1cIlxcdTIzYWFcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXH1cInx8dD09PVwiXFxcXHJicmFjZVwiKXtjPVwiXFx1MjNhYlwiO3Y9XCJcXHUyM2FjXCI7bT1cIlxcdTIzYWRcIjtmPVwiXFx1MjNhYVwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxcbGdyb3VwXCIpe2M9XCJcXHUyM2E3XCI7bT1cIlxcdTIzYTlcIjtmPVwiXFx1MjNhYVwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxccmdyb3VwXCIpe2M9XCJcXHUyM2FiXCI7bT1cIlxcdTIzYWRcIjtmPVwiXFx1MjNhYVwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxcbG1vdXN0YWNoZVwiKXtjPVwiXFx1MjNhN1wiO209XCJcXHUyM2FkXCI7Zj1cIlxcdTIzYWFcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXHJtb3VzdGFjaGVcIil7Yz1cIlxcdTIzYWJcIjttPVwiXFx1MjNhOVwiO2Y9XCJcXHUyM2FhXCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFxzdXJkXCIpe2M9XCJcXHVlMDAxXCI7bT1cIlxcdTIzYjdcIjtmPVwiXFx1ZTAwMFwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9dmFyIHk9aChjLGcpO3ZhciB4PXkuaGVpZ2h0K3kuZGVwdGg7dmFyIGI9aChmLGcpO3ZhciB3PWIuaGVpZ2h0K2IuZGVwdGg7dmFyIGs9aChtLGcpO3ZhciB6PWsuaGVpZ2h0K2suZGVwdGg7dmFyIE09MDt2YXIgUz0xO2lmKHYhPT1udWxsKXt2YXIgQT1oKHYsZyk7TT1BLmhlaWdodCtBLmRlcHRoO1M9Mn12YXIgTj14K3orTTt2YXIgVD1NYXRoLmNlaWwoKHItTikvKFMqdykpO3ZhciBxPU4rVCpTKnc7dmFyIEM9by5mb250TWV0cmljcygpLmF4aXNIZWlnaHQ7aWYoYSl7Qyo9by5zaXplTXVsdGlwbGllcn12YXIgRT1xLzItQzt2YXIgTz1bXTtPLnB1c2goZChtLGcscykpO2lmKHY9PT1udWxsKXtmb3IodmFyIFI9MDtSPFQ7UisrKXtPLnB1c2goZChmLGcscykpfX1lbHNle2Zvcih2YXIgTD0wO0w8VDtMKyspe08ucHVzaChkKGYsZyxzKSl9Ty5wdXNoKGQodixnLHMpKTtmb3IodmFyIEQ9MDtEPFQ7RCsrKXtPLnB1c2goZChmLGcscykpfX1PLnB1c2goZChjLGcscykpO3ZhciBQPW8uaGF2aW5nQmFzZVN0eWxlKGkuVEVYVCk7dmFyIEI9bi5tYWtlVkxpc3QoTyxcImJvdHRvbVwiLEUsUCk7cmV0dXJuIHAodShbXCJkZWxpbXNpemluZ1wiLFwibXVsdFwiXSxbQl0sUCksaS5URVhULG8sbCl9O3ZhciB5PVtcIihcIixcIilcIixcIltcIixcIlxcXFxsYnJhY2tcIixcIl1cIixcIlxcXFxyYnJhY2tcIixcIlxcXFx7XCIsXCJcXFxcbGJyYWNlXCIsXCJcXFxcfVwiLFwiXFxcXHJicmFjZVwiLFwiXFxcXGxmbG9vclwiLFwiXFxcXHJmbG9vclwiLFwiXFxcXGxjZWlsXCIsXCJcXFxccmNlaWxcIixcIlxcXFxzdXJkXCJdO3ZhciB4PVtcIlxcXFx1cGFycm93XCIsXCJcXFxcZG93bmFycm93XCIsXCJcXFxcdXBkb3duYXJyb3dcIixcIlxcXFxVcGFycm93XCIsXCJcXFxcRG93bmFycm93XCIsXCJcXFxcVXBkb3duYXJyb3dcIixcInxcIixcIlxcXFx8XCIsXCJcXFxcdmVydFwiLFwiXFxcXFZlcnRcIixcIlxcXFxsdmVydFwiLFwiXFxcXHJ2ZXJ0XCIsXCJcXFxcbFZlcnRcIixcIlxcXFxyVmVydFwiLFwiXFxcXGxncm91cFwiLFwiXFxcXHJncm91cFwiLFwiXFxcXGxtb3VzdGFjaGVcIixcIlxcXFxybW91c3RhY2hlXCJdO3ZhciBiPVtcIjxcIixcIj5cIixcIlxcXFxsYW5nbGVcIixcIlxcXFxyYW5nbGVcIixcIi9cIixcIlxcXFxiYWNrc2xhc2hcIixcIlxcXFxsdFwiLFwiXFxcXGd0XCJdO3ZhciB3PVswLDEuMiwxLjgsMi40LDNdO3ZhciBrPWZ1bmN0aW9uIGUodCxyLGksbixvKXtpZih0PT09XCI8XCJ8fHQ9PT1cIlxcXFxsdFwiKXt0PVwiXFxcXGxhbmdsZVwifWVsc2UgaWYodD09PVwiPlwifHx0PT09XCJcXFxcZ3RcIil7dD1cIlxcXFxyYW5nbGVcIn1pZihsLmNvbnRhaW5zKHksdCl8fGwuY29udGFpbnMoYix0KSl7cmV0dXJuIG0odCxyLGZhbHNlLGksbixvKX1lbHNlIGlmKGwuY29udGFpbnMoeCx0KSl7cmV0dXJuIGcodCx3W3JdLGZhbHNlLGksbixvKX1lbHNle3Rocm93IG5ldyBhKFwiSWxsZWdhbCBkZWxpbWl0ZXI6ICdcIit0K1wiJ1wiKX19O3ZhciB6PVt7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFRTQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlNDUklQVH0se3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuVEVYVH0se3R5cGU6XCJsYXJnZVwiLHNpemU6MX0se3R5cGU6XCJsYXJnZVwiLHNpemU6Mn0se3R5cGU6XCJsYXJnZVwiLHNpemU6M30se3R5cGU6XCJsYXJnZVwiLHNpemU6NH1dO3ZhciBNPVt7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFRTQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlNDUklQVH0se3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuVEVYVH0se3R5cGU6XCJzdGFja1wifV07dmFyIFM9W3t0eXBlOlwic21hbGxcIixzdHlsZTppLlNDUklQVFNDUklQVH0se3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuU0NSSVBUfSx7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5URVhUfSx7dHlwZTpcImxhcmdlXCIsc2l6ZToxfSx7dHlwZTpcImxhcmdlXCIsc2l6ZToyfSx7dHlwZTpcImxhcmdlXCIsc2l6ZTozfSx7dHlwZTpcImxhcmdlXCIsc2l6ZTo0fSx7dHlwZTpcInN0YWNrXCJ9XTt2YXIgQT1mdW5jdGlvbiBlKHQpe2lmKHQudHlwZT09PVwic21hbGxcIil7cmV0dXJuXCJNYWluLVJlZ3VsYXJcIn1lbHNlIGlmKHQudHlwZT09PVwibGFyZ2VcIil7cmV0dXJuXCJTaXplXCIrdC5zaXplK1wiLVJlZ3VsYXJcIn1lbHNlIGlmKHQudHlwZT09PVwic3RhY2tcIil7cmV0dXJuXCJTaXplNC1SZWd1bGFyXCJ9fTt2YXIgTj1mdW5jdGlvbiBlKHQscixhLGkpe3ZhciBuPU1hdGgubWluKDIsMy1pLnN0eWxlLnNpemUpO2Zvcih2YXIgbz1uO288YS5sZW5ndGg7bysrKXtpZihhW29dLnR5cGU9PT1cInN0YWNrXCIpe2JyZWFrfXZhciBzPWgodCxBKGFbb10pKTt2YXIgbD1zLmhlaWdodCtzLmRlcHRoO2lmKGFbb10udHlwZT09PVwic21hbGxcIil7dmFyIHU9aS5oYXZpbmdCYXNlU3R5bGUoYVtvXS5zdHlsZSk7bCo9dS5zaXplTXVsdGlwbGllcn1pZihsPnIpe3JldHVybiBhW29dfX1yZXR1cm4gYVthLmxlbmd0aC0xXX07dmFyIFQ9ZnVuY3Rpb24gZSh0LHIsYSxpLG4sbyl7aWYodD09PVwiPFwifHx0PT09XCJcXFxcbHRcIil7dD1cIlxcXFxsYW5nbGVcIn1lbHNlIGlmKHQ9PT1cIj5cInx8dD09PVwiXFxcXGd0XCIpe3Q9XCJcXFxccmFuZ2xlXCJ9dmFyIHM9dm9pZCAwO2lmKGwuY29udGFpbnMoYix0KSl7cz16fWVsc2UgaWYobC5jb250YWlucyh5LHQpKXtzPVN9ZWxzZXtzPU19dmFyIHU9Tih0LHIscyxpKTtpZih1LnR5cGU9PT1cInNtYWxsXCIpe3JldHVybiB2KHQsdS5zdHlsZSxhLGksbixvKX1lbHNlIGlmKHUudHlwZT09PVwibGFyZ2VcIil7cmV0dXJuIG0odCx1LnNpemUsYSxpLG4sbyl9ZWxzZSBpZih1LnR5cGU9PT1cInN0YWNrXCIpe3JldHVybiBnKHQscixhLGksbixvKX19O3ZhciBxPWZ1bmN0aW9uIGUodCxyLGEsaSxuLG8pe3ZhciBzPWkuZm9udE1ldHJpY3MoKS5heGlzSGVpZ2h0Kmkuc2l6ZU11bHRpcGxpZXI7dmFyIGw9OTAxO3ZhciB1PTUvaS5mb250TWV0cmljcygpLnB0UGVyRW07dmFyIGg9TWF0aC5tYXgoci1zLGErcyk7dmFyIHA9TWF0aC5tYXgoaC81MDAqbCwyKmgtdSk7cmV0dXJuIFQodCxwLHRydWUsaSxuLG8pfTt0LmV4cG9ydHM9e3NpemVkRGVsaW06ayxjdXN0b21TaXplZERlbGltOlQsbGVmdFJpZ2h0RGVsaW06cX19LHtcIi4vUGFyc2VFcnJvclwiOjEwLFwiLi9TdHlsZVwiOjEzLFwiLi9idWlsZENvbW1vblwiOjE0LFwiLi9mb250TWV0cmljc1wiOjIxLFwiLi9zeW1ib2xzXCI6MjksXCIuL3V0aWxzXCI6MzF9XSwxOTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL3VuaWNvZGVSZWdleGVzXCIpO3ZhciBpPWUoXCIuL3V0aWxzXCIpO3ZhciBuPWZ1bmN0aW9uIGUodCl7dD10LnNsaWNlKCk7Zm9yKHZhciByPXQubGVuZ3RoLTE7cj49MDtyLS0pe2lmKCF0W3JdKXt0LnNwbGljZShyLDEpfX1yZXR1cm4gdC5qb2luKFwiIFwiKX07ZnVuY3Rpb24gbyhlLHQscil7dGhpcy5jbGFzc2VzPWV8fFtdO3RoaXMuY2hpbGRyZW49dHx8W107dGhpcy5oZWlnaHQ9MDt0aGlzLmRlcHRoPTA7dGhpcy5tYXhGb250U2l6ZT0wO3RoaXMuc3R5bGU9e307dGhpcy5hdHRyaWJ1dGVzPXt9O2lmKHIpe2lmKHIuc3R5bGUuaXNUaWdodCgpKXt0aGlzLmNsYXNzZXMucHVzaChcIm10aWdodFwiKX1pZihyLmdldENvbG9yKCkpe3RoaXMuc3R5bGUuY29sb3I9ci5nZXRDb2xvcigpfX19by5wcm90b3R5cGUuc2V0QXR0cmlidXRlPWZ1bmN0aW9uKGUsdCl7dGhpcy5hdHRyaWJ1dGVzW2VdPXR9O28ucHJvdG90eXBlLnRyeUNvbWJpbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGZhbHNlfTtvLnByb3RvdHlwZS50b05vZGU9ZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtlLmNsYXNzTmFtZT1uKHRoaXMuY2xhc3Nlcyk7Zm9yKHZhciB0IGluIHRoaXMuc3R5bGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLnN0eWxlLHQpKXtlLnN0eWxlW3RdPXRoaXMuc3R5bGVbdF19fWZvcih2YXIgciBpbiB0aGlzLmF0dHJpYnV0ZXMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmF0dHJpYnV0ZXMscikpe2Uuc2V0QXR0cmlidXRlKHIsdGhpcy5hdHRyaWJ1dGVzW3JdKX19Zm9yKHZhciBhPTA7YTx0aGlzLmNoaWxkcmVuLmxlbmd0aDthKyspe2UuYXBwZW5kQ2hpbGQodGhpcy5jaGlsZHJlblthXS50b05vZGUoKSl9cmV0dXJuIGV9O28ucHJvdG90eXBlLnRvTWFya3VwPWZ1bmN0aW9uKCl7dmFyIGU9XCI8c3BhblwiO2lmKHRoaXMuY2xhc3Nlcy5sZW5ndGgpe2UrPScgY2xhc3M9XCInO2UrPWkuZXNjYXBlKG4odGhpcy5jbGFzc2VzKSk7ZSs9J1wiJ312YXIgdD1cIlwiO2Zvcih2YXIgciBpbiB0aGlzLnN0eWxlKXtpZih0aGlzLnN0eWxlLmhhc093blByb3BlcnR5KHIpKXt0Kz1pLmh5cGhlbmF0ZShyKStcIjpcIit0aGlzLnN0eWxlW3JdK1wiO1wifX1pZih0KXtlKz0nIHN0eWxlPVwiJytpLmVzY2FwZSh0KSsnXCInfWZvcih2YXIgYSBpbiB0aGlzLmF0dHJpYnV0ZXMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmF0dHJpYnV0ZXMsYSkpe2UrPVwiIFwiK2ErJz1cIic7ZSs9aS5lc2NhcGUodGhpcy5hdHRyaWJ1dGVzW2FdKTtlKz0nXCInfX1lKz1cIj5cIjtmb3IodmFyIG89MDtvPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO28rKyl7ZSs9dGhpcy5jaGlsZHJlbltvXS50b01hcmt1cCgpO1xufWUrPVwiPC9zcGFuPlwiO3JldHVybiBlfTtmdW5jdGlvbiBzKGUsdCl7dGhpcy5jaGlsZHJlbj1lfHxbXTt0aGlzLmhlaWdodD0wO3RoaXMuZGVwdGg9MDt0aGlzLm1heEZvbnRTaXplPTA7aWYodCl7Zm9yKHZhciByPTA7cjx0aGlzLmNoaWxkcmVuLmxlbmd0aDtyKyspe2Zvcih2YXIgYT0wO2E8dC5sZW5ndGg7YSsrKXt0aGlzLmNoaWxkcmVuW3JdLmNsYXNzZXMucHVzaCh0W2FdKX19fXRoaXMuY2xhc3Nlcz10fHxbXX1zLnByb3RvdHlwZS50b05vZGU9ZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7Zm9yKHZhciB0PTA7dDx0aGlzLmNoaWxkcmVuLmxlbmd0aDt0Kyspe2UuYXBwZW5kQ2hpbGQodGhpcy5jaGlsZHJlblt0XS50b05vZGUoKSl9cmV0dXJuIGV9O3MucHJvdG90eXBlLnRvTWFya3VwPWZ1bmN0aW9uKCl7dmFyIGU9XCJcIjtmb3IodmFyIHQ9MDt0PHRoaXMuY2hpbGRyZW4ubGVuZ3RoO3QrKyl7ZSs9dGhpcy5jaGlsZHJlblt0XS50b01hcmt1cCgpfXJldHVybiBlfTt2YXIgbD17XCJcXHhlZVwiOlwiXFx1MDEzMVxcdTAzMDJcIixcIlxceGVmXCI6XCJcXHUwMTMxXFx1MDMwOFwiLFwiXFx4ZWRcIjpcIlxcdTAxMzFcXHUwMzAxXCIsXCJcXHhlY1wiOlwiXFx1MDEzMVxcdTAzMDBcIn07ZnVuY3Rpb24gdShlLHQscixpLG4sbyxzKXt0aGlzLnZhbHVlPWV8fFwiXCI7dGhpcy5oZWlnaHQ9dHx8MDt0aGlzLmRlcHRoPXJ8fDA7dGhpcy5pdGFsaWM9aXx8MDt0aGlzLnNrZXc9bnx8MDt0aGlzLmNsYXNzZXM9b3x8W107dGhpcy5zdHlsZT1zfHx7fTt0aGlzLm1heEZvbnRTaXplPTA7aWYoYS5jamtSZWdleC50ZXN0KGUpKXtpZihhLmhhbmd1bFJlZ2V4LnRlc3QoZSkpe3RoaXMuY2xhc3Nlcy5wdXNoKFwiaGFuZ3VsX2ZhbGxiYWNrXCIpfWVsc2V7dGhpcy5jbGFzc2VzLnB1c2goXCJjamtfZmFsbGJhY2tcIil9fWlmKC9bXFx4ZWVcXHhlZlxceGVkXFx4ZWNdLy50ZXN0KHRoaXMudmFsdWUpKXt0aGlzLnZhbHVlPWxbdGhpcy52YWx1ZV19fXUucHJvdG90eXBlLnRyeUNvbWJpbmU9ZnVuY3Rpb24oZSl7aWYoIWV8fCEoZSBpbnN0YW5jZW9mIHUpfHx0aGlzLml0YWxpYz4wfHxuKHRoaXMuY2xhc3NlcykhPT1uKGUuY2xhc3Nlcyl8fHRoaXMuc2tldyE9PWUuc2tld3x8dGhpcy5tYXhGb250U2l6ZSE9PWUubWF4Rm9udFNpemUpe3JldHVybiBmYWxzZX1mb3IodmFyIHQgaW4gdGhpcy5zdHlsZSl7aWYodGhpcy5zdHlsZS5oYXNPd25Qcm9wZXJ0eSh0KSYmdGhpcy5zdHlsZVt0XSE9PWUuc3R5bGVbdF0pe3JldHVybiBmYWxzZX19Zm9yKHZhciByIGluIGUuc3R5bGUpe2lmKGUuc3R5bGUuaGFzT3duUHJvcGVydHkocikmJnRoaXMuc3R5bGVbcl0hPT1lLnN0eWxlW3JdKXtyZXR1cm4gZmFsc2V9fXRoaXMudmFsdWUrPWUudmFsdWU7dGhpcy5oZWlnaHQ9TWF0aC5tYXgodGhpcy5oZWlnaHQsZS5oZWlnaHQpO3RoaXMuZGVwdGg9TWF0aC5tYXgodGhpcy5kZXB0aCxlLmRlcHRoKTt0aGlzLml0YWxpYz1lLml0YWxpYztyZXR1cm4gdHJ1ZX07dS5wcm90b3R5cGUudG9Ob2RlPWZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGhpcy52YWx1ZSk7dmFyIHQ9bnVsbDtpZih0aGlzLml0YWxpYz4wKXt0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3Quc3R5bGUubWFyZ2luUmlnaHQ9dGhpcy5pdGFsaWMrXCJlbVwifWlmKHRoaXMuY2xhc3Nlcy5sZW5ndGg+MCl7dD10fHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTt0LmNsYXNzTmFtZT1uKHRoaXMuY2xhc3Nlcyl9Zm9yKHZhciByIGluIHRoaXMuc3R5bGUpe2lmKHRoaXMuc3R5bGUuaGFzT3duUHJvcGVydHkocikpe3Q9dHx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7dC5zdHlsZVtyXT10aGlzLnN0eWxlW3JdfX1pZih0KXt0LmFwcGVuZENoaWxkKGUpO3JldHVybiB0fWVsc2V7cmV0dXJuIGV9fTt1LnByb3RvdHlwZS50b01hcmt1cD1mdW5jdGlvbigpe3ZhciBlPWZhbHNlO3ZhciB0PVwiPHNwYW5cIjtpZih0aGlzLmNsYXNzZXMubGVuZ3RoKXtlPXRydWU7dCs9JyBjbGFzcz1cIic7dCs9aS5lc2NhcGUobih0aGlzLmNsYXNzZXMpKTt0Kz0nXCInfXZhciByPVwiXCI7aWYodGhpcy5pdGFsaWM+MCl7cis9XCJtYXJnaW4tcmlnaHQ6XCIrdGhpcy5pdGFsaWMrXCJlbTtcIn1mb3IodmFyIGEgaW4gdGhpcy5zdHlsZSl7aWYodGhpcy5zdHlsZS5oYXNPd25Qcm9wZXJ0eShhKSl7cis9aS5oeXBoZW5hdGUoYSkrXCI6XCIrdGhpcy5zdHlsZVthXStcIjtcIn19aWYocil7ZT10cnVlO3QrPScgc3R5bGU9XCInK2kuZXNjYXBlKHIpKydcIid9dmFyIG89aS5lc2NhcGUodGhpcy52YWx1ZSk7aWYoZSl7dCs9XCI+XCI7dCs9bzt0Kz1cIjwvc3Bhbj5cIjtyZXR1cm4gdH1lbHNle3JldHVybiBvfX07dC5leHBvcnRzPXtzcGFuOm8sZG9jdW1lbnRGcmFnbWVudDpzLHN5bWJvbE5vZGU6dX19LHtcIi4vdW5pY29kZVJlZ2V4ZXNcIjozMCxcIi4vdXRpbHNcIjozMX1dLDIwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vcGFyc2VEYXRhXCIpO3ZhciBpPWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIG49YS5QYXJzZU5vZGU7ZnVuY3Rpb24gbyhlLHQscil7dmFyIGE9W107dmFyIG89W2FdO3ZhciBzPVtdO3doaWxlKHRydWUpe3ZhciBsPWUucGFyc2VFeHByZXNzaW9uKGZhbHNlLG51bGwpO2w9bmV3IG4oXCJvcmRncm91cFwiLGwsZS5tb2RlKTtpZihyKXtsPW5ldyBuKFwic3R5bGluZ1wiLHtzdHlsZTpyLHZhbHVlOltsXX0sZS5tb2RlKX1hLnB1c2gobCk7dmFyIHU9ZS5uZXh0VG9rZW4udGV4dDtpZih1PT09XCImXCIpe2UuY29uc3VtZSgpfWVsc2UgaWYodT09PVwiXFxcXGVuZFwiKXticmVha31lbHNlIGlmKHU9PT1cIlxcXFxcXFxcXCJ8fHU9PT1cIlxcXFxjclwiKXt2YXIgaD1lLnBhcnNlRnVuY3Rpb24oKTtzLnB1c2goaC52YWx1ZS5zaXplKTthPVtdO28ucHVzaChhKX1lbHNle3Rocm93IG5ldyBpKFwiRXhwZWN0ZWQgJiBvciBcXFxcXFxcXCBvciBcXFxcZW5kXCIsZS5uZXh0VG9rZW4pfX10LmJvZHk9bzt0LnJvd0dhcHM9cztyZXR1cm4gbmV3IG4odC50eXBlLHQsZS5tb2RlKX1mdW5jdGlvbiBzKGUscixhKXtpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe2U9W2VdfWlmKHR5cGVvZiByPT09XCJudW1iZXJcIil7cj17bnVtQXJnczpyfX12YXIgaT17bnVtQXJnczpyLm51bUFyZ3N8fDAsYXJnVHlwZXM6ci5hcmdUeXBlcyxncmVlZGluZXNzOjEsYWxsb3dlZEluVGV4dDohIXIuYWxsb3dlZEluVGV4dCxudW1PcHRpb25hbEFyZ3M6ci5udW1PcHRpb25hbEFyZ3N8fDAsaGFuZGxlcjphfTtmb3IodmFyIG49MDtuPGUubGVuZ3RoOysrbil7dC5leHBvcnRzW2Vbbl1dPWl9fWZ1bmN0aW9uIGwoZSl7aWYoZS5zdWJzdHIoMCwxKT09PVwiZFwiKXtyZXR1cm5cImRpc3BsYXlcIn1lbHNle3JldHVyblwidGV4dFwifX1zKFtcImFycmF5XCIsXCJkYXJyYXlcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3I9ci52YWx1ZS5tYXA/ci52YWx1ZTpbcl07dmFyIGE9ci5tYXAoZnVuY3Rpb24oZSl7dmFyIHQ9ZS52YWx1ZTtpZihcImxjclwiLmluZGV4T2YodCkhPT0tMSl7cmV0dXJue3R5cGU6XCJhbGlnblwiLGFsaWduOnR9fWVsc2UgaWYodD09PVwifFwiKXtyZXR1cm57dHlwZTpcInNlcGFyYXRvclwiLHNlcGFyYXRvcjpcInxcIn19dGhyb3cgbmV3IGkoXCJVbmtub3duIGNvbHVtbiBhbGlnbm1lbnQ6IFwiK2UudmFsdWUsZSl9KTt2YXIgbj17dHlwZTpcImFycmF5XCIsY29sczphLGhza2lwQmVmb3JlQW5kQWZ0ZXI6dHJ1ZX07bj1vKGUucGFyc2VyLG4sbChlLmVudk5hbWUpKTtyZXR1cm4gbn0pO3MoW1wibWF0cml4XCIsXCJwbWF0cml4XCIsXCJibWF0cml4XCIsXCJCbWF0cml4XCIsXCJ2bWF0cml4XCIsXCJWbWF0cml4XCJdLHt9LGZ1bmN0aW9uKGUpe3ZhciB0PXttYXRyaXg6bnVsbCxwbWF0cml4OltcIihcIixcIilcIl0sYm1hdHJpeDpbXCJbXCIsXCJdXCJdLEJtYXRyaXg6W1wiXFxcXHtcIixcIlxcXFx9XCJdLHZtYXRyaXg6W1wifFwiLFwifFwiXSxWbWF0cml4OltcIlxcXFxWZXJ0XCIsXCJcXFxcVmVydFwiXX1bZS5lbnZOYW1lXTt2YXIgcj17dHlwZTpcImFycmF5XCIsaHNraXBCZWZvcmVBbmRBZnRlcjpmYWxzZX07cj1vKGUucGFyc2VyLHIsbChlLmVudk5hbWUpKTtpZih0KXtyPW5ldyBuKFwibGVmdHJpZ2h0XCIse2JvZHk6W3JdLGxlZnQ6dFswXSxyaWdodDp0WzFdfSxlLm1vZGUpfXJldHVybiByfSk7cyhbXCJjYXNlc1wiLFwiZGNhc2VzXCJdLHt9LGZ1bmN0aW9uKGUpe3ZhciB0PXt0eXBlOlwiYXJyYXlcIixhcnJheXN0cmV0Y2g6MS4yLGNvbHM6W3t0eXBlOlwiYWxpZ25cIixhbGlnbjpcImxcIixwcmVnYXA6MCxwb3N0Z2FwOjF9LHt0eXBlOlwiYWxpZ25cIixhbGlnbjpcImxcIixwcmVnYXA6MCxwb3N0Z2FwOjB9XX07dD1vKGUucGFyc2VyLHQsbChlLmVudk5hbWUpKTt0PW5ldyBuKFwibGVmdHJpZ2h0XCIse2JvZHk6W3RdLGxlZnQ6XCJcXFxce1wiLHJpZ2h0OlwiLlwifSxlLm1vZGUpO3JldHVybiB0fSk7cyhcImFsaWduZWRcIix7fSxmdW5jdGlvbihlKXt2YXIgdD17dHlwZTpcImFycmF5XCIsY29sczpbXSxhZGRKb3Q6dHJ1ZX07dD1vKGUucGFyc2VyLHQsXCJkaXNwbGF5XCIpO3ZhciByPW5ldyBuKFwib3JkZ3JvdXBcIixbXSxlLm1vZGUpO3ZhciBhPTA7dC52YWx1ZS5ib2R5LmZvckVhY2goZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxlLmxlbmd0aDt0Kz0yKXt2YXIgaT1lW3RdLnZhbHVlLnZhbHVlWzBdO2kudmFsdWUudW5zaGlmdChyKX1pZihhPGUubGVuZ3RoKXthPWUubGVuZ3RofX0pO2Zvcih2YXIgaT0wO2k8YTsrK2kpe3ZhciBzPVwiclwiO3ZhciBsPTA7aWYoaSUyPT09MSl7cz1cImxcIn1lbHNlIGlmKGk+MCl7bD0yfXQudmFsdWUuY29sc1tpXT17dHlwZTpcImFsaWduXCIsYWxpZ246cyxwcmVnYXA6bCxwb3N0Z2FwOjB9fXJldHVybiB0fSk7cyhcImdhdGhlcmVkXCIse30sZnVuY3Rpb24oZSl7dmFyIHQ9e3R5cGU6XCJhcnJheVwiLGNvbHM6W3t0eXBlOlwiYWxpZ25cIixhbGlnbjpcImNcIn1dLGFkZEpvdDp0cnVlfTt0PW8oZS5wYXJzZXIsdCxcImRpc3BsYXlcIik7cmV0dXJuIHR9KX0se1wiLi9QYXJzZUVycm9yXCI6MTAsXCIuL3BhcnNlRGF0YVwiOjI2fV0sMjE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi91bmljb2RlUmVnZXhlc1wiKS5jamtSZWdleDt2YXIgaT17c2xhbnQ6Wy4yNSwuMjUsLjI1XSxzcGFjZTpbMCwwLDBdLHN0cmV0Y2g6WzAsMCwwXSxzaHJpbms6WzAsMCwwXSx4SGVpZ2h0OlsuNDMxLC40MzEsLjQzMV0scXVhZDpbMSwxLjE3MSwxLjQ3Ml0sZXh0cmFTcGFjZTpbMCwwLDBdLG51bTE6Wy42NzcsLjczMiwuOTI1XSxudW0yOlsuMzk0LC4zODQsLjM4N10sbnVtMzpbLjQ0NCwuNDcxLC41MDRdLGRlbm9tMTpbLjY4NiwuNzUyLDEuMDI1XSxkZW5vbTI6Wy4zNDUsLjM0NCwuNTMyXSxzdXAxOlsuNDEzLC41MDMsLjUwNF0sc3VwMjpbLjM2MywuNDMxLC40MDRdLHN1cDM6Wy4yODksLjI4NiwuMjk0XSxzdWIxOlsuMTUsLjE0MywuMl0sc3ViMjpbLjI0NywuMjg2LC40XSxzdXBEcm9wOlsuMzg2LC4zNTMsLjQ5NF0sc3ViRHJvcDpbLjA1LC4wNzEsLjFdLGRlbGltMTpbMi4zOSwxLjcsMS45OF0sZGVsaW0yOlsxLjAxLDEuMTU3LDEuNDJdLGF4aXNIZWlnaHQ6Wy4yNSwuMjUsLjI1XSxkZWZhdWx0UnVsZVRoaWNrbmVzczpbLjA0LC4wNCwuMDRdLGJpZ09wU3BhY2luZzE6Wy4xMTEsLjExMSwuMTExXSxiaWdPcFNwYWNpbmcyOlsuMTY2LC4xNjYsLjE2Nl0sYmlnT3BTcGFjaW5nMzpbLjIsLjIsLjJdLGJpZ09wU3BhY2luZzQ6Wy42LC42LC42XSxiaWdPcFNwYWNpbmc1OlsuMSwuMSwuMV0scHRQZXJFbTpbMTAsMTAsMTBdLGRvdWJsZVJ1bGVTZXA6Wy4yLC4yLC4yXX07dmFyIG49ZShcIi4vZm9udE1ldHJpY3NEYXRhXCIpO3ZhciBvPXtcIlxceGMwXCI6XCJBXCIsXCJcXHhjMVwiOlwiQVwiLFwiXFx4YzJcIjpcIkFcIixcIlxceGMzXCI6XCJBXCIsXCJcXHhjNFwiOlwiQVwiLFwiXFx4YzVcIjpcIkFcIixcIlxceGM2XCI6XCJBXCIsXCJcXHhjN1wiOlwiQ1wiLFwiXFx4YzhcIjpcIkVcIixcIlxceGM5XCI6XCJFXCIsXCJcXHhjYVwiOlwiRVwiLFwiXFx4Y2JcIjpcIkVcIixcIlxceGNjXCI6XCJJXCIsXCJcXHhjZFwiOlwiSVwiLFwiXFx4Y2VcIjpcIklcIixcIlxceGNmXCI6XCJJXCIsXCJcXHhkMFwiOlwiRFwiLFwiXFx4ZDFcIjpcIk5cIixcIlxceGQyXCI6XCJPXCIsXCJcXHhkM1wiOlwiT1wiLFwiXFx4ZDRcIjpcIk9cIixcIlxceGQ1XCI6XCJPXCIsXCJcXHhkNlwiOlwiT1wiLFwiXFx4ZDhcIjpcIk9cIixcIlxceGQ5XCI6XCJVXCIsXCJcXHhkYVwiOlwiVVwiLFwiXFx4ZGJcIjpcIlVcIixcIlxceGRjXCI6XCJVXCIsXCJcXHhkZFwiOlwiWVwiLFwiXFx4ZGVcIjpcIm9cIixcIlxceGRmXCI6XCJCXCIsXCJcXHhlMFwiOlwiYVwiLFwiXFx4ZTFcIjpcImFcIixcIlxceGUyXCI6XCJhXCIsXCJcXHhlM1wiOlwiYVwiLFwiXFx4ZTRcIjpcImFcIixcIlxceGU1XCI6XCJhXCIsXCJcXHhlNlwiOlwiYVwiLFwiXFx4ZTdcIjpcImNcIixcIlxceGU4XCI6XCJlXCIsXCJcXHhlOVwiOlwiZVwiLFwiXFx4ZWFcIjpcImVcIixcIlxceGViXCI6XCJlXCIsXCJcXHhlY1wiOlwiaVwiLFwiXFx4ZWRcIjpcImlcIixcIlxceGVlXCI6XCJpXCIsXCJcXHhlZlwiOlwiaVwiLFwiXFx4ZjBcIjpcImRcIixcIlxceGYxXCI6XCJuXCIsXCJcXHhmMlwiOlwib1wiLFwiXFx4ZjNcIjpcIm9cIixcIlxceGY0XCI6XCJvXCIsXCJcXHhmNVwiOlwib1wiLFwiXFx4ZjZcIjpcIm9cIixcIlxceGY4XCI6XCJvXCIsXCJcXHhmOVwiOlwidVwiLFwiXFx4ZmFcIjpcInVcIixcIlxceGZiXCI6XCJ1XCIsXCJcXHhmY1wiOlwidVwiLFwiXFx4ZmRcIjpcInlcIixcIlxceGZlXCI6XCJvXCIsXCJcXHhmZlwiOlwieVwiLFwiXFx1MDQxMFwiOlwiQVwiLFwiXFx1MDQxMVwiOlwiQlwiLFwiXFx1MDQxMlwiOlwiQlwiLFwiXFx1MDQxM1wiOlwiRlwiLFwiXFx1MDQxNFwiOlwiQVwiLFwiXFx1MDQxNVwiOlwiRVwiLFwiXFx1MDQxNlwiOlwiS1wiLFwiXFx1MDQxN1wiOlwiM1wiLFwiXFx1MDQxOFwiOlwiTlwiLFwiXFx1MDQxOVwiOlwiTlwiLFwiXFx1MDQxYVwiOlwiS1wiLFwiXFx1MDQxYlwiOlwiTlwiLFwiXFx1MDQxY1wiOlwiTVwiLFwiXFx1MDQxZFwiOlwiSFwiLFwiXFx1MDQxZVwiOlwiT1wiLFwiXFx1MDQxZlwiOlwiTlwiLFwiXFx1MDQyMFwiOlwiUFwiLFwiXFx1MDQyMVwiOlwiQ1wiLFwiXFx1MDQyMlwiOlwiVFwiLFwiXFx1MDQyM1wiOlwieVwiLFwiXFx1MDQyNFwiOlwiT1wiLFwiXFx1MDQyNVwiOlwiWFwiLFwiXFx1MDQyNlwiOlwiVVwiLFwiXFx1MDQyN1wiOlwiaFwiLFwiXFx1MDQyOFwiOlwiV1wiLFwiXFx1MDQyOVwiOlwiV1wiLFwiXFx1MDQyYVwiOlwiQlwiLFwiXFx1MDQyYlwiOlwiWFwiLFwiXFx1MDQyY1wiOlwiQlwiLFwiXFx1MDQyZFwiOlwiM1wiLFwiXFx1MDQyZVwiOlwiWFwiLFwiXFx1MDQyZlwiOlwiUlwiLFwiXFx1MDQzMFwiOlwiYVwiLFwiXFx1MDQzMVwiOlwiYlwiLFwiXFx1MDQzMlwiOlwiYVwiLFwiXFx1MDQzM1wiOlwiclwiLFwiXFx1MDQzNFwiOlwieVwiLFwiXFx1MDQzNVwiOlwiZVwiLFwiXFx1MDQzNlwiOlwibVwiLFwiXFx1MDQzN1wiOlwiZVwiLFwiXFx1MDQzOFwiOlwiblwiLFwiXFx1MDQzOVwiOlwiblwiLFwiXFx1MDQzYVwiOlwiblwiLFwiXFx1MDQzYlwiOlwiblwiLFwiXFx1MDQzY1wiOlwibVwiLFwiXFx1MDQzZFwiOlwiblwiLFwiXFx1MDQzZVwiOlwib1wiLFwiXFx1MDQzZlwiOlwiblwiLFwiXFx1MDQ0MFwiOlwicFwiLFwiXFx1MDQ0MVwiOlwiY1wiLFwiXFx1MDQ0MlwiOlwib1wiLFwiXFx1MDQ0M1wiOlwieVwiLFwiXFx1MDQ0NFwiOlwiYlwiLFwiXFx1MDQ0NVwiOlwieFwiLFwiXFx1MDQ0NlwiOlwiblwiLFwiXFx1MDQ0N1wiOlwiblwiLFwiXFx1MDQ0OFwiOlwid1wiLFwiXFx1MDQ0OVwiOlwid1wiLFwiXFx1MDQ0YVwiOlwiYVwiLFwiXFx1MDQ0YlwiOlwibVwiLFwiXFx1MDQ0Y1wiOlwiYVwiLFwiXFx1MDQ0ZFwiOlwiZVwiLFwiXFx1MDQ0ZVwiOlwibVwiLFwiXFx1MDQ0ZlwiOlwiclwifTt2YXIgcz1mdW5jdGlvbiBlKHQscil7dmFyIGk9dC5jaGFyQ29kZUF0KDApO2lmKHRbMF1pbiBvKXtpPW9bdFswXV0uY2hhckNvZGVBdCgwKX1lbHNlIGlmKGEudGVzdCh0WzBdKSl7aT1cIk1cIi5jaGFyQ29kZUF0KDApfXZhciBzPW5bcl1baV07aWYocyl7cmV0dXJue2RlcHRoOnNbMF0saGVpZ2h0OnNbMV0saXRhbGljOnNbMl0sc2tldzpzWzNdLHdpZHRoOnNbNF19fX07dmFyIGw9e307dmFyIHU9ZnVuY3Rpb24gZSh0KXt2YXIgcj12b2lkIDA7aWYodD49NSl7cj0wfWVsc2UgaWYodD49Myl7cj0xfWVsc2V7cj0yfWlmKCFsW3JdKXt2YXIgYT1sW3JdPXt9O2Zvcih2YXIgbiBpbiBpKXtpZihpLmhhc093blByb3BlcnR5KG4pKXthW25dPWlbbl1bcl19fWEuZW1QZXJFeD1hLnhIZWlnaHQvYS5xdWFkfXJldHVybiBsW3JdfTt0LmV4cG9ydHM9e2dldEZvbnRNZXRyaWNzOnUsZ2V0Q2hhcmFjdGVyTWV0cmljczpzfX0se1wiLi9mb250TWV0cmljc0RhdGFcIjoyMixcIi4vdW5pY29kZVJlZ2V4ZXNcIjozMH1dLDIyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dC5leHBvcnRzPXtcIkFNUy1SZWd1bGFyXCI6ezY1OlswLC42ODg4OSwwLDBdLDY2OlswLC42ODg4OSwwLDBdLDY3OlswLC42ODg4OSwwLDBdLDY4OlswLC42ODg4OSwwLDBdLDY5OlswLC42ODg4OSwwLDBdLDcwOlswLC42ODg4OSwwLDBdLDcxOlswLC42ODg4OSwwLDBdLDcyOlswLC42ODg4OSwwLDBdLDczOlswLC42ODg4OSwwLDBdLDc0OlsuMTY2NjcsLjY4ODg5LDAsMF0sNzU6WzAsLjY4ODg5LDAsMF0sNzY6WzAsLjY4ODg5LDAsMF0sNzc6WzAsLjY4ODg5LDAsMF0sNzg6WzAsLjY4ODg5LDAsMF0sNzk6Wy4xNjY2NywuNjg4ODksMCwwXSw4MDpbMCwuNjg4ODksMCwwXSw4MTpbLjE2NjY3LC42ODg4OSwwLDBdLDgyOlswLC42ODg4OSwwLDBdLDgzOlswLC42ODg4OSwwLDBdLDg0OlswLC42ODg4OSwwLDBdLDg1OlswLC42ODg4OSwwLDBdLDg2OlswLC42ODg4OSwwLDBdLDg3OlswLC42ODg4OSwwLDBdLDg4OlswLC42ODg4OSwwLDBdLDg5OlswLC42ODg4OSwwLDBdLDkwOlswLC42ODg4OSwwLDBdLDEwNzpbMCwuNjg4ODksMCwwXSwxNjU6WzAsLjY3NSwuMDI1LDBdLDE3NDpbLjE1NTU5LC42OTIyNCwwLDBdLDI0MDpbMCwuNjg4ODksMCwwXSwyOTU6WzAsLjY4ODg5LDAsMF0sNzEwOlswLC44MjUsMCwwXSw3MzI6WzAsLjksMCwwXSw3NzA6WzAsLjgyNSwwLDBdLDc3MTpbMCwuOSwwLDBdLDk4OTpbLjA4MTY3LC41ODE2NywwLDBdLDEwMDg6WzAsLjQzMDU2LC4wNDAyOCwwXSw4MjQ1OlswLC41NDk4NiwwLDBdLDg0NjM6WzAsLjY4ODg5LDAsMF0sODQ4NzpbMCwuNjg4ODksMCwwXSw4NDk4OlswLC42ODg4OSwwLDBdLDg1MDI6WzAsLjY4ODg5LDAsMF0sODUwMzpbMCwuNjg4ODksMCwwXSw4NTA0OlswLC42ODg4OSwwLDBdLDg1MTM6WzAsLjY4ODg5LDAsMF0sODU5MjpbLS4wMzU5OCwuNDY0MDIsMCwwXSw4NTk0OlstLjAzNTk4LC40NjQwMiwwLDBdLDg2MDI6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODYwMzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjA2OlsuMDEzNTQsLjUyMjM5LDAsMF0sODYwODpbLjAxMzU0LC41MjIzOSwwLDBdLDg2MTA6Wy4wMTM1NCwuNTIyMzksMCwwXSw4NjExOlsuMDEzNTQsLjUyMjM5LDAsMF0sODYxOTpbMCwuNTQ5ODYsMCwwXSw4NjIwOlswLC41NDk4NiwwLDBdLDg2MjE6Wy0uMTMzMTMsLjM3Nzg4LDAsMF0sODYyMjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjI0OlswLC42OTIyNCwwLDBdLDg2MjU6WzAsLjY5MjI0LDAsMF0sODYzMDpbMCwuNDMwNTYsMCwwXSw4NjMxOlswLC40MzA1NiwwLDBdLDg2MzQ6Wy4wODE5OCwuNTgxOTgsMCwwXSw4NjM1OlsuMDgxOTgsLjU4MTk4LDAsMF0sODYzODpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2Mzk6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjQyOlsuMTk0NDQsLjY5MjI0LDAsMF0sODY0MzpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2NDQ6Wy4xODA4LC42NzUsMCwwXSw4NjQ2OlsuMTgwOCwuNjc1LDAsMF0sODY0NzpbLjE4MDgsLjY3NSwwLDBdLDg2NDg6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjQ5OlsuMTgwOCwuNjc1LDAsMF0sODY1MDpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2NTE6Wy4wMTM1NCwuNTIyMzksMCwwXSw4NjUyOlsuMDEzNTQsLjUyMjM5LDAsMF0sODY1MzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU0OlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NTU6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY2NjpbLjEzNjY3LC42MzY2NywwLDBdLDg2Njc6Wy4xMzY2NywuNjM2NjcsMCwwXSw4NjY5OlstLjEzMzEzLC4zNzc4OCwwLDBdLDg2NzI6Wy0uMDY0LC40MzcsMCwwXSw4Njc0OlstLjA2NCwuNDM3LDAsMF0sODcwNTpbMCwuODI1LDAsMF0sODcwODpbMCwuNjg4ODksMCwwXSw4NzA5OlsuMDgxNjcsLjU4MTY3LDAsMF0sODcxNzpbMCwuNDMwNTYsMCwwXSw4NzIyOlstLjAzNTk4LC40NjQwMiwwLDBdLDg3MjQ6Wy4wODE5OCwuNjkyMjQsMCwwXSw4NzI2OlsuMDgxNjcsLjU4MTY3LDAsMF0sODczMzpbMCwuNjkyMjQsMCwwXSw4NzM2OlswLC42OTIyNCwwLDBdLDg3Mzc6WzAsLjY5MjI0LDAsMF0sODczODpbLjAzNTE3LC41MjIzOSwwLDBdLDg3Mzk6Wy4wODE2NywuNTgxNjcsMCwwXSw4NzQwOlsuMjUxNDIsLjc0MTExLDAsMF0sODc0MTpbLjA4MTY3LC41ODE2NywwLDBdLDg3NDI6Wy4yNTE0MiwuNzQxMTEsMCwwXSw4NzU2OlswLC42OTIyNCwwLDBdLDg3NTc6WzAsLjY5MjI0LDAsMF0sODc2NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NzY1OlstLjEzMzEzLC4zNzc4OCwwLDBdLDg3Njk6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODc3MDpbLS4wMzYyNSwuNDYzNzUsMCwwXSw4Nzc0OlsuMzAyNzQsLjc5MzgzLDAsMF0sODc3NjpbLS4wMTY4OCwuNDgzMTIsMCwwXSw4Nzc4OlsuMDgxNjcsLjU4MTY3LDAsMF0sODc4MjpbLjA2MDYyLC41NDk4NiwwLDBdLDg3ODM6Wy4wNjA2MiwuNTQ5ODYsMCwwXSw4Nzg1OlsuMDgxOTgsLjU4MTk4LDAsMF0sODc4NjpbLjA4MTk4LC41ODE5OCwwLDBdLDg3ODc6Wy4wODE5OCwuNTgxOTgsMCwwXSw4NzkwOlswLC42OTIyNCwwLDBdLDg3OTE6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4Nzk2OlsuMDgxOTgsLjkxNjY3LDAsMF0sODgwNjpbLjI1NTgzLC43NTU4MywwLDBdLDg4MDc6Wy4yNTU4MywuNzU1ODMsMCwwXSw4ODA4OlsuMjUxNDIsLjc1NzI2LDAsMF0sODgwOTpbLjI1MTQyLC43NTcyNiwwLDBdLDg4MTI6Wy4yNTU4MywuNzU1ODMsMCwwXSw4ODE0OlsuMjA1NzYsLjcwNTc2LDAsMF0sODgxNTpbLjIwNTc2LC43MDU3NiwwLDBdLDg4MTY6Wy4zMDI3NCwuNzkzODMsMCwwXSw4ODE3OlsuMzAyNzQsLjc5MzgzLDAsMF0sODgxODpbLjIyOTU4LC43Mjk1OCwwLDBdLDg4MTk6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4ODIyOlsuMTgwOCwuNjc1LDAsMF0sODgyMzpbLjE4MDgsLjY3NSwwLDBdLDg4Mjg6Wy4xMzY2NywuNjM2NjcsMCwwXSw4ODI5OlsuMTM2NjcsLjYzNjY3LDAsMF0sODgzMDpbLjIyOTU4LC43Mjk1OCwwLDBdLDg4MzE6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4ODMyOlsuMjA1NzYsLjcwNTc2LDAsMF0sODgzMzpbLjIwNTc2LC43MDU3NiwwLDBdLDg4NDA6Wy4zMDI3NCwuNzkzODMsMCwwXSw4ODQxOlsuMzAyNzQsLjc5MzgzLDAsMF0sODg0MjpbLjEzNTk3LC42MzU5NywwLDBdLDg4NDM6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODQ3OlsuMDM1MTcsLjU0OTg2LDAsMF0sODg0ODpbLjAzNTE3LC41NDk4NiwwLDBdLDg4NTg6Wy4wODE5OCwuNTgxOTgsMCwwXSw4ODU5OlsuMDgxOTgsLjU4MTk4LDAsMF0sODg2MTpbLjA4MTk4LC41ODE5OCwwLDBdLDg4NjI6WzAsLjY3NSwwLDBdLDg4NjM6WzAsLjY3NSwwLDBdLDg4NjQ6WzAsLjY3NSwwLDBdLDg4NjU6WzAsLjY3NSwwLDBdLDg4NzI6WzAsLjY5MjI0LDAsMF0sODg3MzpbMCwuNjkyMjQsMCwwXSw4ODc0OlswLC42OTIyNCwwLDBdLDg4NzY6WzAsLjY4ODg5LDAsMF0sODg3NzpbMCwuNjg4ODksMCwwXSw4ODc4OlswLC42ODg4OSwwLDBdLDg4Nzk6WzAsLjY4ODg5LDAsMF0sODg4MjpbLjAzNTE3LC41NDk4NiwwLDBdLDg4ODM6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4ODg0OlsuMTM2NjcsLjYzNjY3LDAsMF0sODg4NTpbLjEzNjY3LC42MzY2NywwLDBdLDg4ODg6WzAsLjU0OTg2LDAsMF0sODg5MDpbLjE5NDQ0LC40MzA1NiwwLDBdLDg4OTE6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4ODkyOlsuMTk0NDQsLjY5MjI0LDAsMF0sODkwMTpbMCwuNTQ5ODYsMCwwXSw4OTAzOlsuMDgxNjcsLjU4MTY3LDAsMF0sODkwNTpbLjA4MTY3LC41ODE2NywwLDBdLDg5MDY6Wy4wODE2NywuNTgxNjcsMCwwXSw4OTA3OlswLC42OTIyNCwwLDBdLDg5MDg6WzAsLjY5MjI0LDAsMF0sODkwOTpbLS4wMzU5OCwuNDY0MDIsMCwwXSw4OTEwOlswLC41NDk4NiwwLDBdLDg5MTE6WzAsLjU0OTg2LDAsMF0sODkxMjpbLjAzNTE3LC41NDk4NiwwLDBdLDg5MTM6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4OTE0OlswLC41NDk4NiwwLDBdLDg5MTU6WzAsLjU0OTg2LDAsMF0sODkxNjpbMCwuNjkyMjQsMCwwXSw4OTE4OlsuMDM5MSwuNTM5MSwwLDBdLDg5MTk6Wy4wMzkxLC41MzkxLDAsMF0sODkyMDpbLjAzNTE3LC41NDk4NiwwLDBdLDg5MjE6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4OTIyOlsuMzg1NjksLjg4NTY5LDAsMF0sODkyMzpbLjM4NTY5LC44ODU2OSwwLDBdLDg5MjY6Wy4xMzY2NywuNjM2NjcsMCwwXSw4OTI3OlsuMTM2NjcsLjYzNjY3LDAsMF0sODkyODpbLjMwMjc0LC43OTM4MywwLDBdLDg5Mjk6Wy4zMDI3NCwuNzkzODMsMCwwXSw4OTM0OlsuMjMyMjIsLjc0MTExLDAsMF0sODkzNTpbLjIzMjIyLC43NDExMSwwLDBdLDg5MzY6Wy4yMzIyMiwuNzQxMTEsMCwwXSw4OTM3OlsuMjMyMjIsLjc0MTExLDAsMF0sODkzODpbLjIwNTc2LC43MDU3NiwwLDBdLDg5Mzk6Wy4yMDU3NiwuNzA1NzYsMCwwXSw4OTQwOlsuMzAyNzQsLjc5MzgzLDAsMF0sODk0MTpbLjMwMjc0LC43OTM4MywwLDBdLDg5OTQ6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4OTk1OlsuMTk0NDQsLjY5MjI0LDAsMF0sOTQxNjpbLjE1NTU5LC42OTIyNCwwLDBdLDk0ODQ6WzAsLjY5MjI0LDAsMF0sOTQ4ODpbMCwuNjkyMjQsMCwwXSw5NDkyOlswLC4zNzc4OCwwLDBdLDk0OTY6WzAsLjM3Nzg4LDAsMF0sOTU4NTpbLjE5NDQ0LC42ODg4OSwwLDBdLDk1ODY6Wy4xOTQ0NCwuNzQxMTEsMCwwXSw5NjMyOlswLC42NzUsMCwwXSw5NjMzOlswLC42NzUsMCwwXSw5NjUwOlswLC41NDk4NiwwLDBdLDk2NTE6WzAsLjU0OTg2LDAsMF0sOTY1NDpbLjAzNTE3LC41NDk4NiwwLDBdLDk2NjA6WzAsLjU0OTg2LDAsMF0sOTY2MTpbMCwuNTQ5ODYsMCwwXSw5NjY0OlsuMDM1MTcsLjU0OTg2LDAsMF0sOTY3NDpbLjExMTExLC42OTIyNCwwLDBdLDk3MzM6Wy4xOTQ0NCwuNjkyMjQsMCwwXSwxMDAwMzpbMCwuNjkyMjQsMCwwXSwxMDAxNjpbMCwuNjkyMjQsMCwwXSwxMDczMTpbLjExMTExLC42OTIyNCwwLDBdLDEwODQ2OlsuMTk0NDQsLjc1NTgzLDAsMF0sMTA4Nzc6Wy4xMzY2NywuNjM2NjcsMCwwXSwxMDg3ODpbLjEzNjY3LC42MzY2NywwLDBdLDEwODg1OlsuMjU1ODMsLjc1NTgzLDAsMF0sMTA4ODY6Wy4yNTU4MywuNzU1ODMsMCwwXSwxMDg4NzpbLjEzNTk3LC42MzU5NywwLDBdLDEwODg4OlsuMTM1OTcsLjYzNTk3LDAsMF0sMTA4ODk6Wy4yNjE2NywuNzU3MjYsMCwwXSwxMDg5MDpbLjI2MTY3LC43NTcyNiwwLDBdLDEwODkxOlsuNDgyNTYsLjk4MjU2LDAsMF0sMTA4OTI6Wy40ODI1NiwuOTgyNTYsMCwwXSwxMDkwMTpbLjEzNjY3LC42MzY2NywwLDBdLDEwOTAyOlsuMTM2NjcsLjYzNjY3LDAsMF0sMTA5MzM6Wy4yNTE0MiwuNzU3MjYsMCwwXSwxMDkzNDpbLjI1MTQyLC43NTcyNiwwLDBdLDEwOTM1OlsuMjYxNjcsLjc1NzI2LDAsMF0sMTA5MzY6Wy4yNjE2NywuNzU3MjYsMCwwXSwxMDkzNzpbLjI2MTY3LC43NTcyNiwwLDBdLDEwOTM4OlsuMjYxNjcsLjc1NzI2LDAsMF0sMTA5NDk6Wy4yNTU4MywuNzU1ODMsMCwwXSwxMDk1MDpbLjI1NTgzLC43NTU4MywwLDBdLDEwOTU1OlsuMjg0ODEsLjc5MzgzLDAsMF0sMTA5NTY6Wy4yODQ4MSwuNzkzODMsMCwwXSw1NzM1MDpbLjA4MTY3LC41ODE2NywwLDBdLDU3MzUxOlsuMDgxNjcsLjU4MTY3LDAsMF0sNTczNTI6Wy4wODE2NywuNTgxNjcsMCwwXSw1NzM1MzpbMCwuNDMwNTYsLjA0MDI4LDBdLDU3MzU2OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNTc6Wy4yNTE0MiwuNzU3MjYsMCwwXSw1NzM1ODpbLjQxOTUxLC45MTk1MSwwLDBdLDU3MzU5OlsuMzAyNzQsLjc5MzgzLDAsMF0sNTczNjA6Wy4zMDI3NCwuNzkzODMsMCwwXSw1NzM2MTpbLjQxOTUxLC45MTk1MSwwLDBdLDU3MzY2OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNjc6Wy4yNTE0MiwuNzU3MjYsMCwwXSw1NzM2ODpbLjI1MTQyLC43NTcyNiwwLDBdLDU3MzY5OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNzA6Wy4xMzU5NywuNjM1OTcsMCwwXSw1NzM3MTpbLjEzNTk3LC42MzU5NywwLDBdfSxcIkNhbGlncmFwaGljLVJlZ3VsYXJcIjp7NDg6WzAsLjQzMDU2LDAsMF0sNDk6WzAsLjQzMDU2LDAsMF0sNTA6WzAsLjQzMDU2LDAsMF0sNTE6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw1MjpbLjE5NDQ0LC40MzA1NiwwLDBdLDUzOlsuMTk0NDQsLjQzMDU2LDAsMF0sNTQ6WzAsLjY0NDQ0LDAsMF0sNTU6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw1NjpbMCwuNjQ0NDQsMCwwXSw1NzpbLjE5NDQ0LC40MzA1NiwwLDBdLDY1OlswLC42ODMzMywwLC4xOTQ0NV0sNjY6WzAsLjY4MzMzLC4wMzA0MSwuMTM4ODldLDY3OlswLC42ODMzMywuMDU4MzQsLjEzODg5XSw2ODpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sNjk6WzAsLjY4MzMzLC4wODk0NCwuMTExMTFdLDcwOlswLC42ODMzMywuMDk5MzEsLjExMTExXSw3MTpbLjA5NzIyLC42ODMzMywuMDU5MywuMTExMTFdLDcyOlswLC42ODMzMywuMDA5NjUsLjExMTExXSw3MzpbMCwuNjgzMzMsLjA3MzgyLDBdLDc0OlsuMDk3MjIsLjY4MzMzLC4xODQ3MiwuMTY2NjddLDc1OlswLC42ODMzMywuMDE0NDUsLjA1NTU2XSw3NjpbMCwuNjgzMzMsMCwuMTM4ODldLDc3OlswLC42ODMzMywwLC4xMzg4OV0sNzg6WzAsLjY4MzMzLC4xNDczNiwuMDgzMzRdLDc5OlswLC42ODMzMywuMDI3NzgsLjExMTExXSw4MDpbMCwuNjgzMzMsLjA4MjIyLC4wODMzNF0sODE6Wy4wOTcyMiwuNjgzMzMsMCwuMTExMTFdLDgyOlswLC42ODMzMywwLC4wODMzNF0sODM6WzAsLjY4MzMzLC4wNzUsLjEzODg5XSw4NDpbMCwuNjgzMzMsLjI1NDE3LDBdLDg1OlswLC42ODMzMywuMDk5MzEsLjA4MzM0XSw4NjpbMCwuNjgzMzMsLjA4MjIyLDBdLDg3OlswLC42ODMzMywuMDgyMjIsLjA4MzM0XSw4ODpbMCwuNjgzMzMsLjE0NjQzLC4xMzg4OV0sODk6Wy4wOTcyMiwuNjgzMzMsLjA4MjIyLC4wODMzNF0sOTA6WzAsLjY4MzMzLC4wNzk0NCwuMTM4ODldfSxcIkZyYWt0dXItUmVndWxhclwiOnszMzpbMCwuNjkxNDEsMCwwXSwzNDpbMCwuNjkxNDEsMCwwXSwzODpbMCwuNjkxNDEsMCwwXSwzOTpbMCwuNjkxNDEsMCwwXSw0MDpbLjI0OTgyLC43NDk0NywwLDBdLDQxOlsuMjQ5ODIsLjc0OTQ3LDAsMF0sNDI6WzAsLjYyMTE5LDAsMF0sNDM6Wy4wODMxOSwuNTgyODMsMCwwXSw0NDpbMCwuMTA4MDMsMCwwXSw0NTpbLjA4MzE5LC41ODI4MywwLDBdLDQ2OlswLC4xMDgwMywwLDBdLDQ3OlsuMjQ5ODIsLjc0OTQ3LDAsMF0sNDg6WzAsLjQ3NTM0LDAsMF0sNDk6WzAsLjQ3NTM0LDAsMF0sNTA6WzAsLjQ3NTM0LDAsMF0sNTE6Wy4xODkwNiwuNDc1MzQsMCwwXSw1MjpbLjE4OTA2LC40NzUzNCwwLDBdLDUzOlsuMTg5MDYsLjQ3NTM0LDAsMF0sNTQ6WzAsLjY5MTQxLDAsMF0sNTU6Wy4xODkwNiwuNDc1MzQsMCwwXSw1NjpbMCwuNjkxNDEsMCwwXSw1NzpbLjE4OTA2LC40NzUzNCwwLDBdLDU4OlswLC40NzUzNCwwLDBdLDU5OlsuMTI2MDQsLjQ3NTM0LDAsMF0sNjE6Wy0uMTMwOTksLjM2ODY2LDAsMF0sNjM6WzAsLjY5MTQxLDAsMF0sNjU6WzAsLjY5MTQxLDAsMF0sNjY6WzAsLjY5MTQxLDAsMF0sNjc6WzAsLjY5MTQxLDAsMF0sNjg6WzAsLjY5MTQxLDAsMF0sNjk6WzAsLjY5MTQxLDAsMF0sNzA6Wy4xMjYwNCwuNjkxNDEsMCwwXSw3MTpbMCwuNjkxNDEsMCwwXSw3MjpbLjA2MzAyLC42OTE0MSwwLDBdLDczOlswLC42OTE0MSwwLDBdLDc0OlsuMTI2MDQsLjY5MTQxLDAsMF0sNzU6WzAsLjY5MTQxLDAsMF0sNzY6WzAsLjY5MTQxLDAsMF0sNzc6WzAsLjY5MTQxLDAsMF0sNzg6WzAsLjY5MTQxLDAsMF0sNzk6WzAsLjY5MTQxLDAsMF0sODA6Wy4xODkwNiwuNjkxNDEsMCwwXSw4MTpbLjAzNzgxLC42OTE0MSwwLDBdLDgyOlswLC42OTE0MSwwLDBdLDgzOlswLC42OTE0MSwwLDBdLDg0OlswLC42OTE0MSwwLDBdLDg1OlswLC42OTE0MSwwLDBdLDg2OlswLC42OTE0MSwwLDBdLDg3OlswLC42OTE0MSwwLDBdLDg4OlswLC42OTE0MSwwLDBdLDg5OlsuMTg5MDYsLjY5MTQxLDAsMF0sOTA6Wy4xMjYwNCwuNjkxNDEsMCwwXSw5MTpbLjI0OTgyLC43NDk0NywwLDBdLDkzOlsuMjQ5ODIsLjc0OTQ3LDAsMF0sOTQ6WzAsLjY5MTQxLDAsMF0sOTc6WzAsLjQ3NTM0LDAsMF0sOTg6WzAsLjY5MTQxLDAsMF0sOTk6WzAsLjQ3NTM0LDAsMF0sMTAwOlswLC42MjExOSwwLDBdLDEwMTpbMCwuNDc1MzQsMCwwXSwxMDI6Wy4xODkwNiwuNjkxNDEsMCwwXSwxMDM6Wy4xODkwNiwuNDc1MzQsMCwwXSwxMDQ6Wy4xODkwNiwuNjkxNDEsMCwwXSwxMDU6WzAsLjY5MTQxLDAsMF0sMTA2OlswLC42OTE0MSwwLDBdLDEwNzpbMCwuNjkxNDEsMCwwXSwxMDg6WzAsLjY5MTQxLDAsMF0sMTA5OlswLC40NzUzNCwwLDBdLDExMDpbMCwuNDc1MzQsMCwwXSwxMTE6WzAsLjQ3NTM0LDAsMF0sMTEyOlsuMTg5MDYsLjUyMzk2LDAsMF0sMTEzOlsuMTg5MDYsLjQ3NTM0LDAsMF0sMTE0OlswLC40NzUzNCwwLDBdLDExNTpbMCwuNDc1MzQsMCwwXSwxMTY6WzAsLjYyMTE5LDAsMF0sMTE3OlswLC40NzUzNCwwLDBdLDExODpbMCwuNTIzOTYsMCwwXSwxMTk6WzAsLjUyMzk2LDAsMF0sMTIwOlsuMTg5MDYsLjQ3NTM0LDAsMF0sMTIxOlsuMTg5MDYsLjQ3NTM0LDAsMF0sMTIyOlsuMTg5MDYsLjQ3NTM0LDAsMF0sODIxNjpbMCwuNjkxNDEsMCwwXSw4MjE3OlswLC42OTE0MSwwLDBdLDU4MTEyOlswLC42MjExOSwwLDBdLDU4MTEzOlswLC42MjExOSwwLDBdLDU4MTE0OlsuMTg5MDYsLjY5MTQxLDAsMF0sNTgxMTU6Wy4xODkwNiwuNjkxNDEsMCwwXSw1ODExNjpbLjE4OTA2LC40NzUzNCwwLDBdLDU4MTE3OlswLC42OTE0MSwwLDBdLDU4MTE4OlswLC42MjExOSwwLDBdLDU4MTE5OlswLC40NzUzNCwwLDBdfSxcIk1haW4tQm9sZFwiOnszMzpbMCwuNjk0NDQsMCwwXSwzNDpbMCwuNjk0NDQsMCwwXSwzNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDM2OlsuMDU1NTYsLjc1LDAsMF0sMzc6Wy4wNTU1NiwuNzUsMCwwXSwzODpbMCwuNjk0NDQsMCwwXSwzOTpbMCwuNjk0NDQsMCwwXSw0MDpbLjI1LC43NSwwLDBdLDQxOlsuMjUsLjc1LDAsMF0sNDI6WzAsLjc1LDAsMF0sNDM6Wy4xMzMzMywuNjMzMzMsMCwwXSw0NDpbLjE5NDQ0LC4xNTU1NiwwLDBdLDQ1OlswLC40NDQ0NCwwLDBdLDQ2OlswLC4xNTU1NiwwLDBdLDQ3OlsuMjUsLjc1LDAsMF0sNDg6WzAsLjY0NDQ0LDAsMF0sNDk6WzAsLjY0NDQ0LDAsMF0sNTA6WzAsLjY0NDQ0LDAsMF0sNTE6WzAsLjY0NDQ0LDAsMF0sNTI6WzAsLjY0NDQ0LDAsMF0sNTM6WzAsLjY0NDQ0LDAsMF0sNTQ6WzAsLjY0NDQ0LDAsMF0sNTU6WzAsLjY0NDQ0LDAsMF0sNTY6WzAsLjY0NDQ0LDAsMF0sNTc6WzAsLjY0NDQ0LDAsMF0sNTg6WzAsLjQ0NDQ0LDAsMF0sNTk6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw2MDpbLjA4NTU2LC41ODU1NiwwLDBdLDYxOlstLjEwODg5LC4zOTExMSwwLDBdLDYyOlsuMDg1NTYsLjU4NTU2LDAsMF0sNjM6WzAsLjY5NDQ0LDAsMF0sNjQ6WzAsLjY5NDQ0LDAsMF0sNjU6WzAsLjY4NjExLDAsMF0sNjY6WzAsLjY4NjExLDAsMF0sNjc6WzAsLjY4NjExLDAsMF0sNjg6WzAsLjY4NjExLDAsMF0sNjk6WzAsLjY4NjExLDAsMF0sNzA6WzAsLjY4NjExLDAsMF0sNzE6WzAsLjY4NjExLDAsMF0sNzI6WzAsLjY4NjExLDAsMF0sNzM6WzAsLjY4NjExLDAsMF0sNzQ6WzAsLjY4NjExLDAsMF0sNzU6WzAsLjY4NjExLDAsMF0sNzY6WzAsLjY4NjExLDAsMF0sNzc6WzAsLjY4NjExLDAsMF0sNzg6WzAsLjY4NjExLDAsMF0sNzk6WzAsLjY4NjExLDAsMF0sODA6WzAsLjY4NjExLDAsMF0sODE6Wy4xOTQ0NCwuNjg2MTEsMCwwXSw4MjpbMCwuNjg2MTEsMCwwXSw4MzpbMCwuNjg2MTEsMCwwXSw4NDpbMCwuNjg2MTEsMCwwXSw4NTpbMCwuNjg2MTEsMCwwXSw4NjpbMCwuNjg2MTEsLjAxNTk3LDBdLDg3OlswLC42ODYxMSwuMDE1OTcsMF0sODg6WzAsLjY4NjExLDAsMF0sODk6WzAsLjY4NjExLC4wMjg3NSwwXSw5MDpbMCwuNjg2MTEsMCwwXSw5MTpbLjI1LC43NSwwLDBdLDkyOlsuMjUsLjc1LDAsMF0sOTM6Wy4yNSwuNzUsMCwwXSw5NDpbMCwuNjk0NDQsMCwwXSw5NTpbLjMxLC4xMzQ0NCwuMDMxOTQsMF0sOTY6WzAsLjY5NDQ0LDAsMF0sOTc6WzAsLjQ0NDQ0LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQ0NDQ0LDAsMF0sMTAwOlswLC42OTQ0NCwwLDBdLDEwMTpbMCwuNDQ0NDQsMCwwXSwxMDI6WzAsLjY5NDQ0LC4xMDkwMywwXSwxMDM6Wy4xOTQ0NCwuNDQ0NDQsLjAxNTk3LDBdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY5NDQ0LDAsMF0sMTA2OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMTA3OlswLC42OTQ0NCwwLDBdLDEwODpbMCwuNjk0NDQsMCwwXSwxMDk6WzAsLjQ0NDQ0LDAsMF0sMTEwOlswLC40NDQ0NCwwLDBdLDExMTpbMCwuNDQ0NDQsMCwwXSwxMTI6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTM6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTQ6WzAsLjQ0NDQ0LDAsMF0sMTE1OlswLC40NDQ0NCwwLDBdLDExNjpbMCwuNjM0OTIsMCwwXSwxMTc6WzAsLjQ0NDQ0LDAsMF0sMTE4OlswLC40NDQ0NCwuMDE1OTcsMF0sMTE5OlswLC40NDQ0NCwuMDE1OTcsMF0sMTIwOlswLC40NDQ0NCwwLDBdLDEyMTpbLjE5NDQ0LC40NDQ0NCwuMDE1OTcsMF0sMTIyOlswLC40NDQ0NCwwLDBdLDEyMzpbLjI1LC43NSwwLDBdLDEyNDpbLjI1LC43NSwwLDBdLDEyNTpbLjI1LC43NSwwLDBdLDEyNjpbLjM1LC4zNDQ0NCwwLDBdLDE2ODpbMCwuNjk0NDQsMCwwXSwxNzI6WzAsLjQ0NDQ0LDAsMF0sMTc1OlswLC41OTYxMSwwLDBdLDE3NjpbMCwuNjk0NDQsMCwwXSwxNzc6Wy4xMzMzMywuNjMzMzMsMCwwXSwxODA6WzAsLjY5NDQ0LDAsMF0sMjE1OlsuMTMzMzMsLjYzMzMzLDAsMF0sMjQ3OlsuMTMzMzMsLjYzMzMzLDAsMF0sMzA1OlswLC40NDQ0NCwwLDBdLDU2NzpbLjE5NDQ0LC40NDQ0NCwwLDBdLDcxMDpbMCwuNjk0NDQsMCwwXSw3MTE6WzAsLjYzMTk0LDAsMF0sNzEzOlswLC41OTYxMSwwLDBdLDcxNDpbMCwuNjk0NDQsMCwwXSw3MTU6WzAsLjY5NDQ0LDAsMF0sNzI4OlswLC42OTQ0NCwwLDBdLDcyOTpbMCwuNjk0NDQsMCwwXSw3MzA6WzAsLjY5NDQ0LDAsMF0sNzMyOlswLC42OTQ0NCwwLDBdLDc2ODpbMCwuNjk0NDQsMCwwXSw3Njk6WzAsLjY5NDQ0LDAsMF0sNzcwOlswLC42OTQ0NCwwLDBdLDc3MTpbMCwuNjk0NDQsMCwwXSw3NzI6WzAsLjU5NjExLDAsMF0sNzc0OlswLC42OTQ0NCwwLDBdLDc3NTpbMCwuNjk0NDQsMCwwXSw3NzY6WzAsLjY5NDQ0LDAsMF0sNzc4OlswLC42OTQ0NCwwLDBdLDc3OTpbMCwuNjk0NDQsMCwwXSw3ODA6WzAsLjYzMTk0LDAsMF0sODI0OlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTE1OlswLC42ODYxMSwwLDBdLDkxNjpbMCwuNjg2MTEsMCwwXSw5MjA6WzAsLjY4NjExLDAsMF0sOTIzOlswLC42ODYxMSwwLDBdLDkyNjpbMCwuNjg2MTEsMCwwXSw5Mjg6WzAsLjY4NjExLDAsMF0sOTMxOlswLC42ODYxMSwwLDBdLDkzMzpbMCwuNjg2MTEsMCwwXSw5MzQ6WzAsLjY4NjExLDAsMF0sOTM2OlswLC42ODYxMSwwLDBdLDkzNzpbMCwuNjg2MTEsMCwwXSw4MjExOlswLC40NDQ0NCwuMDMxOTQsMF0sODIxMjpbMCwuNDQ0NDQsLjAzMTk0LDBdLDgyMTY6WzAsLjY5NDQ0LDAsMF0sODIxNzpbMCwuNjk0NDQsMCwwXSw4MjIwOlswLC42OTQ0NCwwLDBdLDgyMjE6WzAsLjY5NDQ0LDAsMF0sODIyNDpbLjE5NDQ0LC42OTQ0NCwwLDBdLDgyMjU6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4MjQyOlswLC41NTU1NiwwLDBdLDg0MDc6WzAsLjcyNDQ0LC4xNTQ4NiwwXSw4NDYzOlswLC42OTQ0NCwwLDBdLDg0NjU6WzAsLjY5NDQ0LDAsMF0sODQ2NzpbMCwuNjk0NDQsMCwwXSw4NDcyOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sODQ3NjpbMCwuNjk0NDQsMCwwXSw4NTAxOlswLC42OTQ0NCwwLDBdLDg1OTI6Wy0uMTA4ODksLjM5MTExLDAsMF0sODU5MzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTQ6Wy0uMTA4ODksLjM5MTExLDAsMF0sODU5NTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTY6Wy0uMTA4ODksLjM5MTExLDAsMF0sODU5NzpbLjI1LC43NSwwLDBdLDg1OTg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NTk5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODYwMDpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2MDE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjM2OlstLjEwODg5LC4zOTExMSwwLDBdLDg2Mzc6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY0MDpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NjQxOlstLjEwODg5LC4zOTExMSwwLDBdLDg2NTY6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY1NzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2NTg6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY1OTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2NjA6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY2MTpbLjI1LC43NSwwLDBdLDg3MDQ6WzAsLjY5NDQ0LDAsMF0sODcwNjpbMCwuNjk0NDQsLjA2Mzg5LDBdLDg3MDc6WzAsLjY5NDQ0LDAsMF0sODcwOTpbLjA1NTU2LC43NSwwLDBdLDg3MTE6WzAsLjY4NjExLDAsMF0sODcxMjpbLjA4NTU2LC41ODU1NiwwLDBdLDg3MTU6Wy4wODU1NiwuNTg1NTYsMCwwXSw4NzIyOlsuMTMzMzMsLjYzMzMzLDAsMF0sODcyMzpbLjEzMzMzLC42MzMzMywwLDBdLDg3MjU6Wy4yNSwuNzUsMCwwXSw4NzI2OlsuMjUsLjc1LDAsMF0sODcyNzpbLS4wMjc3OCwuNDcyMjIsMCwwXSw4NzI4OlstLjAyNjM5LC40NzM2MSwwLDBdLDg3Mjk6Wy0uMDI2MzksLjQ3MzYxLDAsMF0sODczMDpbLjE4LC44MiwwLDBdLDg3MzM6WzAsLjQ0NDQ0LDAsMF0sODczNDpbMCwuNDQ0NDQsMCwwXSw4NzM2OlswLC42OTIyNCwwLDBdLDg3Mzk6Wy4yNSwuNzUsMCwwXSw4NzQxOlsuMjUsLjc1LDAsMF0sODc0MzpbMCwuNTU1NTYsMCwwXSw4NzQ0OlswLC41NTU1NiwwLDBdLDg3NDU6WzAsLjU1NTU2LDAsMF0sODc0NjpbMCwuNTU1NTYsMCwwXSw4NzQ3OlsuMTk0NDQsLjY5NDQ0LC4xMjc3OCwwXSw4NzY0OlstLjEwODg5LC4zOTExMSwwLDBdLDg3Njg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NzcxOlsuMDAyMjIsLjUwMjIyLDAsMF0sODc3NjpbLjAyNDQ0LC41MjQ0NCwwLDBdLDg3ODE6Wy4wMDIyMiwuNTAyMjIsMCwwXSw4ODAxOlsuMDAyMjIsLjUwMjIyLDAsMF0sODgwNDpbLjE5NjY3LC42OTY2NywwLDBdLDg4MDU6Wy4xOTY2NywuNjk2NjcsMCwwXSw4ODEwOlsuMDg1NTYsLjU4NTU2LDAsMF0sODgxMTpbLjA4NTU2LC41ODU1NiwwLDBdLDg4MjY6Wy4wODU1NiwuNTg1NTYsMCwwXSw4ODI3OlsuMDg1NTYsLjU4NTU2LDAsMF0sODgzNDpbLjA4NTU2LC41ODU1NiwwLDBdLDg4MzU6Wy4wODU1NiwuNTg1NTYsMCwwXSw4ODM4OlsuMTk2NjcsLjY5NjY3LDAsMF0sODgzOTpbLjE5NjY3LC42OTY2NywwLDBdLDg4NDY6WzAsLjU1NTU2LDAsMF0sODg0OTpbLjE5NjY3LC42OTY2NywwLDBdLDg4NTA6Wy4xOTY2NywuNjk2NjcsMCwwXSw4ODUxOlswLC41NTU1NiwwLDBdLDg4NTI6WzAsLjU1NTU2LDAsMF0sODg1MzpbLjEzMzMzLC42MzMzMywwLDBdLDg4NTQ6Wy4xMzMzMywuNjMzMzMsMCwwXSw4ODU1OlsuMTMzMzMsLjYzMzMzLDAsMF0sODg1NjpbLjEzMzMzLC42MzMzMywwLDBdLDg4NTc6Wy4xMzMzMywuNjMzMzMsMCwwXSw4ODY2OlswLC42OTQ0NCwwLDBdLDg4Njc6WzAsLjY5NDQ0LDAsMF0sODg2ODpbMCwuNjk0NDQsMCwwXSw4ODY5OlswLC42OTQ0NCwwLDBdLDg5MDA6Wy0uMDI2MzksLjQ3MzYxLDAsMF0sODkwMTpbLS4wMjYzOSwuNDczNjEsMCwwXSw4OTAyOlstLjAyNzc4LC40NzIyMiwwLDBdLDg5Njg6Wy4yNSwuNzUsMCwwXSw4OTY5OlsuMjUsLjc1LDAsMF0sODk3MDpbLjI1LC43NSwwLDBdLDg5NzE6Wy4yNSwuNzUsMCwwXSw4OTk0OlstLjEzODg5LC4zNjExMSwwLDBdLDg5OTU6Wy0uMTM4ODksLjM2MTExLDAsMF0sOTY1MTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk2NTc6Wy0uMDI3NzgsLjQ3MjIyLDAsMF0sOTY2MTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk2Njc6Wy0uMDI3NzgsLjQ3MjIyLDAsMF0sOTcxMTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk4MjQ6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODI1OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgyNjpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4Mjc6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODM3OlswLC43NSwwLDBdLDk4Mzg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5ODM5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMTAyMTY6Wy4yNSwuNzUsMCwwXSwxMDIxNzpbLjI1LC43NSwwLDBdLDEwODE1OlswLC42ODYxMSwwLDBdLDEwOTI3OlsuMTk2NjcsLjY5NjY3LDAsMF0sMTA5Mjg6Wy4xOTY2NywuNjk2NjcsMCwwXX0sXCJNYWluLUl0YWxpY1wiOnszMzpbMCwuNjk0NDQsLjEyNDE3LDBdLDM0OlswLC42OTQ0NCwuMDY5NjEsMF0sMzU6Wy4xOTQ0NCwuNjk0NDQsLjA2NjE2LDBdLDM3OlsuMDU1NTYsLjc1LC4xMzYzOSwwXSwzODpbMCwuNjk0NDQsLjA5Njk0LDBdLDM5OlswLC42OTQ0NCwuMTI0MTcsMF0sNDA6Wy4yNSwuNzUsLjE2MTk0LDBdLDQxOlsuMjUsLjc1LC4wMzY5NCwwXSw0MjpbMCwuNzUsLjE0OTE3LDBdLDQzOlsuMDU2NjcsLjU2MTY3LC4wMzY5NCwwXSw0NDpbLjE5NDQ0LC4xMDU1NiwwLDBdLDQ1OlswLC40MzA1NiwuMDI4MjYsMF0sNDY6WzAsLjEwNTU2LDAsMF0sNDc6Wy4yNSwuNzUsLjE2MTk0LDBdLDQ4OlswLC42NDQ0NCwuMTM1NTYsMF0sNDk6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1MDpbMCwuNjQ0NDQsLjEzNTU2LDBdLDUxOlswLC42NDQ0NCwuMTM1NTYsMF0sNTI6Wy4xOTQ0NCwuNjQ0NDQsLjEzNTU2LDBdLDUzOlswLC42NDQ0NCwuMTM1NTYsMF0sNTQ6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1NTpbLjE5NDQ0LC42NDQ0NCwuMTM1NTYsMF0sNTY6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1NzpbMCwuNjQ0NDQsLjEzNTU2LDBdLDU4OlswLC40MzA1NiwuMDU4MiwwXSw1OTpbLjE5NDQ0LC40MzA1NiwuMDU4MiwwXSw2MTpbLS4xMzMxMywuMzY2ODcsLjA2NjE2LDBdLDYzOlswLC42OTQ0NCwuMTIyNSwwXSw2NDpbMCwuNjk0NDQsLjA5NTk3LDBdLDY1OlswLC42ODMzMywwLDBdLDY2OlswLC42ODMzMywuMTAyNTcsMF0sNjc6WzAsLjY4MzMzLC4xNDUyOCwwXSw2ODpbMCwuNjgzMzMsLjA5NDAzLDBdLDY5OlswLC42ODMzMywuMTIwMjgsMF0sNzA6WzAsLjY4MzMzLC4xMzMwNSwwXSw3MTpbMCwuNjgzMzMsLjA4NzIyLDBdLDcyOlswLC42ODMzMywuMTYzODksMF0sNzM6WzAsLjY4MzMzLC4xNTgwNiwwXSw3NDpbMCwuNjgzMzMsLjE0MDI4LDBdLDc1OlswLC42ODMzMywuMTQ1MjgsMF0sNzY6WzAsLjY4MzMzLDAsMF0sNzc6WzAsLjY4MzMzLC4xNjM4OSwwXSw3ODpbMCwuNjgzMzMsLjE2Mzg5LDBdLDc5OlswLC42ODMzMywuMDk0MDMsMF0sODA6WzAsLjY4MzMzLC4xMDI1NywwXSw4MTpbLjE5NDQ0LC42ODMzMywuMDk0MDMsMF0sODI6WzAsLjY4MzMzLC4wMzg2OCwwXSw4MzpbMCwuNjgzMzMsLjExOTcyLDBdLDg0OlswLC42ODMzMywuMTMzMDUsMF0sODU6WzAsLjY4MzMzLC4xNjM4OSwwXSw4NjpbMCwuNjgzMzMsLjE4MzYxLDBdLDg3OlswLC42ODMzMywuMTgzNjEsMF0sODg6WzAsLjY4MzMzLC4xNTgwNiwwXSw4OTpbMCwuNjgzMzMsLjE5MzgzLDBdLDkwOlswLC42ODMzMywuMTQ1MjgsMF0sOTE6Wy4yNSwuNzUsLjE4NzUsMF0sOTM6Wy4yNSwuNzUsLjEwNTI4LDBdLDk0OlswLC42OTQ0NCwuMDY2NDYsMF0sOTU6Wy4zMSwuMTIwNTYsLjA5MjA4LDBdLDk3OlswLC40MzA1NiwuMDc2NzEsMF0sOTg6WzAsLjY5NDQ0LC4wNjMxMiwwXSw5OTpbMCwuNDMwNTYsLjA1NjUzLDBdLDEwMDpbMCwuNjk0NDQsLjEwMzMzLDBdLDEwMTpbMCwuNDMwNTYsLjA3NTE0LDBdLDEwMjpbLjE5NDQ0LC42OTQ0NCwuMjExOTQsMF0sMTAzOlsuMTk0NDQsLjQzMDU2LC4wODg0NywwXSwxMDQ6WzAsLjY5NDQ0LC4wNzY3MSwwXSwxMDU6WzAsLjY1NTM2LC4xMDE5LDBdLDEwNjpbLjE5NDQ0LC42NTUzNiwuMTQ0NjcsMF0sMTA3OlswLC42OTQ0NCwuMTA3NjQsMF0sMTA4OlswLC42OTQ0NCwuMTAzMzMsMF0sMTA5OlswLC40MzA1NiwuMDc2NzEsMF0sMTEwOlswLC40MzA1NiwuMDc2NzEsMF0sMTExOlswLC40MzA1NiwuMDYzMTIsMF0sMTEyOlsuMTk0NDQsLjQzMDU2LC4wNjMxMiwwXSwxMTM6Wy4xOTQ0NCwuNDMwNTYsLjA4ODQ3LDBdLDExNDpbMCwuNDMwNTYsLjEwNzY0LDBdLDExNTpbMCwuNDMwNTYsLjA4MjA4LDBdLDExNjpbMCwuNjE1MDgsLjA5NDg2LDBdLDExNzpbMCwuNDMwNTYsLjA3NjcxLDBdLDExODpbMCwuNDMwNTYsLjEwNzY0LDBdLDExOTpbMCwuNDMwNTYsLjEwNzY0LDBdLDEyMDpbMCwuNDMwNTYsLjEyMDQyLDBdLDEyMTpbLjE5NDQ0LC40MzA1NiwuMDg4NDcsMF0sMTIyOlswLC40MzA1NiwuMTIyOTIsMF0sMTI2OlsuMzUsLjMxNzg2LC4xMTU4NSwwXSwxNjM6WzAsLjY5NDQ0LDAsMF0sMzA1OlswLC40MzA1NiwwLC4wMjc3OF0sNTY3OlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw3Njg6WzAsLjY5NDQ0LDAsMF0sNzY5OlswLC42OTQ0NCwuMDk2OTQsMF0sNzcwOlswLC42OTQ0NCwuMDY2NDYsMF0sNzcxOlswLC42Njc4NiwuMTE1ODUsMF0sNzcyOlswLC41NjE2NywuMTAzMzMsMF0sNzc0OlswLC42OTQ0NCwuMTA4MDYsMF0sNzc1OlswLC42Njc4NiwuMTE3NTIsMF0sNzc2OlswLC42Njc4NiwuMTA0NzQsMF0sNzc4OlswLC42OTQ0NCwwLDBdLDc3OTpbMCwuNjk0NDQsLjEyMjUsMF0sNzgwOlswLC42Mjg0NywuMDgyOTUsMF0sOTE1OlswLC42ODMzMywuMTMzMDUsMF0sOTE2OlswLC42ODMzMywwLDBdLDkyMDpbMCwuNjgzMzMsLjA5NDAzLDBdLDkyMzpbMCwuNjgzMzMsMCwwXSw5MjY6WzAsLjY4MzMzLC4xNTI5NCwwXSw5Mjg6WzAsLjY4MzMzLC4xNjM4OSwwXSw5MzE6WzAsLjY4MzMzLC4xMjAyOCwwXSw5MzM6WzAsLjY4MzMzLC4xMTExMSwwXSw5MzQ6WzAsLjY4MzMzLC4wNTk4NiwwXSw5MzY6WzAsLjY4MzMzLC4xMTExMSwwXSw5Mzc6WzAsLjY4MzMzLC4xMDI1NywwXSw4MjExOlswLC40MzA1NiwuMDkyMDgsMF0sODIxMjpbMCwuNDMwNTYsLjA5MjA4LDBdLDgyMTY6WzAsLjY5NDQ0LC4xMjQxNywwXSw4MjE3OlswLC42OTQ0NCwuMTI0MTcsMF0sODIyMDpbMCwuNjk0NDQsLjE2ODUsMF0sODIyMTpbMCwuNjk0NDQsLjA2OTYxLDBdLDg0NjM6WzAsLjY4ODg5LDAsMF19LFwiTWFpbi1SZWd1bGFyXCI6ezMyOlswLDAsMCwwXSwzMzpbMCwuNjk0NDQsMCwwXSwzNDpbMCwuNjk0NDQsMCwwXSwzNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDM2OlsuMDU1NTYsLjc1LDAsMF0sMzc6Wy4wNTU1NiwuNzUsMCwwXSwzODpbMCwuNjk0NDQsMCwwXSwzOTpbMCwuNjk0NDQsMCwwXSw0MDpbLjI1LC43NSwwLDBdLDQxOlsuMjUsLjc1LDAsMF0sNDI6WzAsLjc1LDAsMF0sNDM6Wy4wODMzMywuNTgzMzMsMCwwXSw0NDpbLjE5NDQ0LC4xMDU1NiwwLDBdLDQ1OlswLC40MzA1NiwwLDBdLDQ2OlswLC4xMDU1NiwwLDBdLDQ3OlsuMjUsLjc1LDAsMF0sNDg6WzAsLjY0NDQ0LDAsMF0sNDk6WzAsLjY0NDQ0LDAsMF0sNTA6WzAsLjY0NDQ0LDAsMF0sNTE6WzAsLjY0NDQ0LDAsMF0sNTI6WzAsLjY0NDQ0LDAsMF0sNTM6WzAsLjY0NDQ0LDAsMF0sNTQ6WzAsLjY0NDQ0LDAsMF0sNTU6WzAsLjY0NDQ0LDAsMF0sNTY6WzAsLjY0NDQ0LDAsMF0sNTc6WzAsLjY0NDQ0LDAsMF0sNTg6WzAsLjQzMDU2LDAsMF0sNTk6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw2MDpbLjAzOTEsLjUzOTEsMCwwXSw2MTpbLS4xMzMxMywuMzY2ODcsMCwwXSw2MjpbLjAzOTEsLjUzOTEsMCwwXSw2MzpbMCwuNjk0NDQsMCwwXSw2NDpbMCwuNjk0NDQsMCwwXSw2NTpbMCwuNjgzMzMsMCwwXSw2NjpbMCwuNjgzMzMsMCwwXSw2NzpbMCwuNjgzMzMsMCwwXSw2ODpbMCwuNjgzMzMsMCwwXSw2OTpbMCwuNjgzMzMsMCwwXSw3MDpbMCwuNjgzMzMsMCwwXSw3MTpbMCwuNjgzMzMsMCwwXSw3MjpbMCwuNjgzMzMsMCwwXSw3MzpbMCwuNjgzMzMsMCwwXSw3NDpbMCwuNjgzMzMsMCwwXSw3NTpbMCwuNjgzMzMsMCwwXSw3NjpbMCwuNjgzMzMsMCwwXSw3NzpbMCwuNjgzMzMsMCwwXSw3ODpbMCwuNjgzMzMsMCwwXSw3OTpbMCwuNjgzMzMsMCwwXSw4MDpbMCwuNjgzMzMsMCwwXSw4MTpbLjE5NDQ0LC42ODMzMywwLDBdLDgyOlswLC42ODMzMywwLDBdLDgzOlswLC42ODMzMywwLDBdLDg0OlswLC42ODMzMywwLDBdLDg1OlswLC42ODMzMywwLDBdLDg2OlswLC42ODMzMywuMDEzODksMF0sODc6WzAsLjY4MzMzLC4wMTM4OSwwXSw4ODpbMCwuNjgzMzMsMCwwXSw4OTpbMCwuNjgzMzMsLjAyNSwwXSw5MDpbMCwuNjgzMzMsMCwwXSw5MTpbLjI1LC43NSwwLDBdLDkyOlsuMjUsLjc1LDAsMF0sOTM6Wy4yNSwuNzUsMCwwXSw5NDpbMCwuNjk0NDQsMCwwXSw5NTpbLjMxLC4xMjA1NiwuMDI3NzgsMF0sOTY6WzAsLjY5NDQ0LDAsMF0sOTc6WzAsLjQzMDU2LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQzMDU2LDAsMF0sMTAwOlswLC42OTQ0NCwwLDBdLDEwMTpbMCwuNDMwNTYsMCwwXSwxMDI6WzAsLjY5NDQ0LC4wNzc3OCwwXSwxMDM6Wy4xOTQ0NCwuNDMwNTYsLjAxMzg5LDBdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY2Nzg2LDAsMF0sMTA2OlsuMTk0NDQsLjY2Nzg2LDAsMF0sMTA3OlswLC42OTQ0NCwwLDBdLDEwODpbMCwuNjk0NDQsMCwwXSwxMDk6WzAsLjQzMDU2LDAsMF0sMTEwOlswLC40MzA1NiwwLDBdLDExMTpbMCwuNDMwNTYsMCwwXSwxMTI6Wy4xOTQ0NCwuNDMwNTYsMCwwXSwxMTM6Wy4xOTQ0NCwuNDMwNTYsMCwwXSwxMTQ6WzAsLjQzMDU2LDAsMF0sMTE1OlswLC40MzA1NiwwLDBdLDExNjpbMCwuNjE1MDgsMCwwXSwxMTc6WzAsLjQzMDU2LDAsMF0sMTE4OlswLC40MzA1NiwuMDEzODksMF0sMTE5OlswLC40MzA1NiwuMDEzODksMF0sMTIwOlswLC40MzA1NiwwLDBdLDEyMTpbLjE5NDQ0LC40MzA1NiwuMDEzODksMF0sMTIyOlswLC40MzA1NiwwLDBdLDEyMzpbLjI1LC43NSwwLDBdLDEyNDpbLjI1LC43NSwwLDBdLDEyNTpbLjI1LC43NSwwLDBdLDEyNjpbLjM1LC4zMTc4NiwwLDBdLDE2MDpbMCwwLDAsMF0sMTY4OlswLC42Njc4NiwwLDBdLDE3MjpbMCwuNDMwNTYsMCwwXSwxNzU6WzAsLjU2Nzc4LDAsMF0sMTc2OlswLC42OTQ0NCwwLDBdLDE3NzpbLjA4MzMzLC41ODMzMywwLDBdLDE4MDpbMCwuNjk0NDQsMCwwXSwyMTU6Wy4wODMzMywuNTgzMzMsMCwwXSwyNDc6Wy4wODMzMywuNTgzMzMsMCwwXSwzMDU6WzAsLjQzMDU2LDAsMF0sNTY3OlsuMTk0NDQsLjQzMDU2LDAsMF0sNzEwOlswLC42OTQ0NCwwLDBdLDcxMTpbMCwuNjI4NDcsMCwwXSw3MTM6WzAsLjU2Nzc4LDAsMF0sNzE0OlswLC42OTQ0NCwwLDBdLDcxNTpbMCwuNjk0NDQsMCwwXSw3Mjg6WzAsLjY5NDQ0LDAsMF0sNzI5OlswLC42Njc4NiwwLDBdLDczMDpbMCwuNjk0NDQsMCwwXSw3MzI6WzAsLjY2Nzg2LDAsMF0sNzY4OlswLC42OTQ0NCwwLDBdLDc2OTpbMCwuNjk0NDQsMCwwXSw3NzA6WzAsLjY5NDQ0LDAsMF0sNzcxOlswLC42Njc4NiwwLDBdLDc3MjpbMCwuNTY3NzgsMCwwXSw3NzQ6WzAsLjY5NDQ0LDAsMF0sNzc1OlswLC42Njc4NiwwLDBdLDc3NjpbMCwuNjY3ODYsMCwwXSw3Nzg6WzAsLjY5NDQ0LDAsMF0sNzc5OlswLC42OTQ0NCwwLDBdLDc4MDpbMCwuNjI4NDcsMCwwXSw4MjQ6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5MTU6WzAsLjY4MzMzLDAsMF0sOTE2OlswLC42ODMzMywwLDBdLDkyMDpbMCwuNjgzMzMsMCwwXSw5MjM6WzAsLjY4MzMzLDAsMF0sOTI2OlswLC42ODMzMywwLDBdLDkyODpbMCwuNjgzMzMsMCwwXSw5MzE6WzAsLjY4MzMzLDAsMF0sOTMzOlswLC42ODMzMywwLDBdLDkzNDpbMCwuNjgzMzMsMCwwXSw5MzY6WzAsLjY4MzMzLDAsMF0sOTM3OlswLC42ODMzMywwLDBdLDgyMTE6WzAsLjQzMDU2LC4wMjc3OCwwXSw4MjEyOlswLC40MzA1NiwuMDI3NzgsMF0sODIxNjpbMCwuNjk0NDQsMCwwXSw4MjE3OlswLC42OTQ0NCwwLDBdLDgyMjA6WzAsLjY5NDQ0LDAsMF0sODIyMTpbMCwuNjk0NDQsMCwwXSw4MjI0OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODIyNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDgyMzA6WzAsLjEyLDAsMF0sODI0MjpbMCwuNTU1NTYsMCwwXSw4NDA3OlswLC43MTQ0NCwuMTUzODIsMF0sODQ2MzpbMCwuNjg4ODksMCwwXSw4NDY1OlswLC42OTQ0NCwwLDBdLDg0Njc6WzAsLjY5NDQ0LDAsLjExMTExXSw4NDcyOlsuMTk0NDQsLjQzMDU2LDAsLjExMTExXSw4NDc2OlswLC42OTQ0NCwwLDBdLDg1MDE6WzAsLjY5NDQ0LDAsMF0sODU5MjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NTkzOlsuMTk0NDQsLjY5NDQ0LDAsMF0sODU5NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NTk1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODU5NjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NTk3OlsuMjUsLjc1LDAsMF0sODU5ODpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTk6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjAwOlsuMTk0NDQsLjY5NDQ0LDAsMF0sODYwMTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2MTQ6Wy4wMTEsLjUxMSwwLDBdLDg2MTc6Wy4wMTEsLjUxMSwwLDBdLDg2MTg6Wy4wMTEsLjUxMSwwLDBdLDg2MzY6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODYzNzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjQwOlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NDE6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY1MjpbLjAxMSwuNjcxLDAsMF0sODY1NjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU3OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODY1ODpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODY2MDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjYxOlsuMjUsLjc1LDAsMF0sODcwNDpbMCwuNjk0NDQsMCwwXSw4NzA2OlswLC42OTQ0NCwuMDU1NTYsLjA4MzM0XSw4NzA3OlswLC42OTQ0NCwwLDBdLDg3MDk6Wy4wNTU1NiwuNzUsMCwwXSw4NzExOlswLC42ODMzMywwLDBdLDg3MTI6Wy4wMzkxLC41MzkxLDAsMF0sODcxNTpbLjAzOTEsLjUzOTEsMCwwXSw4NzIyOlsuMDgzMzMsLjU4MzMzLDAsMF0sODcyMzpbLjA4MzMzLC41ODMzMywwLDBdLDg3MjU6Wy4yNSwuNzUsMCwwXSw4NzI2OlsuMjUsLjc1LDAsMF0sODcyNzpbLS4wMzQ3MiwuNDY1MjgsMCwwXSw4NzI4OlstLjA1NTU1LC40NDQ0NSwwLDBdLDg3Mjk6Wy0uMDU1NTUsLjQ0NDQ1LDAsMF0sODczMDpbLjIsLjgsMCwwXSw4NzMzOlswLC40MzA1NiwwLDBdLDg3MzQ6WzAsLjQzMDU2LDAsMF0sODczNjpbMCwuNjkyMjQsMCwwXSw4NzM5OlsuMjUsLjc1LDAsMF0sODc0MTpbLjI1LC43NSwwLDBdLDg3NDM6WzAsLjU1NTU2LDAsMF0sODc0NDpbMCwuNTU1NTYsMCwwXSw4NzQ1OlswLC41NTU1NiwwLDBdLDg3NDY6WzAsLjU1NTU2LDAsMF0sODc0NzpbLjE5NDQ0LC42OTQ0NCwuMTExMTEsMF0sODc2NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NzY4OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODc3MTpbLS4wMzYyNSwuNDYzNzUsMCwwXSw4NzczOlstLjAyMiwuNTg5LDAsMF0sODc3NjpbLS4wMTY4OCwuNDgzMTIsMCwwXSw4NzgxOlstLjAzNjI1LC40NjM3NSwwLDBdLDg3ODQ6Wy0uMTMzLC42NywwLDBdLDg4MDA6Wy4yMTUsLjcxNiwwLDBdLDg4MDE6Wy0uMDM2MjUsLjQ2Mzc1LDAsMF0sODgwNDpbLjEzNTk3LC42MzU5NywwLDBdLDg4MDU6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODEwOlsuMDM5MSwuNTM5MSwwLDBdLDg4MTE6Wy4wMzkxLC41MzkxLDAsMF0sODgyNjpbLjAzOTEsLjUzOTEsMCwwXSw4ODI3OlsuMDM5MSwuNTM5MSwwLDBdLDg4MzQ6Wy4wMzkxLC41MzkxLDAsMF0sODgzNTpbLjAzOTEsLjUzOTEsMCwwXSw4ODM4OlsuMTM1OTcsLjYzNTk3LDAsMF0sODgzOTpbLjEzNTk3LC42MzU5NywwLDBdLDg4NDY6WzAsLjU1NTU2LDAsMF0sODg0OTpbLjEzNTk3LC42MzU5NywwLDBdLDg4NTA6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODUxOlswLC41NTU1NiwwLDBdLDg4NTI6WzAsLjU1NTU2LDAsMF0sODg1MzpbLjA4MzMzLC41ODMzMywwLDBdLDg4NTQ6Wy4wODMzMywuNTgzMzMsMCwwXSw4ODU1OlsuMDgzMzMsLjU4MzMzLDAsMF0sODg1NjpbLjA4MzMzLC41ODMzMywwLDBdLDg4NTc6Wy4wODMzMywuNTgzMzMsMCwwXSw4ODY2OlswLC42OTQ0NCwwLDBdLDg4Njc6WzAsLjY5NDQ0LDAsMF0sODg2ODpbMCwuNjk0NDQsMCwwXSw4ODY5OlswLC42OTQ0NCwwLDBdLDg4NzI6Wy4yNDksLjc1LDAsMF0sODkwMDpbLS4wNTU1NSwuNDQ0NDUsMCwwXSw4OTAxOlstLjA1NTU1LC40NDQ0NSwwLDBdLDg5MDI6Wy0uMDM0NzIsLjQ2NTI4LDAsMF0sODkwNDpbLjAwNSwuNTA1LDAsMF0sODk0MjpbLjAzLC45LDAsMF0sODk0MzpbLS4xOSwuMzEsMCwwXSw4OTQ1OlstLjEsLjgyLDAsMF0sODk2ODpbLjI1LC43NSwwLDBdLDg5Njk6Wy4yNSwuNzUsMCwwXSw4OTcwOlsuMjUsLjc1LDAsMF0sODk3MTpbLjI1LC43NSwwLDBdLDg5OTQ6Wy0uMTQyMzYsLjM1NzY0LDAsMF0sODk5NTpbLS4xNDIzNiwuMzU3NjQsMCwwXSw5MTM2OlsuMjQ0LC43NDQsMCwwXSw5MTM3OlsuMjQ0LC43NDQsMCwwXSw5NjUxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTY1NzpbLS4wMzQ3MiwuNDY1MjgsMCwwXSw5NjYxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTY2NzpbLS4wMzQ3MiwuNDY1MjgsMCwwXSw5NzExOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTgyNDpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4MjU6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODI2OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgyNzpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4Mzc6WzAsLjc1LDAsMF0sOTgzODpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk4Mzk6Wy4xOTQ0NCwuNjk0NDQsMCwwXSwxMDIxNjpbLjI1LC43NSwwLDBdLDEwMjE3OlsuMjUsLjc1LDAsMF0sMTAyMjI6Wy4yNDQsLjc0NCwwLDBdLDEwMjIzOlsuMjQ0LC43NDQsMCwwXSwxMDIyOTpbLjAxMSwuNTExLDAsMF0sMTAyMzA6Wy4wMTEsLjUxMSwwLDBdLDEwMjMxOlsuMDExLC41MTEsMCwwXSwxMDIzMjpbLjAyNCwuNTI1LDAsMF0sMTAyMzM6Wy4wMjQsLjUyNSwwLDBdLDEwMjM0OlsuMDI0LC41MjUsMCwwXSwxMDIzNjpbLjAxMSwuNTExLDAsMF0sMTA4MTU6WzAsLjY4MzMzLDAsMF0sMTA5Mjc6Wy4xMzU5NywuNjM1OTcsMCwwXSwxMDkyODpbLjEzNTk3LC42MzU5NywwLDBdfSxcIk1hdGgtQm9sZEl0YWxpY1wiOns0NzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDY1OlswLC42ODYxMSwwLDBdLDY2OlswLC42ODYxMSwuMDQ4MzUsMF0sNjc6WzAsLjY4NjExLC4wNjk3OSwwXSw2ODpbMCwuNjg2MTEsLjAzMTk0LDBdLDY5OlswLC42ODYxMSwuMDU0NTEsMF0sNzA6WzAsLjY4NjExLC4xNTk3MiwwXSw3MTpbMCwuNjg2MTEsMCwwXSw3MjpbMCwuNjg2MTEsLjA4MjI5LDBdLDczOlswLC42ODYxMSwuMDc3NzgsMF0sNzQ6WzAsLjY4NjExLC4xMDA2OSwwXSw3NTpbMCwuNjg2MTEsLjA2OTc5LDBdLDc2OlswLC42ODYxMSwwLDBdLDc3OlswLC42ODYxMSwuMTE0MjQsMF0sNzg6WzAsLjY4NjExLC4xMTQyNCwwXSw3OTpbMCwuNjg2MTEsLjAzMTk0LDBdLDgwOlswLC42ODYxMSwuMTU5NzIsMF0sODE6Wy4xOTQ0NCwuNjg2MTEsMCwwXSw4MjpbMCwuNjg2MTEsLjAwNDIxLDBdLDgzOlswLC42ODYxMSwuMDUzODIsMF0sODQ6WzAsLjY4NjExLC4xNTk3MiwwXSw4NTpbMCwuNjg2MTEsLjExNDI0LDBdLDg2OlswLC42ODYxMSwuMjU1NTUsMF0sODc6WzAsLjY4NjExLC4xNTk3MiwwXSw4ODpbMCwuNjg2MTEsLjA3Nzc4LDBdLDg5OlswLC42ODYxMSwuMjU1NTUsMF0sOTA6WzAsLjY4NjExLC4wNjk3OSwwXSw5NzpbMCwuNDQ0NDQsMCwwXSw5ODpbMCwuNjk0NDQsMCwwXSw5OTpbMCwuNDQ0NDQsMCwwXSwxMDA6WzAsLjY5NDQ0LDAsMF0sMTAxOlswLC40NDQ0NCwwLDBdLDEwMjpbLjE5NDQ0LC42OTQ0NCwuMTEwNDIsMF0sMTAzOlsuMTk0NDQsLjQ0NDQ0LC4wMzcwNCwwXSwxMDQ6WzAsLjY5NDQ0LDAsMF0sMTA1OlswLC42OTMyNiwwLDBdLDEwNjpbLjE5NDQ0LC42OTMyNiwuMDYyMiwwXSwxMDc6WzAsLjY5NDQ0LC4wMTg1MiwwXSwxMDg6WzAsLjY5NDQ0LC4wMDg4LDBdLDEwOTpbMCwuNDQ0NDQsMCwwXSwxMTA6WzAsLjQ0NDQ0LDAsMF0sMTExOlswLC40NDQ0NCwwLDBdLDExMjpbLjE5NDQ0LC40NDQ0NCwwLDBdLDExMzpbLjE5NDQ0LC40NDQ0NCwuMDM3MDQsMF0sMTE0OlswLC40NDQ0NCwuMDMxOTQsMF0sMTE1OlswLC40NDQ0NCwwLDBdLDExNjpbMCwuNjM0OTIsMCwwXSwxMTc6WzAsLjQ0NDQ0LDAsMF0sMTE4OlswLC40NDQ0NCwuMDM3MDQsMF0sMTE5OlswLC40NDQ0NCwuMDI3NzgsMF0sMTIwOlswLC40NDQ0NCwwLDBdLDEyMTpbLjE5NDQ0LC40NDQ0NCwuMDM3MDQsMF0sMTIyOlswLC40NDQ0NCwuMDQyMTMsMF0sOTE1OlswLC42ODYxMSwuMTU5NzIsMF0sOTE2OlswLC42ODYxMSwwLDBdLDkyMDpbMCwuNjg2MTEsLjAzMTk0LDBdLDkyMzpbMCwuNjg2MTEsMCwwXSw5MjY6WzAsLjY4NjExLC4wNzQ1OCwwXSw5Mjg6WzAsLjY4NjExLC4wODIyOSwwXSw5MzE6WzAsLjY4NjExLC4wNTQ1MSwwXSw5MzM6WzAsLjY4NjExLC4xNTk3MiwwXSxcbjkzNDpbMCwuNjg2MTEsMCwwXSw5MzY6WzAsLjY4NjExLC4xMTY1MywwXSw5Mzc6WzAsLjY4NjExLC4wNDgzNSwwXSw5NDU6WzAsLjQ0NDQ0LDAsMF0sOTQ2OlsuMTk0NDQsLjY5NDQ0LC4wMzQwMywwXSw5NDc6Wy4xOTQ0NCwuNDQ0NDQsLjA2Mzg5LDBdLDk0ODpbMCwuNjk0NDQsLjAzODE5LDBdLDk0OTpbMCwuNDQ0NDQsMCwwXSw5NTA6Wy4xOTQ0NCwuNjk0NDQsLjA2MjE1LDBdLDk1MTpbLjE5NDQ0LC40NDQ0NCwuMDM3MDQsMF0sOTUyOlswLC42OTQ0NCwuMDMxOTQsMF0sOTUzOlswLC40NDQ0NCwwLDBdLDk1NDpbMCwuNDQ0NDQsMCwwXSw5NTU6WzAsLjY5NDQ0LDAsMF0sOTU2OlsuMTk0NDQsLjQ0NDQ0LDAsMF0sOTU3OlswLC40NDQ0NCwuMDY4OTgsMF0sOTU4OlsuMTk0NDQsLjY5NDQ0LC4wMzAyMSwwXSw5NTk6WzAsLjQ0NDQ0LDAsMF0sOTYwOlswLC40NDQ0NCwuMDM3MDQsMF0sOTYxOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sOTYyOlsuMDk3MjIsLjQ0NDQ0LC4wNzkxNywwXSw5NjM6WzAsLjQ0NDQ0LC4wMzcwNCwwXSw5NjQ6WzAsLjQ0NDQ0LC4xMzQ3MiwwXSw5NjU6WzAsLjQ0NDQ0LC4wMzcwNCwwXSw5NjY6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw5Njc6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw5Njg6Wy4xOTQ0NCwuNjk0NDQsLjAzNzA0LDBdLDk2OTpbMCwuNDQ0NDQsLjAzNzA0LDBdLDk3NzpbMCwuNjk0NDQsMCwwXSw5ODE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5ODI6WzAsLjQ0NDQ0LC4wMzE5NCwwXSwxMDA5OlsuMTk0NDQsLjQ0NDQ0LDAsMF0sMTAxMzpbMCwuNDQ0NDQsMCwwXX0sXCJNYXRoLUl0YWxpY1wiOns0NzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDY1OlswLC42ODMzMywwLC4xMzg4OV0sNjY6WzAsLjY4MzMzLC4wNTAxNywuMDgzMzRdLDY3OlswLC42ODMzMywuMDcxNTMsLjA4MzM0XSw2ODpbMCwuNjgzMzMsLjAyNzc4LC4wNTU1Nl0sNjk6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDcwOlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw3MTpbMCwuNjgzMzMsMCwuMDgzMzRdLDcyOlswLC42ODMzMywuMDgxMjUsLjA1NTU2XSw3MzpbMCwuNjgzMzMsLjA3ODQ3LC4xMTExMV0sNzQ6WzAsLjY4MzMzLC4wOTYxOCwuMTY2NjddLDc1OlswLC42ODMzMywuMDcxNTMsLjA1NTU2XSw3NjpbMCwuNjgzMzMsMCwuMDI3NzhdLDc3OlswLC42ODMzMywuMTA5MDMsLjA4MzM0XSw3ODpbMCwuNjgzMzMsLjEwOTAzLC4wODMzNF0sNzk6WzAsLjY4MzMzLC4wMjc3OCwuMDgzMzRdLDgwOlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw4MTpbLjE5NDQ0LC42ODMzMywwLC4wODMzNF0sODI6WzAsLjY4MzMzLC4wMDc3MywuMDgzMzRdLDgzOlswLC42ODMzMywuMDU3NjQsLjA4MzM0XSw4NDpbMCwuNjgzMzMsLjEzODg5LC4wODMzNF0sODU6WzAsLjY4MzMzLC4xMDkwMywuMDI3NzhdLDg2OlswLC42ODMzMywuMjIyMjIsMF0sODc6WzAsLjY4MzMzLC4xMzg4OSwwXSw4ODpbMCwuNjgzMzMsLjA3ODQ3LC4wODMzNF0sODk6WzAsLjY4MzMzLC4yMjIyMiwwXSw5MDpbMCwuNjgzMzMsLjA3MTUzLC4wODMzNF0sOTc6WzAsLjQzMDU2LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMDA6WzAsLjY5NDQ0LDAsLjE2NjY3XSwxMDE6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMDI6Wy4xOTQ0NCwuNjk0NDQsLjEwNzY0LC4xNjY2N10sMTAzOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDI3NzhdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY1OTUyLDAsMF0sMTA2OlsuMTk0NDQsLjY1OTUyLC4wNTcyNCwwXSwxMDc6WzAsLjY5NDQ0LC4wMzE0OCwwXSwxMDg6WzAsLjY5NDQ0LC4wMTk2OCwuMDgzMzRdLDEwOTpbMCwuNDMwNTYsMCwwXSwxMTA6WzAsLjQzMDU2LDAsMF0sMTExOlswLC40MzA1NiwwLC4wNTU1Nl0sMTEyOlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSwxMTM6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wODMzNF0sMTE0OlswLC40MzA1NiwuMDI3NzgsLjA1NTU2XSwxMTU6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMTY6WzAsLjYxNTA4LDAsLjA4MzM0XSwxMTc6WzAsLjQzMDU2LDAsLjAyNzc4XSwxMTg6WzAsLjQzMDU2LC4wMzU4OCwuMDI3NzhdLDExOTpbMCwuNDMwNTYsLjAyNjkxLC4wODMzNF0sMTIwOlswLC40MzA1NiwwLC4wMjc3OF0sMTIxOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDU1NTZdLDEyMjpbMCwuNDMwNTYsLjA0Mzk4LC4wNTU1Nl0sOTE1OlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw5MTY6WzAsLjY4MzMzLDAsLjE2NjY3XSw5MjA6WzAsLjY4MzMzLC4wMjc3OCwuMDgzMzRdLDkyMzpbMCwuNjgzMzMsMCwuMTY2NjddLDkyNjpbMCwuNjgzMzMsLjA3NTY5LC4wODMzNF0sOTI4OlswLC42ODMzMywuMDgxMjUsLjA1NTU2XSw5MzE6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDkzMzpbMCwuNjgzMzMsLjEzODg5LC4wNTU1Nl0sOTM0OlswLC42ODMzMywwLC4wODMzNF0sOTM2OlswLC42ODMzMywuMTEsLjA1NTU2XSw5Mzc6WzAsLjY4MzMzLC4wNTAxNywuMDgzMzRdLDk0NTpbMCwuNDMwNTYsLjAwMzcsLjAyNzc4XSw5NDY6Wy4xOTQ0NCwuNjk0NDQsLjA1Mjc4LC4wODMzNF0sOTQ3OlsuMTk0NDQsLjQzMDU2LC4wNTU1NiwwXSw5NDg6WzAsLjY5NDQ0LC4wMzc4NSwuMDU1NTZdLDk0OTpbMCwuNDMwNTYsMCwuMDgzMzRdLDk1MDpbLjE5NDQ0LC42OTQ0NCwuMDczNzgsLjA4MzM0XSw5NTE6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wNTU1Nl0sOTUyOlswLC42OTQ0NCwuMDI3NzgsLjA4MzM0XSw5NTM6WzAsLjQzMDU2LDAsLjA1NTU2XSw5NTQ6WzAsLjQzMDU2LDAsMF0sOTU1OlswLC42OTQ0NCwwLDBdLDk1NjpbLjE5NDQ0LC40MzA1NiwwLC4wMjc3OF0sOTU3OlswLC40MzA1NiwuMDYzNjYsLjAyNzc4XSw5NTg6Wy4xOTQ0NCwuNjk0NDQsLjA0NjAxLC4xMTExMV0sOTU5OlswLC40MzA1NiwwLC4wNTU1Nl0sOTYwOlswLC40MzA1NiwuMDM1ODgsMF0sOTYxOlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw5NjI6Wy4wOTcyMiwuNDMwNTYsLjA3OTg2LC4wODMzNF0sOTYzOlswLC40MzA1NiwuMDM1ODgsMF0sOTY0OlswLC40MzA1NiwuMTEzMiwuMDI3NzhdLDk2NTpbMCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sOTY2OlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw5Njc6Wy4xOTQ0NCwuNDMwNTYsMCwuMDU1NTZdLDk2ODpbLjE5NDQ0LC42OTQ0NCwuMDM1ODgsLjExMTExXSw5Njk6WzAsLjQzMDU2LC4wMzU4OCwwXSw5Nzc6WzAsLjY5NDQ0LDAsLjA4MzM0XSw5ODE6Wy4xOTQ0NCwuNjk0NDQsMCwuMDgzMzRdLDk4MjpbMCwuNDMwNTYsLjAyNzc4LDBdLDEwMDk6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDEwMTM6WzAsLjQzMDU2LDAsLjA1NTU2XX0sXCJNYXRoLVJlZ3VsYXJcIjp7NjU6WzAsLjY4MzMzLDAsLjEzODg5XSw2NjpbMCwuNjgzMzMsLjA1MDE3LC4wODMzNF0sNjc6WzAsLjY4MzMzLC4wNzE1MywuMDgzMzRdLDY4OlswLC42ODMzMywuMDI3NzgsLjA1NTU2XSw2OTpbMCwuNjgzMzMsLjA1NzY0LC4wODMzNF0sNzA6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDcxOlswLC42ODMzMywwLC4wODMzNF0sNzI6WzAsLjY4MzMzLC4wODEyNSwuMDU1NTZdLDczOlswLC42ODMzMywuMDc4NDcsLjExMTExXSw3NDpbMCwuNjgzMzMsLjA5NjE4LC4xNjY2N10sNzU6WzAsLjY4MzMzLC4wNzE1MywuMDU1NTZdLDc2OlswLC42ODMzMywwLC4wMjc3OF0sNzc6WzAsLjY4MzMzLC4xMDkwMywuMDgzMzRdLDc4OlswLC42ODMzMywuMTA5MDMsLjA4MzM0XSw3OTpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sODA6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDgxOlsuMTk0NDQsLjY4MzMzLDAsLjA4MzM0XSw4MjpbMCwuNjgzMzMsLjAwNzczLC4wODMzNF0sODM6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDg0OlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw4NTpbMCwuNjgzMzMsLjEwOTAzLC4wMjc3OF0sODY6WzAsLjY4MzMzLC4yMjIyMiwwXSw4NzpbMCwuNjgzMzMsLjEzODg5LDBdLDg4OlswLC42ODMzMywuMDc4NDcsLjA4MzM0XSw4OTpbMCwuNjgzMzMsLjIyMjIyLDBdLDkwOlswLC42ODMzMywuMDcxNTMsLjA4MzM0XSw5NzpbMCwuNDMwNTYsMCwwXSw5ODpbMCwuNjk0NDQsMCwwXSw5OTpbMCwuNDMwNTYsMCwuMDU1NTZdLDEwMDpbMCwuNjk0NDQsMCwuMTY2NjddLDEwMTpbMCwuNDMwNTYsMCwuMDU1NTZdLDEwMjpbLjE5NDQ0LC42OTQ0NCwuMTA3NjQsLjE2NjY3XSwxMDM6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sMTA0OlswLC42OTQ0NCwwLDBdLDEwNTpbMCwuNjU5NTIsMCwwXSwxMDY6Wy4xOTQ0NCwuNjU5NTIsLjA1NzI0LDBdLDEwNzpbMCwuNjk0NDQsLjAzMTQ4LDBdLDEwODpbMCwuNjk0NDQsLjAxOTY4LC4wODMzNF0sMTA5OlswLC40MzA1NiwwLDBdLDExMDpbMCwuNDMwNTYsMCwwXSwxMTE6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMTI6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDExMzpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjA4MzM0XSwxMTQ6WzAsLjQzMDU2LC4wMjc3OCwuMDU1NTZdLDExNTpbMCwuNDMwNTYsMCwuMDU1NTZdLDExNjpbMCwuNjE1MDgsMCwuMDgzMzRdLDExNzpbMCwuNDMwNTYsMCwuMDI3NzhdLDExODpbMCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sMTE5OlswLC40MzA1NiwuMDI2OTEsLjA4MzM0XSwxMjA6WzAsLjQzMDU2LDAsLjAyNzc4XSwxMjE6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wNTU1Nl0sMTIyOlswLC40MzA1NiwuMDQzOTgsLjA1NTU2XSw5MTU6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDkxNjpbMCwuNjgzMzMsMCwuMTY2NjddLDkyMDpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sOTIzOlswLC42ODMzMywwLC4xNjY2N10sOTI2OlswLC42ODMzMywuMDc1NjksLjA4MzM0XSw5Mjg6WzAsLjY4MzMzLC4wODEyNSwuMDU1NTZdLDkzMTpbMCwuNjgzMzMsLjA1NzY0LC4wODMzNF0sOTMzOlswLC42ODMzMywuMTM4ODksLjA1NTU2XSw5MzQ6WzAsLjY4MzMzLDAsLjA4MzM0XSw5MzY6WzAsLjY4MzMzLC4xMSwuMDU1NTZdLDkzNzpbMCwuNjgzMzMsLjA1MDE3LC4wODMzNF0sOTQ1OlswLC40MzA1NiwuMDAzNywuMDI3NzhdLDk0NjpbLjE5NDQ0LC42OTQ0NCwuMDUyNzgsLjA4MzM0XSw5NDc6Wy4xOTQ0NCwuNDMwNTYsLjA1NTU2LDBdLDk0ODpbMCwuNjk0NDQsLjAzNzg1LC4wNTU1Nl0sOTQ5OlswLC40MzA1NiwwLC4wODMzNF0sOTUwOlsuMTk0NDQsLjY5NDQ0LC4wNzM3OCwuMDgzMzRdLDk1MTpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjA1NTU2XSw5NTI6WzAsLjY5NDQ0LC4wMjc3OCwuMDgzMzRdLDk1MzpbMCwuNDMwNTYsMCwuMDU1NTZdLDk1NDpbMCwuNDMwNTYsMCwwXSw5NTU6WzAsLjY5NDQ0LDAsMF0sOTU2OlsuMTk0NDQsLjQzMDU2LDAsLjAyNzc4XSw5NTc6WzAsLjQzMDU2LC4wNjM2NiwuMDI3NzhdLDk1ODpbLjE5NDQ0LC42OTQ0NCwuMDQ2MDEsLjExMTExXSw5NTk6WzAsLjQzMDU2LDAsLjA1NTU2XSw5NjA6WzAsLjQzMDU2LC4wMzU4OCwwXSw5NjE6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDk2MjpbLjA5NzIyLC40MzA1NiwuMDc5ODYsLjA4MzM0XSw5NjM6WzAsLjQzMDU2LC4wMzU4OCwwXSw5NjQ6WzAsLjQzMDU2LC4xMTMyLC4wMjc3OF0sOTY1OlswLC40MzA1NiwuMDM1ODgsLjAyNzc4XSw5NjY6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDk2NzpbLjE5NDQ0LC40MzA1NiwwLC4wNTU1Nl0sOTY4OlsuMTk0NDQsLjY5NDQ0LC4wMzU4OCwuMTExMTFdLDk2OTpbMCwuNDMwNTYsLjAzNTg4LDBdLDk3NzpbMCwuNjk0NDQsMCwuMDgzMzRdLDk4MTpbLjE5NDQ0LC42OTQ0NCwwLC4wODMzNF0sOTgyOlswLC40MzA1NiwuMDI3NzgsMF0sMTAwOTpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sMTAxMzpbMCwuNDMwNTYsMCwuMDU1NTZdfSxcIlNhbnNTZXJpZi1SZWd1bGFyXCI6ezMzOlswLC42OTQ0NCwwLDBdLDM0OlswLC42OTQ0NCwwLDBdLDM1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMzY6Wy4wNTU1NiwuNzUsMCwwXSwzNzpbLjA1NTU2LC43NSwwLDBdLDM4OlswLC42OTQ0NCwwLDBdLDM5OlswLC42OTQ0NCwwLDBdLDQwOlsuMjUsLjc1LDAsMF0sNDE6Wy4yNSwuNzUsMCwwXSw0MjpbMCwuNzUsMCwwXSw0MzpbLjA4MzMzLC41ODMzMywwLDBdLDQ0OlsuMTI1LC4wODMzMywwLDBdLDQ1OlswLC40NDQ0NCwwLDBdLDQ2OlswLC4wODMzMywwLDBdLDQ3OlsuMjUsLjc1LDAsMF0sNDg6WzAsLjY1NTU2LDAsMF0sNDk6WzAsLjY1NTU2LDAsMF0sNTA6WzAsLjY1NTU2LDAsMF0sNTE6WzAsLjY1NTU2LDAsMF0sNTI6WzAsLjY1NTU2LDAsMF0sNTM6WzAsLjY1NTU2LDAsMF0sNTQ6WzAsLjY1NTU2LDAsMF0sNTU6WzAsLjY1NTU2LDAsMF0sNTY6WzAsLjY1NTU2LDAsMF0sNTc6WzAsLjY1NTU2LDAsMF0sNTg6WzAsLjQ0NDQ0LDAsMF0sNTk6Wy4xMjUsLjQ0NDQ0LDAsMF0sNjE6Wy0uMTMsLjM3LDAsMF0sNjM6WzAsLjY5NDQ0LDAsMF0sNjQ6WzAsLjY5NDQ0LDAsMF0sNjU6WzAsLjY5NDQ0LDAsMF0sNjY6WzAsLjY5NDQ0LDAsMF0sNjc6WzAsLjY5NDQ0LDAsMF0sNjg6WzAsLjY5NDQ0LDAsMF0sNjk6WzAsLjY5NDQ0LDAsMF0sNzA6WzAsLjY5NDQ0LDAsMF0sNzE6WzAsLjY5NDQ0LDAsMF0sNzI6WzAsLjY5NDQ0LDAsMF0sNzM6WzAsLjY5NDQ0LDAsMF0sNzQ6WzAsLjY5NDQ0LDAsMF0sNzU6WzAsLjY5NDQ0LDAsMF0sNzY6WzAsLjY5NDQ0LDAsMF0sNzc6WzAsLjY5NDQ0LDAsMF0sNzg6WzAsLjY5NDQ0LDAsMF0sNzk6WzAsLjY5NDQ0LDAsMF0sODA6WzAsLjY5NDQ0LDAsMF0sODE6Wy4xMjUsLjY5NDQ0LDAsMF0sODI6WzAsLjY5NDQ0LDAsMF0sODM6WzAsLjY5NDQ0LDAsMF0sODQ6WzAsLjY5NDQ0LDAsMF0sODU6WzAsLjY5NDQ0LDAsMF0sODY6WzAsLjY5NDQ0LC4wMTM4OSwwXSw4NzpbMCwuNjk0NDQsLjAxMzg5LDBdLDg4OlswLC42OTQ0NCwwLDBdLDg5OlswLC42OTQ0NCwuMDI1LDBdLDkwOlswLC42OTQ0NCwwLDBdLDkxOlsuMjUsLjc1LDAsMF0sOTM6Wy4yNSwuNzUsMCwwXSw5NDpbMCwuNjk0NDQsMCwwXSw5NTpbLjM1LC4wOTQ0NCwuMDI3NzgsMF0sOTc6WzAsLjQ0NDQ0LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQ0NDQ0LDAsMF0sMTAwOlswLC42OTQ0NCwwLDBdLDEwMTpbMCwuNDQ0NDQsMCwwXSwxMDI6WzAsLjY5NDQ0LC4wNjk0NCwwXSwxMDM6Wy4xOTQ0NCwuNDQ0NDQsLjAxMzg5LDBdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY3OTM3LDAsMF0sMTA2OlsuMTk0NDQsLjY3OTM3LDAsMF0sMTA3OlswLC42OTQ0NCwwLDBdLDEwODpbMCwuNjk0NDQsMCwwXSwxMDk6WzAsLjQ0NDQ0LDAsMF0sMTEwOlswLC40NDQ0NCwwLDBdLDExMTpbMCwuNDQ0NDQsMCwwXSwxMTI6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTM6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTQ6WzAsLjQ0NDQ0LC4wMTM4OSwwXSwxMTU6WzAsLjQ0NDQ0LDAsMF0sMTE2OlswLC41NzE0MywwLDBdLDExNzpbMCwuNDQ0NDQsMCwwXSwxMTg6WzAsLjQ0NDQ0LC4wMTM4OSwwXSwxMTk6WzAsLjQ0NDQ0LC4wMTM4OSwwXSwxMjA6WzAsLjQ0NDQ0LDAsMF0sMTIxOlsuMTk0NDQsLjQ0NDQ0LC4wMTM4OSwwXSwxMjI6WzAsLjQ0NDQ0LDAsMF0sMTI2OlsuMzUsLjMyNjU5LDAsMF0sMzA1OlswLC40NDQ0NCwwLDBdLDU2NzpbLjE5NDQ0LC40NDQ0NCwwLDBdLDc2ODpbMCwuNjk0NDQsMCwwXSw3Njk6WzAsLjY5NDQ0LDAsMF0sNzcwOlswLC42OTQ0NCwwLDBdLDc3MTpbMCwuNjc2NTksMCwwXSw3NzI6WzAsLjYwODg5LDAsMF0sNzc0OlswLC42OTQ0NCwwLDBdLDc3NTpbMCwuNjc5MzcsMCwwXSw3NzY6WzAsLjY3OTM3LDAsMF0sNzc4OlswLC42OTQ0NCwwLDBdLDc3OTpbMCwuNjk0NDQsMCwwXSw3ODA6WzAsLjYzMTk0LDAsMF0sOTE1OlswLC42OTQ0NCwwLDBdLDkxNjpbMCwuNjk0NDQsMCwwXSw5MjA6WzAsLjY5NDQ0LDAsMF0sOTIzOlswLC42OTQ0NCwwLDBdLDkyNjpbMCwuNjk0NDQsMCwwXSw5Mjg6WzAsLjY5NDQ0LDAsMF0sOTMxOlswLC42OTQ0NCwwLDBdLDkzMzpbMCwuNjk0NDQsMCwwXSw5MzQ6WzAsLjY5NDQ0LDAsMF0sOTM2OlswLC42OTQ0NCwwLDBdLDkzNzpbMCwuNjk0NDQsMCwwXSw4MjExOlswLC40NDQ0NCwuMDI3NzgsMF0sODIxMjpbMCwuNDQ0NDQsLjAyNzc4LDBdLDgyMTY6WzAsLjY5NDQ0LDAsMF0sODIxNzpbMCwuNjk0NDQsMCwwXSw4MjIwOlswLC42OTQ0NCwwLDBdLDgyMjE6WzAsLjY5NDQ0LDAsMF19LFwiU2NyaXB0LVJlZ3VsYXJcIjp7NjU6WzAsLjcsLjIyOTI1LDBdLDY2OlswLC43LC4wNDA4NywwXSw2NzpbMCwuNywuMTY4OSwwXSw2ODpbMCwuNywuMDkzNzEsMF0sNjk6WzAsLjcsLjE4NTgzLDBdLDcwOlswLC43LC4xMzYzNCwwXSw3MTpbMCwuNywuMTczMjIsMF0sNzI6WzAsLjcsLjI5Njk0LDBdLDczOlswLC43LC4xOTE4OSwwXSw3NDpbLjI3Nzc4LC43LC4xOTE4OSwwXSw3NTpbMCwuNywuMzEyNTksMF0sNzY6WzAsLjcsLjE5MTg5LDBdLDc3OlswLC43LC4xNTk4MSwwXSw3ODpbMCwuNywuMzUyNSwwXSw3OTpbMCwuNywuMDgwNzgsMF0sODA6WzAsLjcsLjA4MDc4LDBdLDgxOlswLC43LC4wMzMwNSwwXSw4MjpbMCwuNywuMDYyNTksMF0sODM6WzAsLjcsLjE5MTg5LDBdLDg0OlswLC43LC4yOTA4NywwXSw4NTpbMCwuNywuMjU4MTUsMF0sODY6WzAsLjcsLjI3NTIzLDBdLDg3OlswLC43LC4yNzUyMywwXSw4ODpbMCwuNywuMjYwMDYsMF0sODk6WzAsLjcsLjI5MzksMF0sOTA6WzAsLjcsLjI0MDM3LDBdfSxcIlNpemUxLVJlZ3VsYXJcIjp7NDA6Wy4zNTAwMSwuODUsMCwwXSw0MTpbLjM1MDAxLC44NSwwLDBdLDQ3OlsuMzUwMDEsLjg1LDAsMF0sOTE6Wy4zNTAwMSwuODUsMCwwXSw5MjpbLjM1MDAxLC44NSwwLDBdLDkzOlsuMzUwMDEsLjg1LDAsMF0sMTIzOlsuMzUwMDEsLjg1LDAsMF0sMTI1OlsuMzUwMDEsLjg1LDAsMF0sNzEwOlswLC43MjIyMiwwLDBdLDczMjpbMCwuNzIyMjIsMCwwXSw3NzA6WzAsLjcyMjIyLDAsMF0sNzcxOlswLC43MjIyMiwwLDBdLDgyMTQ6Wy05OWUtNSwuNjAxLDAsMF0sODU5MzpbMWUtNSwuNiwwLDBdLDg1OTU6WzFlLTUsLjYsMCwwXSw4NjU3OlsxZS01LC42LDAsMF0sODY1OTpbMWUtNSwuNiwwLDBdLDg3MTk6Wy4yNTAwMSwuNzUsMCwwXSw4NzIwOlsuMjUwMDEsLjc1LDAsMF0sODcyMTpbLjI1MDAxLC43NSwwLDBdLDg3MzA6Wy4zNTAwMSwuODUsMCwwXSw4NzM5OlstLjAwNTk5LC42MDYsMCwwXSw4NzQxOlstLjAwNTk5LC42MDYsMCwwXSw4NzQ3OlsuMzA2MTIsLjgwNSwuMTk0NDUsMF0sODc0ODpbLjMwNiwuODA1LC4xOTQ0NSwwXSw4NzQ5OlsuMzA2LC44MDUsLjE5NDQ1LDBdLDg3NTA6Wy4zMDYxMiwuODA1LC4xOTQ0NSwwXSw4ODk2OlsuMjUwMDEsLjc1LDAsMF0sODg5NzpbLjI1MDAxLC43NSwwLDBdLDg4OTg6Wy4yNTAwMSwuNzUsMCwwXSw4ODk5OlsuMjUwMDEsLjc1LDAsMF0sODk2ODpbLjM1MDAxLC44NSwwLDBdLDg5Njk6Wy4zNTAwMSwuODUsMCwwXSw4OTcwOlsuMzUwMDEsLjg1LDAsMF0sODk3MTpbLjM1MDAxLC44NSwwLDBdLDkxNjg6Wy05OWUtNSwuNjAxLDAsMF0sMTAyMTY6Wy4zNTAwMSwuODUsMCwwXSwxMDIxNzpbLjM1MDAxLC44NSwwLDBdLDEwNzUyOlsuMjUwMDEsLjc1LDAsMF0sMTA3NTM6Wy4yNTAwMSwuNzUsMCwwXSwxMDc1NDpbLjI1MDAxLC43NSwwLDBdLDEwNzU2OlsuMjUwMDEsLjc1LDAsMF0sMTA3NTg6Wy4yNTAwMSwuNzUsMCwwXX0sXCJTaXplMi1SZWd1bGFyXCI6ezQwOlsuNjUwMDIsMS4xNSwwLDBdLDQxOlsuNjUwMDIsMS4xNSwwLDBdLDQ3OlsuNjUwMDIsMS4xNSwwLDBdLDkxOlsuNjUwMDIsMS4xNSwwLDBdLDkyOlsuNjUwMDIsMS4xNSwwLDBdLDkzOlsuNjUwMDIsMS4xNSwwLDBdLDEyMzpbLjY1MDAyLDEuMTUsMCwwXSwxMjU6Wy42NTAwMiwxLjE1LDAsMF0sNzEwOlswLC43NSwwLDBdLDczMjpbMCwuNzUsMCwwXSw3NzA6WzAsLjc1LDAsMF0sNzcxOlswLC43NSwwLDBdLDg3MTk6Wy41NTAwMSwxLjA1LDAsMF0sODcyMDpbLjU1MDAxLDEuMDUsMCwwXSw4NzIxOlsuNTUwMDEsMS4wNSwwLDBdLDg3MzA6Wy42NTAwMiwxLjE1LDAsMF0sODc0NzpbLjg2MjI1LDEuMzYsLjQ0NDQ1LDBdLDg3NDg6Wy44NjIsMS4zNiwuNDQ0NDUsMF0sODc0OTpbLjg2MiwxLjM2LC40NDQ0NSwwXSw4NzUwOlsuODYyMjUsMS4zNiwuNDQ0NDUsMF0sODg5NjpbLjU1MDAxLDEuMDUsMCwwXSw4ODk3OlsuNTUwMDEsMS4wNSwwLDBdLDg4OTg6Wy41NTAwMSwxLjA1LDAsMF0sODg5OTpbLjU1MDAxLDEuMDUsMCwwXSw4OTY4OlsuNjUwMDIsMS4xNSwwLDBdLDg5Njk6Wy42NTAwMiwxLjE1LDAsMF0sODk3MDpbLjY1MDAyLDEuMTUsMCwwXSw4OTcxOlsuNjUwMDIsMS4xNSwwLDBdLDEwMjE2OlsuNjUwMDIsMS4xNSwwLDBdLDEwMjE3OlsuNjUwMDIsMS4xNSwwLDBdLDEwNzUyOlsuNTUwMDEsMS4wNSwwLDBdLDEwNzUzOlsuNTUwMDEsMS4wNSwwLDBdLDEwNzU0OlsuNTUwMDEsMS4wNSwwLDBdLDEwNzU2OlsuNTUwMDEsMS4wNSwwLDBdLDEwNzU4OlsuNTUwMDEsMS4wNSwwLDBdfSxcIlNpemUzLVJlZ3VsYXJcIjp7NDA6Wy45NTAwMywxLjQ1LDAsMF0sNDE6Wy45NTAwMywxLjQ1LDAsMF0sNDc6Wy45NTAwMywxLjQ1LDAsMF0sOTE6Wy45NTAwMywxLjQ1LDAsMF0sOTI6Wy45NTAwMywxLjQ1LDAsMF0sOTM6Wy45NTAwMywxLjQ1LDAsMF0sMTIzOlsuOTUwMDMsMS40NSwwLDBdLDEyNTpbLjk1MDAzLDEuNDUsMCwwXSw3MTA6WzAsLjc1LDAsMF0sNzMyOlswLC43NSwwLDBdLDc3MDpbMCwuNzUsMCwwXSw3NzE6WzAsLjc1LDAsMF0sODczMDpbLjk1MDAzLDEuNDUsMCwwXSw4OTY4OlsuOTUwMDMsMS40NSwwLDBdLDg5Njk6Wy45NTAwMywxLjQ1LDAsMF0sODk3MDpbLjk1MDAzLDEuNDUsMCwwXSw4OTcxOlsuOTUwMDMsMS40NSwwLDBdLDEwMjE2OlsuOTUwMDMsMS40NSwwLDBdLDEwMjE3OlsuOTUwMDMsMS40NSwwLDBdfSxcIlNpemU0LVJlZ3VsYXJcIjp7NDA6WzEuMjUwMDMsMS43NSwwLDBdLDQxOlsxLjI1MDAzLDEuNzUsMCwwXSw0NzpbMS4yNTAwMywxLjc1LDAsMF0sOTE6WzEuMjUwMDMsMS43NSwwLDBdLDkyOlsxLjI1MDAzLDEuNzUsMCwwXSw5MzpbMS4yNTAwMywxLjc1LDAsMF0sMTIzOlsxLjI1MDAzLDEuNzUsMCwwXSwxMjU6WzEuMjUwMDMsMS43NSwwLDBdLDcxMDpbMCwuODI1LDAsMF0sNzMyOlswLC44MjUsMCwwXSw3NzA6WzAsLjgyNSwwLDBdLDc3MTpbMCwuODI1LDAsMF0sODczMDpbMS4yNTAwMywxLjc1LDAsMF0sODk2ODpbMS4yNTAwMywxLjc1LDAsMF0sODk2OTpbMS4yNTAwMywxLjc1LDAsMF0sODk3MDpbMS4yNTAwMywxLjc1LDAsMF0sODk3MTpbMS4yNTAwMywxLjc1LDAsMF0sOTExNTpbLjY0NTAyLDEuMTU1LDAsMF0sOTExNjpbMWUtNSwuNiwwLDBdLDkxMTc6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMTg6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMTk6WzFlLTUsLjYsMCwwXSw5MTIwOlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTIxOlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTIyOlstOTllLTUsLjYwMSwwLDBdLDkxMjM6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMjQ6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMjU6Wy05OWUtNSwuNjAxLDAsMF0sOTEyNjpbLjY0NTAyLDEuMTU1LDAsMF0sOTEyNzpbMWUtNSwuOSwwLDBdLDkxMjg6Wy42NTAwMiwxLjE1LDAsMF0sOTEyOTpbLjkwMDAxLDAsMCwwXSw5MTMwOlswLC4zLDAsMF0sOTEzMTpbMWUtNSwuOSwwLDBdLDkxMzI6Wy42NTAwMiwxLjE1LDAsMF0sOTEzMzpbLjkwMDAxLDAsMCwwXSw5MTQzOlsuODg1MDIsLjkxNSwwLDBdLDEwMjE2OlsxLjI1MDAzLDEuNzUsMCwwXSwxMDIxNzpbMS4yNTAwMywxLjc1LDAsMF0sNTczNDQ6Wy0uMDA0OTksLjYwNSwwLDBdLDU3MzQ1OlstLjAwNDk5LC42MDUsMCwwXSw1NzY4MDpbMCwuMTIsMCwwXSw1NzY4MTpbMCwuMTIsMCwwXSw1NzY4MjpbMCwuMTIsMCwwXSw1NzY4MzpbMCwuMTIsMCwwXX0sXCJUeXBld3JpdGVyLVJlZ3VsYXJcIjp7MzM6WzAsLjYxMTExLDAsMF0sMzQ6WzAsLjYxMTExLDAsMF0sMzU6WzAsLjYxMTExLDAsMF0sMzY6Wy4wODMzMywuNjk0NDQsMCwwXSwzNzpbLjA4MzMzLC42OTQ0NCwwLDBdLDM4OlswLC42MTExMSwwLDBdLDM5OlswLC42MTExMSwwLDBdLDQwOlsuMDgzMzMsLjY5NDQ0LDAsMF0sNDE6Wy4wODMzMywuNjk0NDQsMCwwXSw0MjpbMCwuNTIwODMsMCwwXSw0MzpbLS4wODA1NiwuNTMwNTUsMCwwXSw0NDpbLjEzODg5LC4xMjUsMCwwXSw0NTpbLS4wODA1NiwuNTMwNTUsMCwwXSw0NjpbMCwuMTI1LDAsMF0sNDc6Wy4wODMzMywuNjk0NDQsMCwwXSw0ODpbMCwuNjExMTEsMCwwXSw0OTpbMCwuNjExMTEsMCwwXSw1MDpbMCwuNjExMTEsMCwwXSw1MTpbMCwuNjExMTEsMCwwXSw1MjpbMCwuNjExMTEsMCwwXSw1MzpbMCwuNjExMTEsMCwwXSw1NDpbMCwuNjExMTEsMCwwXSw1NTpbMCwuNjExMTEsMCwwXSw1NjpbMCwuNjExMTEsMCwwXSw1NzpbMCwuNjExMTEsMCwwXSw1ODpbMCwuNDMwNTYsMCwwXSw1OTpbLjEzODg5LC40MzA1NiwwLDBdLDYwOlstLjA1NTU2LC41NTU1NiwwLDBdLDYxOlstLjE5NTQ5LC40MTU2MiwwLDBdLDYyOlstLjA1NTU2LC41NTU1NiwwLDBdLDYzOlswLC42MTExMSwwLDBdLDY0OlswLC42MTExMSwwLDBdLDY1OlswLC42MTExMSwwLDBdLDY2OlswLC42MTExMSwwLDBdLDY3OlswLC42MTExMSwwLDBdLDY4OlswLC42MTExMSwwLDBdLDY5OlswLC42MTExMSwwLDBdLDcwOlswLC42MTExMSwwLDBdLDcxOlswLC42MTExMSwwLDBdLDcyOlswLC42MTExMSwwLDBdLDczOlswLC42MTExMSwwLDBdLDc0OlswLC42MTExMSwwLDBdLDc1OlswLC42MTExMSwwLDBdLDc2OlswLC42MTExMSwwLDBdLDc3OlswLC42MTExMSwwLDBdLDc4OlswLC42MTExMSwwLDBdLDc5OlswLC42MTExMSwwLDBdLDgwOlswLC42MTExMSwwLDBdLDgxOlsuMTM4ODksLjYxMTExLDAsMF0sODI6WzAsLjYxMTExLDAsMF0sODM6WzAsLjYxMTExLDAsMF0sODQ6WzAsLjYxMTExLDAsMF0sODU6WzAsLjYxMTExLDAsMF0sODY6WzAsLjYxMTExLDAsMF0sODc6WzAsLjYxMTExLDAsMF0sODg6WzAsLjYxMTExLDAsMF0sODk6WzAsLjYxMTExLDAsMF0sOTA6WzAsLjYxMTExLDAsMF0sOTE6Wy4wODMzMywuNjk0NDQsMCwwXSw5MjpbLjA4MzMzLC42OTQ0NCwwLDBdLDkzOlsuMDgzMzMsLjY5NDQ0LDAsMF0sOTQ6WzAsLjYxMTExLDAsMF0sOTU6Wy4wOTUxNCwwLDAsMF0sOTY6WzAsLjYxMTExLDAsMF0sOTc6WzAsLjQzMDU2LDAsMF0sOTg6WzAsLjYxMTExLDAsMF0sOTk6WzAsLjQzMDU2LDAsMF0sMTAwOlswLC42MTExMSwwLDBdLDEwMTpbMCwuNDMwNTYsMCwwXSwxMDI6WzAsLjYxMTExLDAsMF0sMTAzOlsuMjIyMjIsLjQzMDU2LDAsMF0sMTA0OlswLC42MTExMSwwLDBdLDEwNTpbMCwuNjExMTEsMCwwXSwxMDY6Wy4yMjIyMiwuNjExMTEsMCwwXSwxMDc6WzAsLjYxMTExLDAsMF0sMTA4OlswLC42MTExMSwwLDBdLDEwOTpbMCwuNDMwNTYsMCwwXSwxMTA6WzAsLjQzMDU2LDAsMF0sMTExOlswLC40MzA1NiwwLDBdLDExMjpbLjIyMjIyLC40MzA1NiwwLDBdLDExMzpbLjIyMjIyLC40MzA1NiwwLDBdLDExNDpbMCwuNDMwNTYsMCwwXSwxMTU6WzAsLjQzMDU2LDAsMF0sMTE2OlswLC41NTM1OCwwLDBdLDExNzpbMCwuNDMwNTYsMCwwXSwxMTg6WzAsLjQzMDU2LDAsMF0sMTE5OlswLC40MzA1NiwwLDBdLDEyMDpbMCwuNDMwNTYsMCwwXSwxMjE6Wy4yMjIyMiwuNDMwNTYsMCwwXSwxMjI6WzAsLjQzMDU2LDAsMF0sMTIzOlsuMDgzMzMsLjY5NDQ0LDAsMF0sMTI0OlsuMDgzMzMsLjY5NDQ0LDAsMF0sMTI1OlsuMDgzMzMsLjY5NDQ0LDAsMF0sMTI2OlswLC42MTExMSwwLDBdLDEyNzpbMCwuNjExMTEsMCwwXSwzMDU6WzAsLjQzMDU2LDAsMF0sNTY3OlsuMjIyMjIsLjQzMDU2LDAsMF0sNzY4OlswLC42MTExMSwwLDBdLDc2OTpbMCwuNjExMTEsMCwwXSw3NzA6WzAsLjYxMTExLDAsMF0sNzcxOlswLC42MTExMSwwLDBdLDc3MjpbMCwuNTY1NTUsMCwwXSw3NzQ6WzAsLjYxMTExLDAsMF0sNzc2OlswLC42MTExMSwwLDBdLDc3ODpbMCwuNjExMTEsMCwwXSw3ODA6WzAsLjU2NTk3LDAsMF0sOTE1OlswLC42MTExMSwwLDBdLDkxNjpbMCwuNjExMTEsMCwwXSw5MjA6WzAsLjYxMTExLDAsMF0sOTIzOlswLC42MTExMSwwLDBdLDkyNjpbMCwuNjExMTEsMCwwXSw5Mjg6WzAsLjYxMTExLDAsMF0sOTMxOlswLC42MTExMSwwLDBdLDkzMzpbMCwuNjExMTEsMCwwXSw5MzQ6WzAsLjYxMTExLDAsMF0sOTM2OlswLC42MTExMSwwLDBdLDkzNzpbMCwuNjExMTEsMCwwXSwyMDE4OlswLC42MTExMSwwLDBdLDIwMTk6WzAsLjYxMTExLDAsMF0sODI0MjpbMCwuNjExMTEsMCwwXX19fSx7fV0sMjM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi91dGlsc1wiKTt2YXIgaT1lKFwiLi9QYXJzZUVycm9yXCIpO3ZhciBuPWUoXCIuL3BhcnNlRGF0YVwiKTt2YXIgbz1uLlBhcnNlTm9kZTtmdW5jdGlvbiBzKGUscixhKXtpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe2U9W2VdfWlmKHR5cGVvZiByPT09XCJudW1iZXJcIil7cj17bnVtQXJnczpyfX12YXIgaT17bnVtQXJnczpyLm51bUFyZ3MsYXJnVHlwZXM6ci5hcmdUeXBlcyxncmVlZGluZXNzOnIuZ3JlZWRpbmVzcz09PXVuZGVmaW5lZD8xOnIuZ3JlZWRpbmVzcyxhbGxvd2VkSW5UZXh0OiEhci5hbGxvd2VkSW5UZXh0LG51bU9wdGlvbmFsQXJnczpyLm51bU9wdGlvbmFsQXJnc3x8MCxpbmZpeDohIXIuaW5maXgsaGFuZGxlcjphfTtmb3IodmFyIG49MDtuPGUubGVuZ3RoOysrbil7dC5leHBvcnRzW2Vbbl1dPWl9fXZhciBsPWZ1bmN0aW9uIGUodCl7aWYodC50eXBlPT09XCJvcmRncm91cFwiKXtyZXR1cm4gdC52YWx1ZX1lbHNle3JldHVyblt0XX19O3MoXCJcXFxcc3FydFwiLHtudW1BcmdzOjEsbnVtT3B0aW9uYWxBcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3JldHVybnt0eXBlOlwic3FydFwiLGJvZHk6YSxpbmRleDpyfX0pO3ZhciB1PXtcIlxcXFx0ZXh0XCI6dW5kZWZpbmVkLFwiXFxcXHRleHRybVwiOlwibWF0aHJtXCIsXCJcXFxcdGV4dHNmXCI6XCJtYXRoc2ZcIixcIlxcXFx0ZXh0dHRcIjpcIm1hdGh0dFwiLFwiXFxcXHRleHRub3JtYWxcIjpcIm1hdGhybVwiLFwiXFxcXHRleHRiZlwiOlwibWF0aGJmXCIsXCJcXFxcdGV4dGl0XCI6XCJ0ZXh0aXRcIn07cyhbXCJcXFxcdGV4dFwiLFwiXFxcXHRleHRybVwiLFwiXFxcXHRleHRzZlwiLFwiXFxcXHRleHR0dFwiLFwiXFxcXHRleHRub3JtYWxcIixcIlxcXFx0ZXh0YmZcIixcIlxcXFx0ZXh0aXRcIl0se251bUFyZ3M6MSxhcmdUeXBlczpbXCJ0ZXh0XCJdLGdyZWVkaW5lc3M6MixhbGxvd2VkSW5UZXh0OnRydWV9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcInRleHRcIixib2R5Omwociksc3R5bGU6dVtlLmZ1bmNOYW1lXX19KTtzKFwiXFxcXHhtbENsYXNzXCIse251bUFyZ3M6MixhbGxvd2VkSW5UZXh0OnRydWUsZ3JlZWRpbmVzczozLGFyZ1R5cGVzOltcInN0cmluZ1wiLFwib3JpZ2luYWxcIl19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3ZhciBpPXZvaWQgMDtpZihhLnR5cGU9PT1cIm9yZGdyb3VwXCIpe2k9YS52YWx1ZX1lbHNle2k9W2FdfXJldHVybnt0eXBlOlwieG1sQ2xhc3NcIixjbDpyLHZhbHVlOml9fSk7cyhcIlxcXFx0ZXh0Y29sb3JcIix7bnVtQXJnczoyLGFsbG93ZWRJblRleHQ6dHJ1ZSxncmVlZGluZXNzOjMsYXJnVHlwZXM6W1wiY29sb3JcIixcIm9yaWdpbmFsXCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTtyZXR1cm57dHlwZTpcImNvbG9yXCIsY29sb3I6ci52YWx1ZSx2YWx1ZTpsKGEpfX0pO3MoXCJcXFxcY29sb3JcIix7bnVtQXJnczoxLGFsbG93ZWRJblRleHQ6dHJ1ZSxncmVlZGluZXNzOjMsYXJnVHlwZXM6W1wiY29sb3JcIl19LG51bGwpO3MoXCJcXFxcb3ZlcmxpbmVcIix7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJvdmVybGluZVwiLGJvZHk6cn19KTtzKFwiXFxcXHVuZGVybGluZVwiLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcInVuZGVybGluZVwiLGJvZHk6cn19KTtzKFwiXFxcXHJ1bGVcIix7bnVtQXJnczoyLG51bU9wdGlvbmFsQXJnczoxLGFyZ1R5cGVzOltcInNpemVcIixcInNpemVcIixcInNpemVcIl19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3ZhciBpPXRbMl07cmV0dXJue3R5cGU6XCJydWxlXCIsc2hpZnQ6ciYmci52YWx1ZSx3aWR0aDphLnZhbHVlLGhlaWdodDppLnZhbHVlfX0pO3MoXCJcXFxcY3Vyc29yXCIse251bUFyZ3M6MSxudW1PcHRpb25hbEFyZ3M6MSxhcmdUeXBlczpbXCJzaXplXCIsXCJzaXplXCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTtyZXR1cm57dHlwZTpcImN1cnNvclwiLHNoaWZ0OnImJnIudmFsdWUsaGVpZ2h0OmEudmFsdWV9fSk7cyhbXCJcXFxca2VyblwiLFwiXFxcXG1rZXJuXCJdLHtudW1BcmdzOjEsYXJnVHlwZXM6W1wic2l6ZVwiXX0sZnVuY3Rpb24oZSx0KXtyZXR1cm57dHlwZTpcImtlcm5cIixkaW1lbnNpb246dFswXS52YWx1ZX19KTtzKFwiXFxcXEthVGVYXCIse251bUFyZ3M6MH0sZnVuY3Rpb24oZSl7cmV0dXJue3R5cGU6XCJrYXRleFwifX0pO3MoXCJcXFxccGhhbnRvbVwiLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcInBoYW50b21cIix2YWx1ZTpsKHIpfX0pO3MoW1wiXFxcXG1hdGhvcmRcIixcIlxcXFxtYXRoYmluXCIsXCJcXFxcbWF0aHJlbFwiLFwiXFxcXG1hdGhvcGVuXCIsXCJcXFxcbWF0aGNsb3NlXCIsXCJcXFxcbWF0aHB1bmN0XCIsXCJcXFxcbWF0aGlubmVyXCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcIm1jbGFzc1wiLG1jbGFzczpcIm1cIitlLmZ1bmNOYW1lLnN1YnN0cig1KSx2YWx1ZTpsKHIpfX0pO3MoXCJcXFxcc3RhY2tyZWxcIix7bnVtQXJnczoyfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTt2YXIgaT1uZXcgbyhcIm9wXCIse3R5cGU6XCJvcFwiLGxpbWl0czp0cnVlLGFsd2F5c0hhbmRsZVN1cFN1Yjp0cnVlLHN5bWJvbDpmYWxzZSx2YWx1ZTpsKGEpfSxhLm1vZGUpO3ZhciBuPW5ldyBvKFwic3Vwc3ViXCIse2Jhc2U6aSxzdXA6cixzdWI6bnVsbH0sci5tb2RlKTtyZXR1cm57dHlwZTpcIm1jbGFzc1wiLG1jbGFzczpcIm1yZWxcIix2YWx1ZTpbbl19fSk7cyhcIlxcXFxibW9kXCIse251bUFyZ3M6MH0sZnVuY3Rpb24oZSx0KXtyZXR1cm57dHlwZTpcIm1vZFwiLG1vZFR5cGU6XCJibW9kXCIsdmFsdWU6bnVsbH19KTtzKFtcIlxcXFxwb2RcIixcIlxcXFxwbW9kXCIsXCJcXFxcbW9kXCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcIm1vZFwiLG1vZFR5cGU6ZS5mdW5jTmFtZS5zdWJzdHIoMSksdmFsdWU6bChyKX19KTt2YXIgaD17XCJcXFxcYmlnbFwiOnttY2xhc3M6XCJtb3BlblwiLHNpemU6MX0sXCJcXFxcQmlnbFwiOnttY2xhc3M6XCJtb3BlblwiLHNpemU6Mn0sXCJcXFxcYmlnZ2xcIjp7bWNsYXNzOlwibW9wZW5cIixzaXplOjN9LFwiXFxcXEJpZ2dsXCI6e21jbGFzczpcIm1vcGVuXCIsc2l6ZTo0fSxcIlxcXFxiaWdyXCI6e21jbGFzczpcIm1jbG9zZVwiLHNpemU6MX0sXCJcXFxcQmlnclwiOnttY2xhc3M6XCJtY2xvc2VcIixzaXplOjJ9LFwiXFxcXGJpZ2dyXCI6e21jbGFzczpcIm1jbG9zZVwiLHNpemU6M30sXCJcXFxcQmlnZ3JcIjp7bWNsYXNzOlwibWNsb3NlXCIsc2l6ZTo0fSxcIlxcXFxiaWdtXCI6e21jbGFzczpcIm1yZWxcIixzaXplOjF9LFwiXFxcXEJpZ21cIjp7bWNsYXNzOlwibXJlbFwiLHNpemU6Mn0sXCJcXFxcYmlnZ21cIjp7bWNsYXNzOlwibXJlbFwiLHNpemU6M30sXCJcXFxcQmlnZ21cIjp7bWNsYXNzOlwibXJlbFwiLHNpemU6NH0sXCJcXFxcYmlnXCI6e21jbGFzczpcIm1vcmRcIixzaXplOjF9LFwiXFxcXEJpZ1wiOnttY2xhc3M6XCJtb3JkXCIsc2l6ZToyfSxcIlxcXFxiaWdnXCI6e21jbGFzczpcIm1vcmRcIixzaXplOjN9LFwiXFxcXEJpZ2dcIjp7bWNsYXNzOlwibW9yZFwiLHNpemU6NH19O3ZhciBwPVtcIihcIixcIilcIixcIltcIixcIlxcXFxsYnJhY2tcIixcIl1cIixcIlxcXFxyYnJhY2tcIixcIlxcXFx7XCIsXCJcXFxcbGJyYWNlXCIsXCJcXFxcfVwiLFwiXFxcXHJicmFjZVwiLFwiXFxcXGxmbG9vclwiLFwiXFxcXHJmbG9vclwiLFwiXFxcXGxjZWlsXCIsXCJcXFxccmNlaWxcIixcIjxcIixcIj5cIixcIlxcXFxsYW5nbGVcIixcIlxcXFxyYW5nbGVcIixcIlxcXFxsdFwiLFwiXFxcXGd0XCIsXCJcXFxcbHZlcnRcIixcIlxcXFxydmVydFwiLFwiXFxcXGxWZXJ0XCIsXCJcXFxcclZlcnRcIixcIlxcXFxsZ3JvdXBcIixcIlxcXFxyZ3JvdXBcIixcIlxcXFxsbW91c3RhY2hlXCIsXCJcXFxccm1vdXN0YWNoZVwiLFwiL1wiLFwiXFxcXGJhY2tzbGFzaFwiLFwifFwiLFwiXFxcXHZlcnRcIixcIlxcXFx8XCIsXCJcXFxcVmVydFwiLFwiXFxcXHVwYXJyb3dcIixcIlxcXFxVcGFycm93XCIsXCJcXFxcZG93bmFycm93XCIsXCJcXFxcRG93bmFycm93XCIsXCJcXFxcdXBkb3duYXJyb3dcIixcIlxcXFxVcGRvd25hcnJvd1wiLFwiLlwiXTt2YXIgYz17XCJcXFxcQmJiXCI6XCJcXFxcbWF0aGJiXCIsXCJcXFxcYm9sZFwiOlwiXFxcXG1hdGhiZlwiLFwiXFxcXGZyYWtcIjpcIlxcXFxtYXRoZnJha1wifTtzKFtcIlxcXFxibHVlXCIsXCJcXFxcb3JhbmdlXCIsXCJcXFxccGlua1wiLFwiXFxcXHJlZFwiLFwiXFxcXGdyZWVuXCIsXCJcXFxcZ3JheVwiLFwiXFxcXHB1cnBsZVwiLFwiXFxcXGJsdWVBXCIsXCJcXFxcYmx1ZUJcIixcIlxcXFxibHVlQ1wiLFwiXFxcXGJsdWVEXCIsXCJcXFxcYmx1ZUVcIixcIlxcXFx0ZWFsQVwiLFwiXFxcXHRlYWxCXCIsXCJcXFxcdGVhbENcIixcIlxcXFx0ZWFsRFwiLFwiXFxcXHRlYWxFXCIsXCJcXFxcZ3JlZW5BXCIsXCJcXFxcZ3JlZW5CXCIsXCJcXFxcZ3JlZW5DXCIsXCJcXFxcZ3JlZW5EXCIsXCJcXFxcZ3JlZW5FXCIsXCJcXFxcZ29sZEFcIixcIlxcXFxnb2xkQlwiLFwiXFxcXGdvbGRDXCIsXCJcXFxcZ29sZERcIixcIlxcXFxnb2xkRVwiLFwiXFxcXHJlZEFcIixcIlxcXFxyZWRCXCIsXCJcXFxccmVkQ1wiLFwiXFxcXHJlZERcIixcIlxcXFxyZWRFXCIsXCJcXFxcbWFyb29uQVwiLFwiXFxcXG1hcm9vbkJcIixcIlxcXFxtYXJvb25DXCIsXCJcXFxcbWFyb29uRFwiLFwiXFxcXG1hcm9vbkVcIixcIlxcXFxwdXJwbGVBXCIsXCJcXFxccHVycGxlQlwiLFwiXFxcXHB1cnBsZUNcIixcIlxcXFxwdXJwbGVEXCIsXCJcXFxccHVycGxlRVwiLFwiXFxcXG1pbnRBXCIsXCJcXFxcbWludEJcIixcIlxcXFxtaW50Q1wiLFwiXFxcXGdyYXlBXCIsXCJcXFxcZ3JheUJcIixcIlxcXFxncmF5Q1wiLFwiXFxcXGdyYXlEXCIsXCJcXFxcZ3JheUVcIixcIlxcXFxncmF5RlwiLFwiXFxcXGdyYXlHXCIsXCJcXFxcZ3JheUhcIixcIlxcXFxncmF5SVwiLFwiXFxcXGthQmx1ZVwiLFwiXFxcXGthR3JlZW5cIl0se251bUFyZ3M6MSxhbGxvd2VkSW5UZXh0OnRydWUsZ3JlZWRpbmVzczozfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJjb2xvclwiLGNvbG9yOlwia2F0ZXgtXCIrZS5mdW5jTmFtZS5zbGljZSgxKSx2YWx1ZTpsKHIpfX0pO3MoW1wiXFxcXGFyY3NpblwiLFwiXFxcXGFyY2Nvc1wiLFwiXFxcXGFyY3RhblwiLFwiXFxcXGFyY3RnXCIsXCJcXFxcYXJjY3RnXCIsXCJcXFxcYXJnXCIsXCJcXFxcY2hcIixcIlxcXFxjb3NcIixcIlxcXFxjb3NlY1wiLFwiXFxcXGNvc2hcIixcIlxcXFxjb3RcIixcIlxcXFxjb3RnXCIsXCJcXFxcY290aFwiLFwiXFxcXGNzY1wiLFwiXFxcXGN0Z1wiLFwiXFxcXGN0aFwiLFwiXFxcXGRlZ1wiLFwiXFxcXGRpbVwiLFwiXFxcXGV4cFwiLFwiXFxcXGhvbVwiLFwiXFxcXGtlclwiLFwiXFxcXGxnXCIsXCJcXFxcbG5cIixcIlxcXFxsb2dcIixcIlxcXFxzZWNcIixcIlxcXFxzaW5cIixcIlxcXFxzaW5oXCIsXCJcXFxcc2hcIixcIlxcXFx0YW5cIixcIlxcXFx0YW5oXCIsXCJcXFxcdGdcIixcIlxcXFx0aFwiXSx7bnVtQXJnczowfSxmdW5jdGlvbihlKXtyZXR1cm57dHlwZTpcIm9wXCIsbGltaXRzOmZhbHNlLHN5bWJvbDpmYWxzZSxib2R5OmUuZnVuY05hbWV9fSk7cyhbXCJcXFxcZGV0XCIsXCJcXFxcZ2NkXCIsXCJcXFxcaW5mXCIsXCJcXFxcbGltXCIsXCJcXFxcbGltaW5mXCIsXCJcXFxcbGltc3VwXCIsXCJcXFxcbWF4XCIsXCJcXFxcbWluXCIsXCJcXFxcUHJcIixcIlxcXFxzdXBcIl0se251bUFyZ3M6MH0sZnVuY3Rpb24oZSl7cmV0dXJue3R5cGU6XCJvcFwiLGxpbWl0czp0cnVlLHN5bWJvbDpmYWxzZSxib2R5OmUuZnVuY05hbWV9fSk7cyhbXCJcXFxcaW50XCIsXCJcXFxcaWludFwiLFwiXFxcXGlpaW50XCIsXCJcXFxcb2ludFwiXSx7bnVtQXJnczowfSxmdW5jdGlvbihlKXtyZXR1cm57dHlwZTpcIm9wXCIsbGltaXRzOmZhbHNlLHN5bWJvbDp0cnVlLGJvZHk6ZS5mdW5jTmFtZX19KTtzKFtcIlxcXFxjb3Byb2RcIixcIlxcXFxiaWd2ZWVcIixcIlxcXFxiaWd3ZWRnZVwiLFwiXFxcXGJpZ3VwbHVzXCIsXCJcXFxcYmlnY2FwXCIsXCJcXFxcYmlnY3VwXCIsXCJcXFxcaW50b3BcIixcIlxcXFxwcm9kXCIsXCJcXFxcc3VtXCIsXCJcXFxcYmlnb3RpbWVzXCIsXCJcXFxcYmlnb3BsdXNcIixcIlxcXFxiaWdvZG90XCIsXCJcXFxcYmlnc3FjdXBcIixcIlxcXFxzbWFsbGludFwiXSx7bnVtQXJnczowfSxmdW5jdGlvbihlKXtyZXR1cm57dHlwZTpcIm9wXCIsbGltaXRzOnRydWUsc3ltYm9sOnRydWUsYm9keTplLmZ1bmNOYW1lfX0pO3MoXCJcXFxcbWF0aG9wXCIse251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwib3BcIixsaW1pdHM6ZmFsc2Usc3ltYm9sOmZhbHNlLHZhbHVlOmwocil9fSk7cyhbXCJcXFxcZGZyYWNcIixcIlxcXFxmcmFjXCIsXCJcXFxcdGZyYWNcIixcIlxcXFxkYmlub21cIixcIlxcXFxiaW5vbVwiLFwiXFxcXHRiaW5vbVwiLFwiXFxcXFxcXFxhdG9wZnJhY1wiXSx7bnVtQXJnczoyLGdyZWVkaW5lc3M6Mn0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07dmFyIGk9dm9pZCAwO3ZhciBuPW51bGw7dmFyIG89bnVsbDt2YXIgcz1cImF1dG9cIjtzd2l0Y2goZS5mdW5jTmFtZSl7Y2FzZVwiXFxcXGRmcmFjXCI6Y2FzZVwiXFxcXGZyYWNcIjpjYXNlXCJcXFxcdGZyYWNcIjppPXRydWU7YnJlYWs7Y2FzZVwiXFxcXFxcXFxhdG9wZnJhY1wiOmk9ZmFsc2U7YnJlYWs7Y2FzZVwiXFxcXGRiaW5vbVwiOmNhc2VcIlxcXFxiaW5vbVwiOmNhc2VcIlxcXFx0Ymlub21cIjppPWZhbHNlO249XCIoXCI7bz1cIilcIjticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVucmVjb2duaXplZCBnZW5mcmFjIGNvbW1hbmRcIil9c3dpdGNoKGUuZnVuY05hbWUpe2Nhc2VcIlxcXFxkZnJhY1wiOmNhc2VcIlxcXFxkYmlub21cIjpzPVwiZGlzcGxheVwiO2JyZWFrO2Nhc2VcIlxcXFx0ZnJhY1wiOmNhc2VcIlxcXFx0Ymlub21cIjpzPVwidGV4dFwiO2JyZWFrfXJldHVybnt0eXBlOlwiZ2VuZnJhY1wiLG51bWVyOnIsZGVub206YSxoYXNCYXJMaW5lOmksbGVmdERlbGltOm4scmlnaHREZWxpbTpvLHNpemU6c319KTtzKFtcIlxcXFxsbGFwXCIsXCJcXFxccmxhcFwiXSx7bnVtQXJnczoxLGFsbG93ZWRJblRleHQ6dHJ1ZX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOmUuZnVuY05hbWUuc2xpY2UoMSksYm9keTpyfX0pO3ZhciB2PWZ1bmN0aW9uIGUodCxyKXtpZihhLmNvbnRhaW5zKHAsdC52YWx1ZSkpe3JldHVybiB0fWVsc2V7dGhyb3cgbmV3IGkoXCJJbnZhbGlkIGRlbGltaXRlcjogJ1wiK3QudmFsdWUrXCInIGFmdGVyICdcIityLmZ1bmNOYW1lK1wiJ1wiLHQpfX07cyhbXCJcXFxcYmlnbFwiLFwiXFxcXEJpZ2xcIixcIlxcXFxiaWdnbFwiLFwiXFxcXEJpZ2dsXCIsXCJcXFxcYmlnclwiLFwiXFxcXEJpZ3JcIixcIlxcXFxiaWdnclwiLFwiXFxcXEJpZ2dyXCIsXCJcXFxcYmlnbVwiLFwiXFxcXEJpZ21cIixcIlxcXFxiaWdnbVwiLFwiXFxcXEJpZ2dtXCIsXCJcXFxcYmlnXCIsXCJcXFxcQmlnXCIsXCJcXFxcYmlnZ1wiLFwiXFxcXEJpZ2dcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj12KHRbMF0sZSk7cmV0dXJue3R5cGU6XCJkZWxpbXNpemluZ1wiLHNpemU6aFtlLmZ1bmNOYW1lXS5zaXplLG1jbGFzczpoW2UuZnVuY05hbWVdLm1jbGFzcyx2YWx1ZTpyLnZhbHVlfX0pO3MoW1wiXFxcXGxlZnRcIixcIlxcXFxyaWdodFwiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXYodFswXSxlKTtyZXR1cm57dHlwZTpcImxlZnRyaWdodFwiLHZhbHVlOnIudmFsdWV9fSk7cyhcIlxcXFxtaWRkbGVcIix7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXYodFswXSxlKTtpZighZS5wYXJzZXIubGVmdHJpZ2h0RGVwdGgpe3Rocm93IG5ldyBpKFwiXFxcXG1pZGRsZSB3aXRob3V0IHByZWNlZGluZyBcXFxcbGVmdFwiLHIpfXJldHVybnt0eXBlOlwibWlkZGxlXCIsdmFsdWU6ci52YWx1ZX19KTtzKFtcIlxcXFx0aW55XCIsXCJcXFxcc2NyaXB0c2l6ZVwiLFwiXFxcXGZvb3Rub3Rlc2l6ZVwiLFwiXFxcXHNtYWxsXCIsXCJcXFxcbm9ybWFsc2l6ZVwiLFwiXFxcXGxhcmdlXCIsXCJcXFxcTGFyZ2VcIixcIlxcXFxMQVJHRVwiLFwiXFxcXGh1Z2VcIixcIlxcXFxIdWdlXCJdLDAsbnVsbCk7cyhbXCJcXFxcZGlzcGxheXN0eWxlXCIsXCJcXFxcdGV4dHN0eWxlXCIsXCJcXFxcc2NyaXB0c3R5bGVcIixcIlxcXFxzY3JpcHRzY3JpcHRzdHlsZVwiXSwwLG51bGwpO3MoW1wiXFxcXHJtXCIsXCJcXFxcc2ZcIixcIlxcXFx0dFwiLFwiXFxcXGJmXCIsXCJcXFxcaXRcIl0sMCxudWxsKTtzKFtcIlxcXFxtYXRocm1cIixcIlxcXFxtYXRoaXRcIixcIlxcXFxtYXRoYmZcIixcIlxcXFxtYXRoYmJcIixcIlxcXFxtYXRoY2FsXCIsXCJcXFxcbWF0aGZyYWtcIixcIlxcXFxtYXRoc2NyXCIsXCJcXFxcbWF0aHNmXCIsXCJcXFxcbWF0aHR0XCIsXCJcXFxcQmJiXCIsXCJcXFxcYm9sZFwiLFwiXFxcXGZyYWtcIl0se251bUFyZ3M6MSxncmVlZGluZXNzOjJ9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT1lLmZ1bmNOYW1lO2lmKGEgaW4gYyl7YT1jW2FdfXJldHVybnt0eXBlOlwiZm9udFwiLGZvbnQ6YS5zbGljZSgxKSxib2R5OnJ9fSk7cyhbXCJcXFxcYWN1dGVcIixcIlxcXFxncmF2ZVwiLFwiXFxcXGRkb3RcIixcIlxcXFx0aWxkZVwiLFwiXFxcXGJhclwiLFwiXFxcXGJyZXZlXCIsXCJcXFxcY2hlY2tcIixcIlxcXFxoYXRcIixcIlxcXFx2ZWNcIixcIlxcXFxkb3RcIixcIlxcXFx3aWRlaGF0XCIsXCJcXFxcd2lkZXRpbGRlXCIsXCJcXFxcb3ZlcnJpZ2h0YXJyb3dcIixcIlxcXFxvdmVybGVmdGFycm93XCIsXCJcXFxcT3ZlcnJpZ2h0YXJyb3dcIixcIlxcXFxvdmVybGVmdHJpZ2h0YXJyb3dcIixcIlxcXFxvdmVyZ3JvdXBcIixcIlxcXFxvdmVybGluZXNlZ21lbnRcIixcIlxcXFxvdmVybGVmdGhhcnBvb25cIixcIlxcXFxvdmVycmlnaHRoYXJwb29uXCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgaT0hYS5jb250YWlucyhbXCJcXFxcYWN1dGVcIixcIlxcXFxncmF2ZVwiLFwiXFxcXGRkb3RcIixcIlxcXFx0aWxkZVwiLFwiXFxcXGJhclwiLFwiXFxcXGJyZXZlXCIsXCJcXFxcY2hlY2tcIixcIlxcXFxoYXRcIixcIlxcXFx2ZWNcIixcIlxcXFxkb3RcIl0sZS5mdW5jTmFtZSk7dmFyIG49IWl8fGEuY29udGFpbnMoW1wiXFxcXHdpZGVoYXRcIixcIlxcXFx3aWRldGlsZGVcIl0sZS5mdW5jTmFtZSk7cmV0dXJue3R5cGU6XCJhY2NlbnRcIixsYWJlbDplLmZ1bmNOYW1lLGlzU3RyZXRjaHk6aSxpc1NoaWZ0eTpuLHZhbHVlOmwociksYmFzZTpyfX0pO3MoW1wiXFxcXG92ZXJicmFjZVwiLFwiXFxcXHVuZGVyYnJhY2VcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwiaG9yaXpCcmFjZVwiLGxhYmVsOmUuZnVuY05hbWUsaXNPdmVyOi9eXFxcXG92ZXIvLnRlc3QoZS5mdW5jTmFtZSksYmFzZTpyfX0pO3MoW1wiXFxcXHVuZGVybGVmdGFycm93XCIsXCJcXFxcdW5kZXJyaWdodGFycm93XCIsXCJcXFxcdW5kZXJsZWZ0cmlnaHRhcnJvd1wiLFwiXFxcXHVuZGVyZ3JvdXBcIixcIlxcXFx1bmRlcmxpbmVzZWdtZW50XCIsXCJcXFxcdW5kZXJ0aWxkZVwiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJhY2NlbnRVbmRlclwiLGxhYmVsOmUuZnVuY05hbWUsdmFsdWU6bChyKSxib2R5OnJ9fSk7cyhbXCJcXFxceGxlZnRhcnJvd1wiLFwiXFxcXHhyaWdodGFycm93XCIsXCJcXFxceExlZnRhcnJvd1wiLFwiXFxcXHhSaWdodGFycm93XCIsXCJcXFxceGxlZnRyaWdodGFycm93XCIsXCJcXFxceExlZnRyaWdodGFycm93XCIsXCJcXFxceGhvb2tsZWZ0YXJyb3dcIixcIlxcXFx4aG9va3JpZ2h0YXJyb3dcIixcIlxcXFx4bWFwc3RvXCIsXCJcXFxceHJpZ2h0aGFycG9vbmRvd25cIixcIlxcXFx4cmlnaHRoYXJwb29udXBcIixcIlxcXFx4bGVmdGhhcnBvb25kb3duXCIsXCJcXFxceGxlZnRoYXJwb29udXBcIixcIlxcXFx4cmlnaHRsZWZ0aGFycG9vbnNcIixcIlxcXFx4bGVmdHJpZ2h0aGFycG9vbnNcIixcIlxcXFx4TG9uZ2VxdWFsXCIsXCJcXFxceHR3b2hlYWRyaWdodGFycm93XCIsXCJcXFxceHR3b2hlYWRsZWZ0YXJyb3dcIixcIlxcXFx4TG9uZ2VxdWFsXCIsXCJcXFxceHRvZnJvbVwiXSx7bnVtQXJnczoxLG51bU9wdGlvbmFsQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTtyZXR1cm57dHlwZTpcInhBcnJvd1wiLGxhYmVsOmUuZnVuY05hbWUsYm9keTphLGJlbG93OnJ9fSk7cyhbXCJcXFxcY2FuY2VsXCIsXCJcXFxcYmNhbmNlbFwiLFwiXFxcXHhjYW5jZWxcIixcIlxcXFxzb3V0XCIsXCJcXFxcZmJveFwiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJlbmNsb3NlXCIsbGFiZWw6ZS5mdW5jTmFtZSxib2R5OnJ9fSk7cyhbXCJcXFxcb3ZlclwiLFwiXFxcXGNob29zZVwiLFwiXFxcXGF0b3BcIl0se251bUFyZ3M6MCxpbmZpeDp0cnVlfSxmdW5jdGlvbihlKXt2YXIgdD12b2lkIDA7c3dpdGNoKGUuZnVuY05hbWUpe2Nhc2VcIlxcXFxvdmVyXCI6dD1cIlxcXFxmcmFjXCI7YnJlYWs7Y2FzZVwiXFxcXGNob29zZVwiOnQ9XCJcXFxcYmlub21cIjticmVhaztjYXNlXCJcXFxcYXRvcFwiOnQ9XCJcXFxcXFxcXGF0b3BmcmFjXCI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJVbnJlY29nbml6ZWQgaW5maXggZ2VuZnJhYyBjb21tYW5kXCIpfXJldHVybnt0eXBlOlwiaW5maXhcIixyZXBsYWNlV2l0aDp0LHRva2VuOmUudG9rZW59fSk7cyhbXCJcXFxcXFxcXFwiLFwiXFxcXGNyXCJdLHtudW1BcmdzOjAsbnVtT3B0aW9uYWxBcmdzOjEsYXJnVHlwZXM6W1wic2l6ZVwiXX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwiY3JcIixzaXplOnJ9fSk7cyhbXCJcXFxcYmVnaW5cIixcIlxcXFxlbmRcIl0se251bUFyZ3M6MSxhcmdUeXBlczpbXCJ0ZXh0XCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07aWYoci50eXBlIT09XCJvcmRncm91cFwiKXt0aHJvdyBuZXcgaShcIkludmFsaWQgZW52aXJvbm1lbnQgbmFtZVwiLHIpfXZhciBhPVwiXCI7Zm9yKHZhciBuPTA7bjxyLnZhbHVlLmxlbmd0aDsrK24pe2ErPXIudmFsdWVbbl0udmFsdWV9cmV0dXJue3R5cGU6XCJlbnZpcm9ubWVudFwiLG5hbWU6YSxuYW1lR3JvdXA6cn19KX0se1wiLi9QYXJzZUVycm9yXCI6MTAsXCIuL3BhcnNlRGF0YVwiOjI2LFwiLi91dGlsc1wiOjMxfV0sMjQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUscil7dC5leHBvcnRzW2VdPXJ9YShcIlxcXFxiZ3JvdXBcIixcIntcIik7YShcIlxcXFxlZ3JvdXBcIixcIn1cIik7YShcIlxcXFxiZWdpbmdyb3VwXCIsXCJ7XCIpO2EoXCJcXFxcZW5kZ3JvdXBcIixcIn1cIik7YShcIlxcXFxvdmVyc2V0XCIsXCJcXFxcbWF0aG9weyMyfVxcXFxsaW1pdHNeeyMxfVwiKTthKFwiXFxcXHVuZGVyc2V0XCIsXCJcXFxcbWF0aG9weyMyfVxcXFxsaW1pdHNfeyMxfVwiKTthKFwiXFxcXGJveGVkXCIsXCJcXFxcZmJveHtcXFxcZGlzcGxheXN0eWxleyMxfX1cIik7YShcIlxcXFxpZmZcIixcIlxcXFw7XFxcXExvbmdsZWZ0cmlnaHRhcnJvd1xcXFw7XCIpO2EoXCJcXFxcaW1wbGllc1wiLFwiXFxcXDtcXFxcTG9uZ3JpZ2h0YXJyb3dcXFxcO1wiKTthKFwiXFxcXGltcGxpZWRieVwiLFwiXFxcXDtcXFxcTG9uZ2xlZnRhcnJvd1xcXFw7XCIpO2EoXCJcXFxcb3JkaW5hcnljb2xvblwiLFwiOlwiKTthKFwiXFxcXHZjZW50Y29sb25cIixcIlxcXFxtYXRocmVse1xcXFxtYXRob3BcXFxcb3JkaW5hcnljb2xvbn1cIik7YShcIlxcXFxkYmxjb2xvblwiLFwiXFxcXHZjZW50Y29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tLjltdX1cXFxcdmNlbnRjb2xvblwiKTthKFwiXFxcXGNvbG9uZXFxXCIsXCJcXFxcdmNlbnRjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX09XCIpO2EoXCJcXFxcQ29sb25lcXFcIixcIlxcXFxkYmxjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX09XCIpO2EoXCJcXFxcY29sb25lcVwiLFwiXFxcXHZjZW50Y29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXG1hdGhyZWx7LX1cIik7YShcIlxcXFxDb2xvbmVxXCIsXCJcXFxcZGJsY29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXG1hdGhyZWx7LX1cIik7YShcIlxcXFxlcXFjb2xvblwiLFwiPVxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcdmNlbnRjb2xvblwiKTthKFwiXFxcXEVxcWNvbG9uXCIsXCI9XFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxkYmxjb2xvblwiKTthKFwiXFxcXGVxY29sb25cIixcIlxcXFxtYXRocmVsey19XFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFx2Y2VudGNvbG9uXCIpO2EoXCJcXFxcRXFjb2xvblwiLFwiXFxcXG1hdGhyZWx7LX1cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXGRibGNvbG9uXCIpO2EoXCJcXFxcY29sb25hcHByb3hcIixcIlxcXFx2Y2VudGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxhcHByb3hcIik7YShcIlxcXFxDb2xvbmFwcHJveFwiLFwiXFxcXGRibGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxhcHByb3hcIik7YShcIlxcXFxjb2xvbnNpbVwiLFwiXFxcXHZjZW50Y29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXHNpbVwiKTthKFwiXFxcXENvbG9uc2ltXCIsXCJcXFxcZGJsY29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXHNpbVwiKTthKFwiXFxcXHJhdGlvXCIsXCJcXFxcdmNlbnRjb2xvblwiKTthKFwiXFxcXGNvbG9uY29sb25cIixcIlxcXFxkYmxjb2xvblwiKTthKFwiXFxcXGNvbG9uZXF1YWxzXCIsXCJcXFxcY29sb25lcXFcIik7YShcIlxcXFxjb2xvbmNvbG9uZXF1YWxzXCIsXCJcXFxcQ29sb25lcXFcIik7YShcIlxcXFxlcXVhbHNjb2xvblwiLFwiXFxcXGVxcWNvbG9uXCIpO2EoXCJcXFxcZXF1YWxzY29sb25jb2xvblwiLFwiXFxcXEVxcWNvbG9uXCIpO2EoXCJcXFxcY29sb25taW51c1wiLFwiXFxcXGNvbG9uZXFcIik7YShcIlxcXFxjb2xvbmNvbG9ubWludXNcIixcIlxcXFxDb2xvbmVxXCIpO2EoXCJcXFxcbWludXNjb2xvblwiLFwiXFxcXGVxY29sb25cIik7YShcIlxcXFxtaW51c2NvbG9uY29sb25cIixcIlxcXFxFcWNvbG9uXCIpO2EoXCJcXFxcY29sb25jb2xvbmFwcHJveFwiLFwiXFxcXENvbG9uYXBwcm94XCIpO2EoXCJcXFxcY29sb25jb2xvbnNpbVwiLFwiXFxcXENvbG9uc2ltXCIpO2EoXCJcXFxcc2ltY29sb25cIixcIlxcXFxzaW1cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXHZjZW50Y29sb25cIik7YShcIlxcXFxzaW1jb2xvbmNvbG9uXCIsXCJcXFxcc2ltXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxkYmxjb2xvblwiKTthKFwiXFxcXGFwcHJveGNvbG9uXCIsXCJcXFxcYXBwcm94XFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFx2Y2VudGNvbG9uXCIpO2EoXCJcXFxcYXBwcm94Y29sb25jb2xvblwiLFwiXFxcXGFwcHJveFxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcZGJsY29sb25cIil9LHt9XSwyNTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL3V0aWxzXCIpO2Z1bmN0aW9uIGkoZSx0KXt0aGlzLnR5cGU9ZTt0aGlzLmF0dHJpYnV0ZXM9e307dGhpcy5jaGlsZHJlbj10fHxbXX1pLnByb3RvdHlwZS5zZXRBdHRyaWJ1dGU9ZnVuY3Rpb24oZSx0KXt0aGlzLmF0dHJpYnV0ZXNbZV09dH07aS5wcm90b3R5cGUudG9Ob2RlPWZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHRoaXMudHlwZSk7Zm9yKHZhciB0IGluIHRoaXMuYXR0cmlidXRlcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuYXR0cmlidXRlcyx0KSl7ZS5zZXRBdHRyaWJ1dGUodCx0aGlzLmF0dHJpYnV0ZXNbdF0pfX1mb3IodmFyIHI9MDtyPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO3IrKyl7ZS5hcHBlbmRDaGlsZCh0aGlzLmNoaWxkcmVuW3JdLnRvTm9kZSgpKX1yZXR1cm4gZX07aS5wcm90b3R5cGUudG9NYXJrdXA9ZnVuY3Rpb24oKXt2YXIgZT1cIjxcIit0aGlzLnR5cGU7Zm9yKHZhciB0IGluIHRoaXMuYXR0cmlidXRlcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuYXR0cmlidXRlcyx0KSl7ZSs9XCIgXCIrdCsnPVwiJztlKz1hLmVzY2FwZSh0aGlzLmF0dHJpYnV0ZXNbdF0pO2UrPSdcIid9fWUrPVwiPlwiO2Zvcih2YXIgcj0wO3I8dGhpcy5jaGlsZHJlbi5sZW5ndGg7cisrKXtlKz10aGlzLmNoaWxkcmVuW3JdLnRvTWFya3VwKCl9ZSs9XCI8L1wiK3RoaXMudHlwZStcIj5cIjtyZXR1cm4gZX07ZnVuY3Rpb24gbihlKXt0aGlzLnRleHQ9ZX1uLnByb3RvdHlwZS50b05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGhpcy50ZXh0KX07bi5wcm90b3R5cGUudG9NYXJrdXA9ZnVuY3Rpb24oKXtyZXR1cm4gYS5lc2NhcGUodGhpcy50ZXh0KX07dC5leHBvcnRzPXtNYXRoTm9kZTppLFRleHROb2RlOm59fSx7XCIuL3V0aWxzXCI6MzF9XSwyNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSx0LHIsYSxpKXt0aGlzLnR5cGU9ZTt0aGlzLnZhbHVlPXQ7dGhpcy5tb2RlPXI7aWYoYSYmKCFpfHxpLmxleGVyPT09YS5sZXhlcikpe3RoaXMubGV4ZXI9YS5sZXhlcjt0aGlzLnN0YXJ0PWEuc3RhcnQ7dGhpcy5lbmQ9KGl8fGEpLmVuZH19dC5leHBvcnRzPXtQYXJzZU5vZGU6YX19LHt9XSwyNzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL1BhcnNlclwiKTt2YXIgaT1mdW5jdGlvbiBlKHQscil7aWYoISh0eXBlb2YgdD09PVwic3RyaW5nXCJ8fHQgaW5zdGFuY2VvZiBTdHJpbmcpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiS2FUZVggY2FuIG9ubHkgcGFyc2Ugc3RyaW5nIHR5cGVkIGV4cHJlc3Npb25cIil9dmFyIGk9bmV3IGEodCxyKTtyZXR1cm4gaS5wYXJzZSgpfTt0LmV4cG9ydHM9aX0se1wiLi9QYXJzZXJcIjoxMX1dLDI4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vYnVpbGRDb21tb25cIik7dmFyIGk9ZShcIi4vbWF0aE1MVHJlZVwiKTt2YXIgbj1lKFwiLi91dGlsc1wiKTt2YXIgbz17d2lkZWhhdDpcIl5cIix3aWRldGlsZGU6XCJ+XCIsdW5kZXJ0aWxkZTpcIn5cIixvdmVybGVmdGFycm93OlwiXFx1MjE5MFwiLHVuZGVybGVmdGFycm93OlwiXFx1MjE5MFwiLHhsZWZ0YXJyb3c6XCJcXHUyMTkwXCIsb3ZlcnJpZ2h0YXJyb3c6XCJcXHUyMTkyXCIsdW5kZXJyaWdodGFycm93OlwiXFx1MjE5MlwiLHhyaWdodGFycm93OlwiXFx1MjE5MlwiLHVuZGVyYnJhY2U6XCJcXHUyM2I1XCIsb3ZlcmJyYWNlOlwiXFx1MjNkZVwiLG92ZXJsZWZ0cmlnaHRhcnJvdzpcIlxcdTIxOTRcIix1bmRlcmxlZnRyaWdodGFycm93OlwiXFx1MjE5NFwiLHhsZWZ0cmlnaHRhcnJvdzpcIlxcdTIxOTRcIixPdmVycmlnaHRhcnJvdzpcIlxcdTIxZDJcIix4UmlnaHRhcnJvdzpcIlxcdTIxZDJcIixvdmVybGVmdGhhcnBvb246XCJcXHUyMWJjXCIseGxlZnRoYXJwb29udXA6XCJcXHUyMWJjXCIsb3ZlcnJpZ2h0aGFycG9vbjpcIlxcdTIxYzBcIix4cmlnaHRoYXJwb29udXA6XCJcXHUyMWMwXCIseExlZnRhcnJvdzpcIlxcdTIxZDBcIix4TGVmdHJpZ2h0YXJyb3c6XCJcXHUyMWQ0XCIseGhvb2tsZWZ0YXJyb3c6XCJcXHUyMWE5XCIseGhvb2tyaWdodGFycm93OlwiXFx1MjFhYVwiLHhtYXBzdG86XCJcXHUyMWE2XCIseHJpZ2h0aGFycG9vbmRvd246XCJcXHUyMWMxXCIseGxlZnRoYXJwb29uZG93bjpcIlxcdTIxYmRcIix4cmlnaHRsZWZ0aGFycG9vbnM6XCJcXHUyMWNjXCIseGxlZnRyaWdodGhhcnBvb25zOlwiXFx1MjFjYlwiLHh0d29oZWFkbGVmdGFycm93OlwiXFx1MjE5ZVwiLHh0d29oZWFkcmlnaHRhcnJvdzpcIlxcdTIxYTBcIix4TG9uZ2VxdWFsOlwiPVwiLHh0b2Zyb206XCJcXHUyMWM0XCJ9O3ZhciBzPWZ1bmN0aW9uIGUodCl7dmFyIHI9bmV3IGkuTWF0aE5vZGUoXCJtb1wiLFtuZXcgaS5UZXh0Tm9kZShvW3Quc3Vic3RyKDEpXSldKTtyLnNldEF0dHJpYnV0ZShcInN0cmV0Y2h5XCIsXCJ0cnVlXCIpO3JldHVybiByfTt2YXIgbD17b3ZlcmxlZnRhcnJvdzpbLjUyMiwwLFwibGVmdGFycm93XCJdLHVuZGVybGVmdGFycm93OlsuNTIyLDAsXCJsZWZ0YXJyb3dcIl0seGxlZnRhcnJvdzpbLjI2MSwuMjYxLFwibGVmdGFycm93XCJdLG92ZXJyaWdodGFycm93OlsuNTIyLDAsXCJyaWdodGFycm93XCJdLHVuZGVycmlnaHRhcnJvdzpbLjUyMiwwLFwicmlnaHRhcnJvd1wiXSx4cmlnaHRhcnJvdzpbLjI2MSwuMjYxLFwicmlnaHRhcnJvd1wiXSxvdmVyYnJhY2U6Wy41NDgsMCxcIm92ZXJicmFjZVwiXSx1bmRlcmJyYWNlOlsuNTQ4LDAsXCJ1bmRlcmJyYWNlXCJdLG92ZXJsZWZ0cmlnaHRhcnJvdzpbLjUyMiwwLFwibGVmdHJpZ2h0YXJyb3dcIl0sdW5kZXJsZWZ0cmlnaHRhcnJvdzpbLjUyMiwwLFwibGVmdHJpZ2h0YXJyb3dcIl0seGxlZnRyaWdodGFycm93OlsuMjYxLC4yNjEsXCJsZWZ0cmlnaHRhcnJvd1wiXSxPdmVycmlnaHRhcnJvdzpbLjU2LDAsXCJkb3VibGVyaWdodGFycm93XCJdLHhMZWZ0YXJyb3c6Wy4yOCwuMjgsXCJkb3VibGVsZWZ0YXJyb3dcIl0seFJpZ2h0YXJyb3c6Wy4yOCwuMjgsXCJkb3VibGVyaWdodGFycm93XCJdLHhMZWZ0cmlnaHRhcnJvdzpbLjI4LC4yOCxcImRvdWJsZWxlZnRyaWdodGFycm93XCJdLG92ZXJsZWZ0aGFycG9vbjpbLjUyMiwwLFwibGVmdGhhcnBvb25cIl0sb3ZlcnJpZ2h0aGFycG9vbjpbLjUyMiwwLFwicmlnaHRoYXJwb29uXCJdLHhsZWZ0aGFycG9vbnVwOlsuMjYxLC4yNjEsXCJsZWZ0aGFycG9vblwiXSx4cmlnaHRoYXJwb29udXA6Wy4yNjEsLjI2MSxcInJpZ2h0aGFycG9vblwiXSx4aG9va2xlZnRhcnJvdzpbLjI2MSwuMjYxLFwiaG9va2xlZnRhcnJvd1wiXSx4aG9va3JpZ2h0YXJyb3c6Wy4yNjEsLjI2MSxcImhvb2tyaWdodGFycm93XCJdLG92ZXJsaW5lc2VnbWVudDpbLjQxNCwwLFwibGluZXNlZ21lbnRcIl0sdW5kZXJsaW5lc2VnbWVudDpbLjQxNCwwLFwibGluZXNlZ21lbnRcIl0seG1hcHN0bzpbLjI2MSwuMjYxLFwibWFwc3RvXCJdLHhyaWdodGhhcnBvb25kb3duOlsuMjYxLC4yNjEsXCJyaWdodGhhcnBvb25kb3duXCJdLHhsZWZ0aGFycG9vbmRvd246Wy4yNjEsLjI2MSxcImxlZnRoYXJwb29uZG93blwiXSx4cmlnaHRsZWZ0aGFycG9vbnM6Wy4zNTgsLjM1OCxcInJpZ2h0bGVmdGhhcnBvb25zXCJdLHhsZWZ0cmlnaHRoYXJwb29uczpbLjM1OCwuMzU4LFwibGVmdHJpZ2h0aGFycG9vbnNcIl0sb3Zlcmdyb3VwOlsuMzQyLDAsXCJvdmVyZ3JvdXBcIl0sdW5kZXJncm91cDpbLjM0MiwwLFwidW5kZXJncm91cFwiXSx4dHdvaGVhZGxlZnRhcnJvdzpbLjE2NywuMTY3LFwidHdvaGVhZGxlZnRhcnJvd1wiXSx4dHdvaGVhZHJpZ2h0YXJyb3c6Wy4xNjcsLjE2NyxcInR3b2hlYWRyaWdodGFycm93XCJdLHhMb25nZXF1YWw6Wy4xNjcsLjE2NyxcImxvbmdlcXVhbFwiXSx4dG9mcm9tOlsuMjY0LC4yNjQsXCJ0b2Zyb21cIl19O3ZhciB1PWZ1bmN0aW9uIGUodCxyKXt2YXIgaT10LnZhbHVlLmxhYmVsLnN1YnN0cigxKTt2YXIgbz0wO3ZhciBzPTA7dmFyIHU9W1wic3RyZXRjaHlcIl07dmFyIGg9XCJcIjtpZihuLmNvbnRhaW5zKFtcIndpZGVoYXRcIixcIndpZGV0aWxkZVwiLFwidW5kZXJ0aWxkZVwiXSxpKSl7dmFyIHA9dC52YWx1ZS52YWx1ZS5sZW5ndGg7aWYocD41KXtvPS4zMTI7aD0oaT09PVwid2lkZWhhdFwiP1wid2lkZWhhdFwiOlwidGlsZGVcIikrXCI0XCJ9ZWxzZXt2YXIgYz1bMSwxLDIsMiwzLDNdW3BdO2lmKGk9PT1cIndpZGVoYXRcIil7bz1bMCwuMjQsLjMsLjMsLjM2LC4zNl1bcF07aD1cIndpZGVoYXRcIitjfWVsc2V7bz1bMCwuMjYsLjMsLjMsLjM0LC4zNF1bcF07aD1cInRpbGRlXCIrY319fWVsc2V7dmFyIHY9bFtpXTtvPXZbMF07cz12WzFdO2g9dlsyXTtpZihpLnN1YnN0cigwLDEpPT09XCJ4XCIpe3UucHVzaChcIngtYXJyb3dcIil9fXZhciBmPXZvaWQgMDtpZihyLmNvbG9yKXt1LnB1c2goaCk7dS5wdXNoKFwibWFza1wiKTt1LnB1c2goaCtcIi1tYXNrXCIpO2Y9YS5tYWtlU3Bhbih1LFtdLHIpO2Yuc3R5bGUuYmFja2dyb3VuZENvbG9yPXIuY29sb3J9ZWxzZXt1LnB1c2goaCk7Zj1hLm1ha2VTcGFuKHUsW10scil9Zi5oZWlnaHQ9bztmLmRlcHRoPXM7Zi5tYXhGb250U2l6ZT0xO3JldHVybiBmfTt2YXIgaD1mdW5jdGlvbiBlKHQscixpLG4sbyl7dmFyIHM9YS5tYWtlU3BhbihbXCJzdHJldGNoeVwiLGldLFtdLG8pO2lmKG8uY29sb3Ipe2lmKGk9PT1cImZib3hcIil7cy5zdHlsZS5ib3JkZXJDb2xvcj1vLmNvbG9yfWVsc2V7cy5jbGFzc2VzWzJdPWkrXCItbWFza1wiO3Muc3R5bGUuYmFja2dyb3VuZENvbG9yPW8uY29sb3J9fXMuaGVpZ2h0PXQuaGVpZ2h0K3QuZGVwdGgrMipuO3Muc3R5bGUuaGVpZ2h0PXMuaGVpZ2h0K1wiZW1cIjtpZigvY2FuY2VsLy50ZXN0KGkpJiZyKXtzLm1heEZvbnRTaXplPTEuMn1lbHNle3MubWF4Rm9udFNpemU9MX1yZXR1cm4gc307dC5leHBvcnRzPXtlbmNsb3NlU3BhbjpoLG1hdGhNTG5vZGU6cyxzdmdTcGFuOnV9fSx7XCIuL2J1aWxkQ29tbW9uXCI6MTQsXCIuL21hdGhNTFRyZWVcIjoyNSxcIi4vdXRpbHNcIjozMX1dLDI5OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dC5leHBvcnRzPXttYXRoOnt9LHRleHQ6e319O2Z1bmN0aW9uIGEoZSxyLGEsaSxuKXt0LmV4cG9ydHNbZV1bbl09e2ZvbnQ6cixncm91cDphLHJlcGxhY2U6aX19dmFyIGk9XCJtYXRoXCI7dmFyIG49XCJ0ZXh0XCI7dmFyIG89XCJtYWluXCI7dmFyIHM9XCJhbXNcIjt2YXIgbD1cImFjY2VudFwiO3ZhciB1PVwiYmluXCI7dmFyIGg9XCJjbG9zZVwiO3ZhciBwPVwiaW5uZXJcIjt2YXIgYz1cIm1hdGhvcmRcIjt2YXIgdj1cIm9wXCI7dmFyIGY9XCJvcGVuXCI7dmFyIG09XCJwdW5jdFwiO3ZhciBkPVwicmVsXCI7dmFyIGc9XCJzcGFjaW5nXCI7dmFyIHk9XCJ0ZXh0b3JkXCI7YShpLG8sZCxcIlxcdTIyNjFcIixcIlxcXFxlcXVpdlwiKTthKGksbyxkLFwiXFx1MjI3YVwiLFwiXFxcXHByZWNcIik7YShpLG8sZCxcIlxcdTIyN2JcIixcIlxcXFxzdWNjXCIpO2EoaSxvLGQsXCJcXHUyMjNjXCIsXCJcXFxcc2ltXCIpO2EoaSxvLGQsXCJcXHUyMmE1XCIsXCJcXFxccGVycFwiKTthKGksbyxkLFwiXFx1MmFhZlwiLFwiXFxcXHByZWNlcVwiKTthKGksbyxkLFwiXFx1MmFiMFwiLFwiXFxcXHN1Y2NlcVwiKTthKGksbyxkLFwiXFx1MjI0M1wiLFwiXFxcXHNpbWVxXCIpO2EoaSxvLGQsXCJcXHUyMjIzXCIsXCJcXFxcbWlkXCIpO2EoaSxvLGQsXCJcXHUyMjZhXCIsXCJcXFxcbGxcIik7YShpLG8sZCxcIlxcdTIyNmJcIixcIlxcXFxnZ1wiKTthKGksbyxkLFwiXFx1MjI0ZFwiLFwiXFxcXGFzeW1wXCIpO2EoaSxvLGQsXCJcXHUyMjI1XCIsXCJcXFxccGFyYWxsZWxcIik7YShpLG8sZCxcIlxcdTIyYzhcIixcIlxcXFxib3d0aWVcIik7YShpLG8sZCxcIlxcdTIzMjNcIixcIlxcXFxzbWlsZVwiKTthKGksbyxkLFwiXFx1MjI5MVwiLFwiXFxcXHNxc3Vic2V0ZXFcIik7YShpLG8sZCxcIlxcdTIyOTJcIixcIlxcXFxzcXN1cHNldGVxXCIpO2EoaSxvLGQsXCJcXHUyMjUwXCIsXCJcXFxcZG90ZXFcIik7YShpLG8sZCxcIlxcdTIzMjJcIixcIlxcXFxmcm93blwiKTthKGksbyxkLFwiXFx1MjIwYlwiLFwiXFxcXG5pXCIpO2EoaSxvLGQsXCJcXHUyMjFkXCIsXCJcXFxccHJvcHRvXCIpO2EoaSxvLGQsXCJcXHUyMmEyXCIsXCJcXFxcdmRhc2hcIik7YShpLG8sZCxcIlxcdTIyYTNcIixcIlxcXFxkYXNodlwiKTthKGksbyxkLFwiXFx1MjIwYlwiLFwiXFxcXG93bnNcIik7XG5hKGksbyxtLFwiLlwiLFwiXFxcXGxkb3RwXCIpO2EoaSxvLG0sXCJcXHUyMmM1XCIsXCJcXFxcY2RvdHBcIik7YShpLG8seSxcIiNcIixcIlxcXFwjXCIpO2EobixvLHksXCIjXCIsXCJcXFxcI1wiKTthKGksbyx5LFwiJlwiLFwiXFxcXCZcIik7YShuLG8seSxcIiZcIixcIlxcXFwmXCIpO2EoaSxvLHksXCJcXHUyMTM1XCIsXCJcXFxcYWxlcGhcIik7YShpLG8seSxcIlxcdTIyMDBcIixcIlxcXFxmb3JhbGxcIik7YShpLG8seSxcIlxcdTIxMGZcIixcIlxcXFxoYmFyXCIpO2EoaSxvLHksXCJcXHUyMjAzXCIsXCJcXFxcZXhpc3RzXCIpO2EoaSxvLHksXCJcXHUyMjA3XCIsXCJcXFxcbmFibGFcIik7YShpLG8seSxcIlxcdTI2NmRcIixcIlxcXFxmbGF0XCIpO2EoaSxvLHksXCJcXHUyMTEzXCIsXCJcXFxcZWxsXCIpO2EoaSxvLHksXCJcXHUyNjZlXCIsXCJcXFxcbmF0dXJhbFwiKTthKGksbyx5LFwiXFx1MjY2M1wiLFwiXFxcXGNsdWJzdWl0XCIpO2EoaSxvLHksXCJcXHUyMTE4XCIsXCJcXFxcd3BcIik7YShpLG8seSxcIlxcdTI2NmZcIixcIlxcXFxzaGFycFwiKTthKGksbyx5LFwiXFx1MjY2MlwiLFwiXFxcXGRpYW1vbmRzdWl0XCIpO2EoaSxvLHksXCJcXHUyMTFjXCIsXCJcXFxcUmVcIik7YShpLG8seSxcIlxcdTI2NjFcIixcIlxcXFxoZWFydHN1aXRcIik7YShpLG8seSxcIlxcdTIxMTFcIixcIlxcXFxJbVwiKTthKGksbyx5LFwiXFx1MjY2MFwiLFwiXFxcXHNwYWRlc3VpdFwiKTthKGksbyx5LFwiXFx1MjAyMFwiLFwiXFxcXGRhZ1wiKTthKG4sbyx5LFwiXFx1MjAyMFwiLFwiXFxcXGRhZ1wiKTthKG4sbyx5LFwiXFx1MjAyMFwiLFwiXFxcXHRleHRkYWdnZXJcIik7YShpLG8seSxcIlxcdTIwMjFcIixcIlxcXFxkZGFnXCIpO2EobixvLHksXCJcXHUyMDIxXCIsXCJcXFxcZGRhZ1wiKTthKG4sbyx5LFwiXFx1MjAyMFwiLFwiXFxcXHRleHRkYWdnZXJkYmxcIik7YShpLG8saCxcIlxcdTIzYjFcIixcIlxcXFxybW91c3RhY2hlXCIpO2EoaSxvLGYsXCJcXHUyM2IwXCIsXCJcXFxcbG1vdXN0YWNoZVwiKTthKGksbyxoLFwiXFx1MjdlZlwiLFwiXFxcXHJncm91cFwiKTthKGksbyxmLFwiXFx1MjdlZVwiLFwiXFxcXGxncm91cFwiKTthKGksbyx1LFwiXFx1MjIxM1wiLFwiXFxcXG1wXCIpO2EoaSxvLHUsXCJcXHUyMjk2XCIsXCJcXFxcb21pbnVzXCIpO2EoaSxvLHUsXCJcXHUyMjhlXCIsXCJcXFxcdXBsdXNcIik7YShpLG8sdSxcIlxcdTIyOTNcIixcIlxcXFxzcWNhcFwiKTthKGksbyx1LFwiXFx1MjIxN1wiLFwiXFxcXGFzdFwiKTthKGksbyx1LFwiXFx1MjI5NFwiLFwiXFxcXHNxY3VwXCIpO2EoaSxvLHUsXCJcXHUyNWVmXCIsXCJcXFxcYmlnY2lyY1wiKTthKGksbyx1LFwiXFx1MjIxOVwiLFwiXFxcXGJ1bGxldFwiKTthKGksbyx1LFwiXFx1MjAyMVwiLFwiXFxcXGRkYWdnZXJcIik7YShpLG8sdSxcIlxcdTIyNDBcIixcIlxcXFx3clwiKTthKGksbyx1LFwiXFx1MmEzZlwiLFwiXFxcXGFtYWxnXCIpO2EoaSxvLGQsXCJcXHUyN2Y1XCIsXCJcXFxcbG9uZ2xlZnRhcnJvd1wiKTthKGksbyxkLFwiXFx1MjFkMFwiLFwiXFxcXExlZnRhcnJvd1wiKTthKGksbyxkLFwiXFx1MjdmOFwiLFwiXFxcXExvbmdsZWZ0YXJyb3dcIik7YShpLG8sZCxcIlxcdTI3ZjZcIixcIlxcXFxsb25ncmlnaHRhcnJvd1wiKTthKGksbyxkLFwiXFx1MjFkMlwiLFwiXFxcXFJpZ2h0YXJyb3dcIik7YShpLG8sZCxcIlxcdTI3ZjlcIixcIlxcXFxMb25ncmlnaHRhcnJvd1wiKTthKGksbyxkLFwiXFx1MjE5NFwiLFwiXFxcXGxlZnRyaWdodGFycm93XCIpO2EoaSxvLGQsXCJcXHUyN2Y3XCIsXCJcXFxcbG9uZ2xlZnRyaWdodGFycm93XCIpO2EoaSxvLGQsXCJcXHUyMWQ0XCIsXCJcXFxcTGVmdHJpZ2h0YXJyb3dcIik7YShpLG8sZCxcIlxcdTI3ZmFcIixcIlxcXFxMb25nbGVmdHJpZ2h0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxYTZcIixcIlxcXFxtYXBzdG9cIik7YShpLG8sZCxcIlxcdTI3ZmNcIixcIlxcXFxsb25nbWFwc3RvXCIpO2EoaSxvLGQsXCJcXHUyMTk3XCIsXCJcXFxcbmVhcnJvd1wiKTthKGksbyxkLFwiXFx1MjFhOVwiLFwiXFxcXGhvb2tsZWZ0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxYWFcIixcIlxcXFxob29rcmlnaHRhcnJvd1wiKTthKGksbyxkLFwiXFx1MjE5OFwiLFwiXFxcXHNlYXJyb3dcIik7YShpLG8sZCxcIlxcdTIxYmNcIixcIlxcXFxsZWZ0aGFycG9vbnVwXCIpO2EoaSxvLGQsXCJcXHUyMWMwXCIsXCJcXFxccmlnaHRoYXJwb29udXBcIik7YShpLG8sZCxcIlxcdTIxOTlcIixcIlxcXFxzd2Fycm93XCIpO2EoaSxvLGQsXCJcXHUyMWJkXCIsXCJcXFxcbGVmdGhhcnBvb25kb3duXCIpO2EoaSxvLGQsXCJcXHUyMWMxXCIsXCJcXFxccmlnaHRoYXJwb29uZG93blwiKTthKGksbyxkLFwiXFx1MjE5NlwiLFwiXFxcXG53YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxY2NcIixcIlxcXFxyaWdodGxlZnRoYXJwb29uc1wiKTthKGkscyxkLFwiXFx1MjI2ZVwiLFwiXFxcXG5sZXNzXCIpO2EoaSxzLGQsXCJcXHVlMDEwXCIsXCJcXFxcbmxlcXNsYW50XCIpO2EoaSxzLGQsXCJcXHVlMDExXCIsXCJcXFxcbmxlcXFcIik7YShpLHMsZCxcIlxcdTJhODdcIixcIlxcXFxsbmVxXCIpO2EoaSxzLGQsXCJcXHUyMjY4XCIsXCJcXFxcbG5lcXFcIik7YShpLHMsZCxcIlxcdWUwMGNcIixcIlxcXFxsdmVydG5lcXFcIik7YShpLHMsZCxcIlxcdTIyZTZcIixcIlxcXFxsbnNpbVwiKTthKGkscyxkLFwiXFx1MmE4OVwiLFwiXFxcXGxuYXBwcm94XCIpO2EoaSxzLGQsXCJcXHUyMjgwXCIsXCJcXFxcbnByZWNcIik7YShpLHMsZCxcIlxcdTIyZTBcIixcIlxcXFxucHJlY2VxXCIpO2EoaSxzLGQsXCJcXHUyMmU4XCIsXCJcXFxccHJlY25zaW1cIik7YShpLHMsZCxcIlxcdTJhYjlcIixcIlxcXFxwcmVjbmFwcHJveFwiKTthKGkscyxkLFwiXFx1MjI0MVwiLFwiXFxcXG5zaW1cIik7YShpLHMsZCxcIlxcdWUwMDZcIixcIlxcXFxuc2hvcnRtaWRcIik7YShpLHMsZCxcIlxcdTIyMjRcIixcIlxcXFxubWlkXCIpO2EoaSxzLGQsXCJcXHUyMmFjXCIsXCJcXFxcbnZkYXNoXCIpO2EoaSxzLGQsXCJcXHUyMmFkXCIsXCJcXFxcbnZEYXNoXCIpO2EoaSxzLGQsXCJcXHUyMmVhXCIsXCJcXFxcbnRyaWFuZ2xlbGVmdFwiKTthKGkscyxkLFwiXFx1MjJlY1wiLFwiXFxcXG50cmlhbmdsZWxlZnRlcVwiKTthKGkscyxkLFwiXFx1MjI4YVwiLFwiXFxcXHN1YnNldG5lcVwiKTthKGkscyxkLFwiXFx1ZTAxYVwiLFwiXFxcXHZhcnN1YnNldG5lcVwiKTthKGkscyxkLFwiXFx1MmFjYlwiLFwiXFxcXHN1YnNldG5lcXFcIik7YShpLHMsZCxcIlxcdWUwMTdcIixcIlxcXFx2YXJzdWJzZXRuZXFxXCIpO2EoaSxzLGQsXCJcXHUyMjZmXCIsXCJcXFxcbmd0clwiKTthKGkscyxkLFwiXFx1ZTAwZlwiLFwiXFxcXG5nZXFzbGFudFwiKTthKGkscyxkLFwiXFx1ZTAwZVwiLFwiXFxcXG5nZXFxXCIpO2EoaSxzLGQsXCJcXHUyYTg4XCIsXCJcXFxcZ25lcVwiKTthKGkscyxkLFwiXFx1MjI2OVwiLFwiXFxcXGduZXFxXCIpO2EoaSxzLGQsXCJcXHVlMDBkXCIsXCJcXFxcZ3ZlcnRuZXFxXCIpO2EoaSxzLGQsXCJcXHUyMmU3XCIsXCJcXFxcZ25zaW1cIik7YShpLHMsZCxcIlxcdTJhOGFcIixcIlxcXFxnbmFwcHJveFwiKTthKGkscyxkLFwiXFx1MjI4MVwiLFwiXFxcXG5zdWNjXCIpO2EoaSxzLGQsXCJcXHUyMmUxXCIsXCJcXFxcbnN1Y2NlcVwiKTthKGkscyxkLFwiXFx1MjJlOVwiLFwiXFxcXHN1Y2Nuc2ltXCIpO2EoaSxzLGQsXCJcXHUyYWJhXCIsXCJcXFxcc3VjY25hcHByb3hcIik7YShpLHMsZCxcIlxcdTIyNDZcIixcIlxcXFxuY29uZ1wiKTthKGkscyxkLFwiXFx1ZTAwN1wiLFwiXFxcXG5zaG9ydHBhcmFsbGVsXCIpO2EoaSxzLGQsXCJcXHUyMjI2XCIsXCJcXFxcbnBhcmFsbGVsXCIpO2EoaSxzLGQsXCJcXHUyMmFmXCIsXCJcXFxcblZEYXNoXCIpO2EoaSxzLGQsXCJcXHUyMmViXCIsXCJcXFxcbnRyaWFuZ2xlcmlnaHRcIik7YShpLHMsZCxcIlxcdTIyZWRcIixcIlxcXFxudHJpYW5nbGVyaWdodGVxXCIpO2EoaSxzLGQsXCJcXHVlMDE4XCIsXCJcXFxcbnN1cHNldGVxcVwiKTthKGkscyxkLFwiXFx1MjI4YlwiLFwiXFxcXHN1cHNldG5lcVwiKTthKGkscyxkLFwiXFx1ZTAxYlwiLFwiXFxcXHZhcnN1cHNldG5lcVwiKTthKGkscyxkLFwiXFx1MmFjY1wiLFwiXFxcXHN1cHNldG5lcXFcIik7YShpLHMsZCxcIlxcdWUwMTlcIixcIlxcXFx2YXJzdXBzZXRuZXFxXCIpO2EoaSxzLGQsXCJcXHUyMmFlXCIsXCJcXFxcblZkYXNoXCIpO2EoaSxzLGQsXCJcXHUyYWI1XCIsXCJcXFxccHJlY25lcXFcIik7YShpLHMsZCxcIlxcdTJhYjZcIixcIlxcXFxzdWNjbmVxcVwiKTthKGkscyxkLFwiXFx1ZTAxNlwiLFwiXFxcXG5zdWJzZXRlcXFcIik7YShpLHMsdSxcIlxcdTIyYjRcIixcIlxcXFx1bmxoZFwiKTthKGkscyx1LFwiXFx1MjJiNVwiLFwiXFxcXHVucmhkXCIpO2EoaSxzLGQsXCJcXHUyMTlhXCIsXCJcXFxcbmxlZnRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjE5YlwiLFwiXFxcXG5yaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWNkXCIsXCJcXFxcbkxlZnRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFjZlwiLFwiXFxcXG5SaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWFlXCIsXCJcXFxcbmxlZnRyaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWNlXCIsXCJcXFxcbkxlZnRyaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyNWIzXCIsXCJcXFxcdmFydHJpYW5nbGVcIik7YShpLHMseSxcIlxcdTIxMGZcIixcIlxcXFxoc2xhc2hcIik7YShpLHMseSxcIlxcdTI1YmRcIixcIlxcXFx0cmlhbmdsZWRvd25cIik7YShpLHMseSxcIlxcdTI1Y2FcIixcIlxcXFxsb3plbmdlXCIpO2EoaSxzLHksXCJcXHUyNGM4XCIsXCJcXFxcY2lyY2xlZFNcIik7YShpLHMseSxcIlxceGFlXCIsXCJcXFxcY2lyY2xlZFJcIik7YShuLHMseSxcIlxceGFlXCIsXCJcXFxcY2lyY2xlZFJcIik7YShpLHMseSxcIlxcdTIyMjFcIixcIlxcXFxtZWFzdXJlZGFuZ2xlXCIpO2EoaSxzLHksXCJcXHUyMjA0XCIsXCJcXFxcbmV4aXN0c1wiKTthKGkscyx5LFwiXFx1MjEyN1wiLFwiXFxcXG1ob1wiKTthKGkscyx5LFwiXFx1MjEzMlwiLFwiXFxcXEZpbnZcIik7YShpLHMseSxcIlxcdTIxNDFcIixcIlxcXFxHYW1lXCIpO2EoaSxzLHksXCJrXCIsXCJcXFxcQmJia1wiKTthKGkscyx5LFwiXFx1MjAzNVwiLFwiXFxcXGJhY2twcmltZVwiKTthKGkscyx5LFwiXFx1MjViMlwiLFwiXFxcXGJsYWNrdHJpYW5nbGVcIik7YShpLHMseSxcIlxcdTI1YmNcIixcIlxcXFxibGFja3RyaWFuZ2xlZG93blwiKTthKGkscyx5LFwiXFx1MjVhMFwiLFwiXFxcXGJsYWNrc3F1YXJlXCIpO2EoaSxzLHksXCJcXHUyOWViXCIsXCJcXFxcYmxhY2tsb3plbmdlXCIpO2EoaSxzLHksXCJcXHUyNjA1XCIsXCJcXFxcYmlnc3RhclwiKTthKGkscyx5LFwiXFx1MjIyMlwiLFwiXFxcXHNwaGVyaWNhbGFuZ2xlXCIpO2EoaSxzLHksXCJcXHUyMjAxXCIsXCJcXFxcY29tcGxlbWVudFwiKTthKGkscyx5LFwiXFx4ZjBcIixcIlxcXFxldGhcIik7YShpLHMseSxcIlxcdTI1NzFcIixcIlxcXFxkaWFndXBcIik7YShpLHMseSxcIlxcdTI1NzJcIixcIlxcXFxkaWFnZG93blwiKTthKGkscyx5LFwiXFx1MjVhMVwiLFwiXFxcXHNxdWFyZVwiKTthKGkscyx5LFwiXFx1MjVhMVwiLFwiXFxcXEJveFwiKTthKGkscyx5LFwiXFx1MjVjYVwiLFwiXFxcXERpYW1vbmRcIik7YShpLHMseSxcIlxceGE1XCIsXCJcXFxceWVuXCIpO2EoaSxzLHksXCJcXHUyNzEzXCIsXCJcXFxcY2hlY2ttYXJrXCIpO2EobixzLHksXCJcXHUyNzEzXCIsXCJcXFxcY2hlY2ttYXJrXCIpO2EoaSxzLHksXCJcXHUyMTM2XCIsXCJcXFxcYmV0aFwiKTthKGkscyx5LFwiXFx1MjEzOFwiLFwiXFxcXGRhbGV0aFwiKTthKGkscyx5LFwiXFx1MjEzN1wiLFwiXFxcXGdpbWVsXCIpO2EoaSxzLHksXCJcXHUwM2RkXCIsXCJcXFxcZGlnYW1tYVwiKTthKGkscyx5LFwiXFx1MDNmMFwiLFwiXFxcXHZhcmthcHBhXCIpO2EoaSxzLGYsXCJcXHUyNTBjXCIsXCJcXFxcdWxjb3JuZXJcIik7YShpLHMsaCxcIlxcdTI1MTBcIixcIlxcXFx1cmNvcm5lclwiKTthKGkscyxmLFwiXFx1MjUxNFwiLFwiXFxcXGxsY29ybmVyXCIpO2EoaSxzLGgsXCJcXHUyNTE4XCIsXCJcXFxcbHJjb3JuZXJcIik7YShpLHMsZCxcIlxcdTIyNjZcIixcIlxcXFxsZXFxXCIpO2EoaSxzLGQsXCJcXHUyYTdkXCIsXCJcXFxcbGVxc2xhbnRcIik7YShpLHMsZCxcIlxcdTJhOTVcIixcIlxcXFxlcXNsYW50bGVzc1wiKTthKGkscyxkLFwiXFx1MjI3MlwiLFwiXFxcXGxlc3NzaW1cIik7YShpLHMsZCxcIlxcdTJhODVcIixcIlxcXFxsZXNzYXBwcm94XCIpO2EoaSxzLGQsXCJcXHUyMjRhXCIsXCJcXFxcYXBwcm94ZXFcIik7YShpLHMsdSxcIlxcdTIyZDZcIixcIlxcXFxsZXNzZG90XCIpO2EoaSxzLGQsXCJcXHUyMmQ4XCIsXCJcXFxcbGxsXCIpO2EoaSxzLGQsXCJcXHUyMjc2XCIsXCJcXFxcbGVzc2d0clwiKTthKGkscyxkLFwiXFx1MjJkYVwiLFwiXFxcXGxlc3NlcWd0clwiKTthKGkscyxkLFwiXFx1MmE4YlwiLFwiXFxcXGxlc3NlcXFndHJcIik7YShpLHMsZCxcIlxcdTIyNTFcIixcIlxcXFxkb3RlcWRvdFwiKTthKGkscyxkLFwiXFx1MjI1M1wiLFwiXFxcXHJpc2luZ2RvdHNlcVwiKTthKGkscyxkLFwiXFx1MjI1MlwiLFwiXFxcXGZhbGxpbmdkb3RzZXFcIik7YShpLHMsZCxcIlxcdTIyM2RcIixcIlxcXFxiYWNrc2ltXCIpO2EoaSxzLGQsXCJcXHUyMmNkXCIsXCJcXFxcYmFja3NpbWVxXCIpO2EoaSxzLGQsXCJcXHUyYWM1XCIsXCJcXFxcc3Vic2V0ZXFxXCIpO2EoaSxzLGQsXCJcXHUyMmQwXCIsXCJcXFxcU3Vic2V0XCIpO2EoaSxzLGQsXCJcXHUyMjhmXCIsXCJcXFxcc3FzdWJzZXRcIik7YShpLHMsZCxcIlxcdTIyN2NcIixcIlxcXFxwcmVjY3VybHllcVwiKTthKGkscyxkLFwiXFx1MjJkZVwiLFwiXFxcXGN1cmx5ZXFwcmVjXCIpO2EoaSxzLGQsXCJcXHUyMjdlXCIsXCJcXFxccHJlY3NpbVwiKTthKGkscyxkLFwiXFx1MmFiN1wiLFwiXFxcXHByZWNhcHByb3hcIik7YShpLHMsZCxcIlxcdTIyYjJcIixcIlxcXFx2YXJ0cmlhbmdsZWxlZnRcIik7YShpLHMsZCxcIlxcdTIyYjRcIixcIlxcXFx0cmlhbmdsZWxlZnRlcVwiKTthKGkscyxkLFwiXFx1MjJhOFwiLFwiXFxcXHZEYXNoXCIpO2EoaSxzLGQsXCJcXHUyMmFhXCIsXCJcXFxcVnZkYXNoXCIpO2EoaSxzLGQsXCJcXHUyMzIzXCIsXCJcXFxcc21hbGxzbWlsZVwiKTthKGkscyxkLFwiXFx1MjMyMlwiLFwiXFxcXHNtYWxsZnJvd25cIik7YShpLHMsZCxcIlxcdTIyNGZcIixcIlxcXFxidW1wZXFcIik7YShpLHMsZCxcIlxcdTIyNGVcIixcIlxcXFxCdW1wZXFcIik7YShpLHMsZCxcIlxcdTIyNjdcIixcIlxcXFxnZXFxXCIpO2EoaSxzLGQsXCJcXHUyYTdlXCIsXCJcXFxcZ2Vxc2xhbnRcIik7YShpLHMsZCxcIlxcdTJhOTZcIixcIlxcXFxlcXNsYW50Z3RyXCIpO2EoaSxzLGQsXCJcXHUyMjczXCIsXCJcXFxcZ3Ryc2ltXCIpO2EoaSxzLGQsXCJcXHUyYTg2XCIsXCJcXFxcZ3RyYXBwcm94XCIpO2EoaSxzLHUsXCJcXHUyMmQ3XCIsXCJcXFxcZ3RyZG90XCIpO2EoaSxzLGQsXCJcXHUyMmQ5XCIsXCJcXFxcZ2dnXCIpO2EoaSxzLGQsXCJcXHUyMjc3XCIsXCJcXFxcZ3RybGVzc1wiKTthKGkscyxkLFwiXFx1MjJkYlwiLFwiXFxcXGd0cmVxbGVzc1wiKTthKGkscyxkLFwiXFx1MmE4Y1wiLFwiXFxcXGd0cmVxcWxlc3NcIik7YShpLHMsZCxcIlxcdTIyNTZcIixcIlxcXFxlcWNpcmNcIik7YShpLHMsZCxcIlxcdTIyNTdcIixcIlxcXFxjaXJjZXFcIik7YShpLHMsZCxcIlxcdTIyNWNcIixcIlxcXFx0cmlhbmdsZXFcIik7YShpLHMsZCxcIlxcdTIyM2NcIixcIlxcXFx0aGlja3NpbVwiKTthKGkscyxkLFwiXFx1MjI0OFwiLFwiXFxcXHRoaWNrYXBwcm94XCIpO2EoaSxzLGQsXCJcXHUyYWM2XCIsXCJcXFxcc3Vwc2V0ZXFxXCIpO2EoaSxzLGQsXCJcXHUyMmQxXCIsXCJcXFxcU3Vwc2V0XCIpO2EoaSxzLGQsXCJcXHUyMjkwXCIsXCJcXFxcc3FzdXBzZXRcIik7YShpLHMsZCxcIlxcdTIyN2RcIixcIlxcXFxzdWNjY3VybHllcVwiKTthKGkscyxkLFwiXFx1MjJkZlwiLFwiXFxcXGN1cmx5ZXFzdWNjXCIpO2EoaSxzLGQsXCJcXHUyMjdmXCIsXCJcXFxcc3VjY3NpbVwiKTthKGkscyxkLFwiXFx1MmFiOFwiLFwiXFxcXHN1Y2NhcHByb3hcIik7YShpLHMsZCxcIlxcdTIyYjNcIixcIlxcXFx2YXJ0cmlhbmdsZXJpZ2h0XCIpO2EoaSxzLGQsXCJcXHUyMmI1XCIsXCJcXFxcdHJpYW5nbGVyaWdodGVxXCIpO2EoaSxzLGQsXCJcXHUyMmE5XCIsXCJcXFxcVmRhc2hcIik7YShpLHMsZCxcIlxcdTIyMjNcIixcIlxcXFxzaG9ydG1pZFwiKTthKGkscyxkLFwiXFx1MjIyNVwiLFwiXFxcXHNob3J0cGFyYWxsZWxcIik7YShpLHMsZCxcIlxcdTIyNmNcIixcIlxcXFxiZXR3ZWVuXCIpO2EoaSxzLGQsXCJcXHUyMmQ0XCIsXCJcXFxccGl0Y2hmb3JrXCIpO2EoaSxzLGQsXCJcXHUyMjFkXCIsXCJcXFxcdmFycHJvcHRvXCIpO2EoaSxzLGQsXCJcXHUyNWMwXCIsXCJcXFxcYmxhY2t0cmlhbmdsZWxlZnRcIik7YShpLHMsZCxcIlxcdTIyMzRcIixcIlxcXFx0aGVyZWZvcmVcIik7YShpLHMsZCxcIlxcdTIyMGRcIixcIlxcXFxiYWNrZXBzaWxvblwiKTthKGkscyxkLFwiXFx1MjViNlwiLFwiXFxcXGJsYWNrdHJpYW5nbGVyaWdodFwiKTthKGkscyxkLFwiXFx1MjIzNVwiLFwiXFxcXGJlY2F1c2VcIik7YShpLHMsZCxcIlxcdTIyZDhcIixcIlxcXFxsbGxlc3NcIik7YShpLHMsZCxcIlxcdTIyZDlcIixcIlxcXFxnZ2d0clwiKTthKGkscyx1LFwiXFx1MjJiMlwiLFwiXFxcXGxoZFwiKTthKGkscyx1LFwiXFx1MjJiM1wiLFwiXFxcXHJoZFwiKTthKGkscyxkLFwiXFx1MjI0MlwiLFwiXFxcXGVxc2ltXCIpO2EoaSxvLGQsXCJcXHUyMmM4XCIsXCJcXFxcSm9pblwiKTthKGkscyxkLFwiXFx1MjI1MVwiLFwiXFxcXERvdGVxXCIpO2EoaSxzLHUsXCJcXHUyMjE0XCIsXCJcXFxcZG90cGx1c1wiKTthKGkscyx1LFwiXFx1MjIxNlwiLFwiXFxcXHNtYWxsc2V0bWludXNcIik7YShpLHMsdSxcIlxcdTIyZDJcIixcIlxcXFxDYXBcIik7YShpLHMsdSxcIlxcdTIyZDNcIixcIlxcXFxDdXBcIik7YShpLHMsdSxcIlxcdTJhNWVcIixcIlxcXFxkb3VibGViYXJ3ZWRnZVwiKTthKGkscyx1LFwiXFx1MjI5ZlwiLFwiXFxcXGJveG1pbnVzXCIpO2EoaSxzLHUsXCJcXHUyMjllXCIsXCJcXFxcYm94cGx1c1wiKTthKGkscyx1LFwiXFx1MjJjN1wiLFwiXFxcXGRpdmlkZW9udGltZXNcIik7YShpLHMsdSxcIlxcdTIyYzlcIixcIlxcXFxsdGltZXNcIik7YShpLHMsdSxcIlxcdTIyY2FcIixcIlxcXFxydGltZXNcIik7YShpLHMsdSxcIlxcdTIyY2JcIixcIlxcXFxsZWZ0dGhyZWV0aW1lc1wiKTthKGkscyx1LFwiXFx1MjJjY1wiLFwiXFxcXHJpZ2h0dGhyZWV0aW1lc1wiKTthKGkscyx1LFwiXFx1MjJjZlwiLFwiXFxcXGN1cmx5d2VkZ2VcIik7YShpLHMsdSxcIlxcdTIyY2VcIixcIlxcXFxjdXJseXZlZVwiKTthKGkscyx1LFwiXFx1MjI5ZFwiLFwiXFxcXGNpcmNsZWRkYXNoXCIpO2EoaSxzLHUsXCJcXHUyMjliXCIsXCJcXFxcY2lyY2xlZGFzdFwiKTthKGkscyx1LFwiXFx1MjJjNVwiLFwiXFxcXGNlbnRlcmRvdFwiKTthKGkscyx1LFwiXFx1MjJiYVwiLFwiXFxcXGludGVyY2FsXCIpO2EoaSxzLHUsXCJcXHUyMmQyXCIsXCJcXFxcZG91YmxlY2FwXCIpO2EoaSxzLHUsXCJcXHUyMmQzXCIsXCJcXFxcZG91YmxlY3VwXCIpO2EoaSxzLHUsXCJcXHUyMmEwXCIsXCJcXFxcYm94dGltZXNcIik7YShpLHMsZCxcIlxcdTIxZTJcIixcIlxcXFxkYXNocmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFlMFwiLFwiXFxcXGRhc2hsZWZ0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxYzdcIixcIlxcXFxsZWZ0bGVmdGFycm93c1wiKTthKGkscyxkLFwiXFx1MjFjNlwiLFwiXFxcXGxlZnRyaWdodGFycm93c1wiKTthKGkscyxkLFwiXFx1MjFkYVwiLFwiXFxcXExsZWZ0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxOWVcIixcIlxcXFx0d29oZWFkbGVmdGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWEyXCIsXCJcXFxcbGVmdGFycm93dGFpbFwiKTthKGkscyxkLFwiXFx1MjFhYlwiLFwiXFxcXGxvb3BhcnJvd2xlZnRcIik7YShpLHMsZCxcIlxcdTIxY2JcIixcIlxcXFxsZWZ0cmlnaHRoYXJwb29uc1wiKTthKGkscyxkLFwiXFx1MjFiNlwiLFwiXFxcXGN1cnZlYXJyb3dsZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMWJhXCIsXCJcXFxcY2lyY2xlYXJyb3dsZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMWIwXCIsXCJcXFxcTHNoXCIpO2EoaSxzLGQsXCJcXHUyMWM4XCIsXCJcXFxcdXB1cGFycm93c1wiKTthKGkscyxkLFwiXFx1MjFiZlwiLFwiXFxcXHVwaGFycG9vbmxlZnRcIik7YShpLHMsZCxcIlxcdTIxYzNcIixcIlxcXFxkb3duaGFycG9vbmxlZnRcIik7YShpLHMsZCxcIlxcdTIyYjhcIixcIlxcXFxtdWx0aW1hcFwiKTthKGkscyxkLFwiXFx1MjFhZFwiLFwiXFxcXGxlZnRyaWdodHNxdWlnYXJyb3dcIik7YShpLHMsZCxcIlxcdTIxYzlcIixcIlxcXFxyaWdodHJpZ2h0YXJyb3dzXCIpO2EoaSxzLGQsXCJcXHUyMWM0XCIsXCJcXFxccmlnaHRsZWZ0YXJyb3dzXCIpO2EoaSxzLGQsXCJcXHUyMWEwXCIsXCJcXFxcdHdvaGVhZHJpZ2h0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxYTNcIixcIlxcXFxyaWdodGFycm93dGFpbFwiKTthKGkscyxkLFwiXFx1MjFhY1wiLFwiXFxcXGxvb3BhcnJvd3JpZ2h0XCIpO2EoaSxzLGQsXCJcXHUyMWI3XCIsXCJcXFxcY3VydmVhcnJvd3JpZ2h0XCIpO2EoaSxzLGQsXCJcXHUyMWJiXCIsXCJcXFxcY2lyY2xlYXJyb3dyaWdodFwiKTthKGkscyxkLFwiXFx1MjFiMVwiLFwiXFxcXFJzaFwiKTthKGkscyxkLFwiXFx1MjFjYVwiLFwiXFxcXGRvd25kb3duYXJyb3dzXCIpO2EoaSxzLGQsXCJcXHUyMWJlXCIsXCJcXFxcdXBoYXJwb29ucmlnaHRcIik7YShpLHMsZCxcIlxcdTIxYzJcIixcIlxcXFxkb3duaGFycG9vbnJpZ2h0XCIpO2EoaSxzLGQsXCJcXHUyMWRkXCIsXCJcXFxccmlnaHRzcXVpZ2Fycm93XCIpO2EoaSxzLGQsXCJcXHUyMWRkXCIsXCJcXFxcbGVhZHN0b1wiKTthKGkscyxkLFwiXFx1MjFkYlwiLFwiXFxcXFJyaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWJlXCIsXCJcXFxccmVzdHJpY3Rpb25cIik7YShpLG8seSxcIlxcdTIwMThcIixcImBcIik7YShpLG8seSxcIiRcIixcIlxcXFwkXCIpO2EobixvLHksXCIkXCIsXCJcXFxcJFwiKTthKG4sbyx5LFwiJFwiLFwiXFxcXHRleHRkb2xsYXJcIik7YShpLG8seSxcIiVcIixcIlxcXFwlXCIpO2EobixvLHksXCIlXCIsXCJcXFxcJVwiKTthKGksbyx5LFwiX1wiLFwiXFxcXF9cIik7YShuLG8seSxcIl9cIixcIlxcXFxfXCIpO2EobixvLHksXCJfXCIsXCJcXFxcdGV4dHVuZGVyc2NvcmVcIik7YShpLG8seSxcIlxcdTIyMjBcIixcIlxcXFxhbmdsZVwiKTthKGksbyx5LFwiXFx1MjIxZVwiLFwiXFxcXGluZnR5XCIpO2EoaSxvLHksXCJcXHUyMDMyXCIsXCJcXFxccHJpbWVcIik7YShpLG8seSxcIlxcdTI1YjNcIixcIlxcXFx0cmlhbmdsZVwiKTthKGksbyx5LFwiXFx1MDM5M1wiLFwiXFxcXEdhbW1hXCIpO2EoaSxvLHksXCJcXHUwMzk0XCIsXCJcXFxcRGVsdGFcIik7YShpLG8seSxcIlxcdTAzOThcIixcIlxcXFxUaGV0YVwiKTthKGksbyx5LFwiXFx1MDM5YlwiLFwiXFxcXExhbWJkYVwiKTthKGksbyx5LFwiXFx1MDM5ZVwiLFwiXFxcXFhpXCIpO2EoaSxvLHksXCJcXHUwM2EwXCIsXCJcXFxcUGlcIik7YShpLG8seSxcIlxcdTAzYTNcIixcIlxcXFxTaWdtYVwiKTthKGksbyx5LFwiXFx1MDNhNVwiLFwiXFxcXFVwc2lsb25cIik7YShpLG8seSxcIlxcdTAzYTZcIixcIlxcXFxQaGlcIik7YShpLG8seSxcIlxcdTAzYThcIixcIlxcXFxQc2lcIik7YShpLG8seSxcIlxcdTAzYTlcIixcIlxcXFxPbWVnYVwiKTthKGksbyx5LFwiXFx4YWNcIixcIlxcXFxuZWdcIik7YShpLG8seSxcIlxceGFjXCIsXCJcXFxcbG5vdFwiKTthKGksbyx5LFwiXFx1MjJhNFwiLFwiXFxcXHRvcFwiKTthKGksbyx5LFwiXFx1MjJhNVwiLFwiXFxcXGJvdFwiKTthKGksbyx5LFwiXFx1MjIwNVwiLFwiXFxcXGVtcHR5c2V0XCIpO2EoaSxzLHksXCJcXHUyMjA1XCIsXCJcXFxcdmFybm90aGluZ1wiKTthKGksbyxjLFwiXFx1MDNiMVwiLFwiXFxcXGFscGhhXCIpO2EoaSxvLGMsXCJcXHUwM2IyXCIsXCJcXFxcYmV0YVwiKTthKGksbyxjLFwiXFx1MDNiM1wiLFwiXFxcXGdhbW1hXCIpO2EoaSxvLGMsXCJcXHUwM2I0XCIsXCJcXFxcZGVsdGFcIik7YShpLG8sYyxcIlxcdTAzZjVcIixcIlxcXFxlcHNpbG9uXCIpO2EoaSxvLGMsXCJcXHUwM2I2XCIsXCJcXFxcemV0YVwiKTthKGksbyxjLFwiXFx1MDNiN1wiLFwiXFxcXGV0YVwiKTthKGksbyxjLFwiXFx1MDNiOFwiLFwiXFxcXHRoZXRhXCIpO2EoaSxvLGMsXCJcXHUwM2I5XCIsXCJcXFxcaW90YVwiKTthKGksbyxjLFwiXFx1MDNiYVwiLFwiXFxcXGthcHBhXCIpO2EoaSxvLGMsXCJcXHUwM2JiXCIsXCJcXFxcbGFtYmRhXCIpO2EoaSxvLGMsXCJcXHUwM2JjXCIsXCJcXFxcbXVcIik7YShpLG8sYyxcIlxcdTAzYmRcIixcIlxcXFxudVwiKTthKGksbyxjLFwiXFx1MDNiZVwiLFwiXFxcXHhpXCIpO2EoaSxvLGMsXCJvXCIsXCJcXFxcb21pY3JvblwiKTthKGksbyxjLFwiXFx1MDNjMFwiLFwiXFxcXHBpXCIpO2EoaSxvLGMsXCJcXHUwM2MxXCIsXCJcXFxccmhvXCIpO2EoaSxvLGMsXCJcXHUwM2MzXCIsXCJcXFxcc2lnbWFcIik7YShpLG8sYyxcIlxcdTAzYzRcIixcIlxcXFx0YXVcIik7YShpLG8sYyxcIlxcdTAzYzVcIixcIlxcXFx1cHNpbG9uXCIpO2EoaSxvLGMsXCJcXHUwM2Q1XCIsXCJcXFxccGhpXCIpO2EoaSxvLGMsXCJcXHUwM2M3XCIsXCJcXFxcY2hpXCIpO2EoaSxvLGMsXCJcXHUwM2M4XCIsXCJcXFxccHNpXCIpO2EoaSxvLGMsXCJcXHUwM2M5XCIsXCJcXFxcb21lZ2FcIik7YShpLG8sYyxcIlxcdTAzYjVcIixcIlxcXFx2YXJlcHNpbG9uXCIpO2EoaSxvLGMsXCJcXHUwM2QxXCIsXCJcXFxcdmFydGhldGFcIik7YShpLG8sYyxcIlxcdTAzZDZcIixcIlxcXFx2YXJwaVwiKTthKGksbyxjLFwiXFx1MDNmMVwiLFwiXFxcXHZhcnJob1wiKTthKGksbyxjLFwiXFx1MDNjMlwiLFwiXFxcXHZhcnNpZ21hXCIpO2EoaSxvLGMsXCJcXHUwM2M2XCIsXCJcXFxcdmFycGhpXCIpO2EoaSxvLHUsXCJcXHUyMjE3XCIsXCIqXCIpO2EoaSxvLHUsXCIrXCIsXCIrXCIpO2EoaSxvLHUsXCJcXHUyMjEyXCIsXCItXCIpO2EoaSxvLHUsXCJcXHUyMmM1XCIsXCJcXFxcY2RvdFwiKTthKGksbyx1LFwiXFx1MjIxOFwiLFwiXFxcXGNpcmNcIik7YShpLG8sdSxcIlxceGY3XCIsXCJcXFxcZGl2XCIpO2EoaSxvLHUsXCJcXHhiMVwiLFwiXFxcXHBtXCIpO2EoaSxvLHUsXCJcXHhkN1wiLFwiXFxcXHRpbWVzXCIpO2EoaSxvLHUsXCJcXHUyMjI5XCIsXCJcXFxcY2FwXCIpO2EoaSxvLHUsXCJcXHUyMjJhXCIsXCJcXFxcY3VwXCIpO2EoaSxvLHUsXCJcXHUyMjE2XCIsXCJcXFxcc2V0bWludXNcIik7YShpLG8sdSxcIlxcdTIyMjdcIixcIlxcXFxsYW5kXCIpO2EoaSxvLHUsXCJcXHUyMjI4XCIsXCJcXFxcbG9yXCIpO2EoaSxvLHUsXCJcXHUyMjI3XCIsXCJcXFxcd2VkZ2VcIik7YShpLG8sdSxcIlxcdTIyMjhcIixcIlxcXFx2ZWVcIik7YShpLG8seSxcIlxcdTIyMWFcIixcIlxcXFxzdXJkXCIpO2EoaSxvLGYsXCIoXCIsXCIoXCIpO2EoaSxvLGYsXCJbXCIsXCJbXCIpO2EoaSxvLGYsXCJcXHUyN2U4XCIsXCJcXFxcbGFuZ2xlXCIpO2EoaSxvLGYsXCJcXHUyMjIzXCIsXCJcXFxcbHZlcnRcIik7YShpLG8sZixcIlxcdTIyMjVcIixcIlxcXFxsVmVydFwiKTthKGksbyxoLFwiKVwiLFwiKVwiKTthKGksbyxoLFwiXVwiLFwiXVwiKTthKGksbyxoLFwiP1wiLFwiP1wiKTthKGksbyxoLFwiIVwiLFwiIVwiKTthKGksbyxoLFwiXFx1MjdlOVwiLFwiXFxcXHJhbmdsZVwiKTthKGksbyxoLFwiXFx1MjIyM1wiLFwiXFxcXHJ2ZXJ0XCIpO2EoaSxvLGgsXCJcXHUyMjI1XCIsXCJcXFxcclZlcnRcIik7YShpLG8sZCxcIj1cIixcIj1cIik7YShpLG8sZCxcIjxcIixcIjxcIik7YShpLG8sZCxcIj5cIixcIj5cIik7YShpLG8sZCxcIjpcIixcIjpcIik7YShpLG8sZCxcIlxcdTIyNDhcIixcIlxcXFxhcHByb3hcIik7YShpLG8sZCxcIlxcdTIyNDVcIixcIlxcXFxjb25nXCIpO2EoaSxvLGQsXCJcXHUyMjY1XCIsXCJcXFxcZ2VcIik7YShpLG8sZCxcIlxcdTIyNjVcIixcIlxcXFxnZXFcIik7YShpLG8sZCxcIlxcdTIxOTBcIixcIlxcXFxnZXRzXCIpO2EoaSxvLGQsXCI+XCIsXCJcXFxcZ3RcIik7YShpLG8sZCxcIlxcdTIyMDhcIixcIlxcXFxpblwiKTthKGksbyxkLFwiXFx1MjIwOVwiLFwiXFxcXG5vdGluXCIpO2EoaSxvLGQsXCJcXHUyMjgyXCIsXCJcXFxcc3Vic2V0XCIpO2EoaSxvLGQsXCJcXHUyMjgzXCIsXCJcXFxcc3Vwc2V0XCIpO2EoaSxvLGQsXCJcXHUyMjg2XCIsXCJcXFxcc3Vic2V0ZXFcIik7YShpLG8sZCxcIlxcdTIyODdcIixcIlxcXFxzdXBzZXRlcVwiKTthKGkscyxkLFwiXFx1MjI4OFwiLFwiXFxcXG5zdWJzZXRlcVwiKTthKGkscyxkLFwiXFx1MjI4OVwiLFwiXFxcXG5zdXBzZXRlcVwiKTthKGksbyxkLFwiXFx1MjJhOFwiLFwiXFxcXG1vZGVsc1wiKTthKGksbyxkLFwiXFx1MjE5MFwiLFwiXFxcXGxlZnRhcnJvd1wiKTthKGksbyxkLFwiXFx1MjI2NFwiLFwiXFxcXGxlXCIpO2EoaSxvLGQsXCJcXHUyMjY0XCIsXCJcXFxcbGVxXCIpO2EoaSxvLGQsXCI8XCIsXCJcXFxcbHRcIik7YShpLG8sZCxcIlxcdTIyNjBcIixcIlxcXFxuZVwiKTthKGksbyxkLFwiXFx1MjI2MFwiLFwiXFxcXG5lcVwiKTthKGksbyxkLFwiXFx1MjE5MlwiLFwiXFxcXHJpZ2h0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxOTJcIixcIlxcXFx0b1wiKTthKGkscyxkLFwiXFx1MjI3MVwiLFwiXFxcXG5nZXFcIik7YShpLHMsZCxcIlxcdTIyNzBcIixcIlxcXFxubGVxXCIpO2EoaSxvLGcsbnVsbCxcIlxcXFwhXCIpO2EoaSxvLGcsXCJcXHhhMFwiLFwiXFxcXCBcIik7YShpLG8sZyxcIlxceGEwXCIsXCJ+XCIpO2EoaSxvLGcsbnVsbCxcIlxcXFwsXCIpO2EoaSxvLGcsbnVsbCxcIlxcXFw6XCIpO2EoaSxvLGcsbnVsbCxcIlxcXFw7XCIpO2EoaSxvLGcsbnVsbCxcIlxcXFxlbnNwYWNlXCIpO2EoaSxvLGcsbnVsbCxcIlxcXFxxcXVhZFwiKTthKGksbyxnLG51bGwsXCJcXFxccXVhZFwiKTthKGksbyxnLFwiXFx4YTBcIixcIlxcXFxzcGFjZVwiKTthKGksbyxtLFwiLFwiLFwiLFwiKTthKGksbyxtLFwiO1wiLFwiO1wiKTthKGksbyxtLFwiOlwiLFwiXFxcXGNvbG9uXCIpO2EoaSxzLHUsXCJcXHUyMmJjXCIsXCJcXFxcYmFyd2VkZ2VcIik7YShpLHMsdSxcIlxcdTIyYmJcIixcIlxcXFx2ZWViYXJcIik7YShpLG8sdSxcIlxcdTIyOTlcIixcIlxcXFxvZG90XCIpO2EoaSxvLHUsXCJcXHUyMjk1XCIsXCJcXFxcb3BsdXNcIik7YShpLG8sdSxcIlxcdTIyOTdcIixcIlxcXFxvdGltZXNcIik7YShpLG8seSxcIlxcdTIyMDJcIixcIlxcXFxwYXJ0aWFsXCIpO2EoaSxvLHUsXCJcXHUyMjk4XCIsXCJcXFxcb3NsYXNoXCIpO2EoaSxzLHUsXCJcXHUyMjlhXCIsXCJcXFxcY2lyY2xlZGNpcmNcIik7YShpLHMsdSxcIlxcdTIyYTFcIixcIlxcXFxib3hkb3RcIik7YShpLG8sdSxcIlxcdTI1YjNcIixcIlxcXFxiaWd0cmlhbmdsZXVwXCIpO2EoaSxvLHUsXCJcXHUyNWJkXCIsXCJcXFxcYmlndHJpYW5nbGVkb3duXCIpO2EoaSxvLHUsXCJcXHUyMDIwXCIsXCJcXFxcZGFnZ2VyXCIpO2EoaSxvLHUsXCJcXHUyMmM0XCIsXCJcXFxcZGlhbW9uZFwiKTthKGksbyx1LFwiXFx1MjJjNlwiLFwiXFxcXHN0YXJcIik7YShpLG8sdSxcIlxcdTI1YzNcIixcIlxcXFx0cmlhbmdsZWxlZnRcIik7YShpLG8sdSxcIlxcdTI1YjlcIixcIlxcXFx0cmlhbmdsZXJpZ2h0XCIpO2EoaSxvLGYsXCJ7XCIsXCJcXFxce1wiKTthKG4sbyx5LFwie1wiLFwiXFxcXHtcIik7YShuLG8seSxcIntcIixcIlxcXFx0ZXh0YnJhY2VsZWZ0XCIpO2EoaSxvLGgsXCJ9XCIsXCJcXFxcfVwiKTthKG4sbyx5LFwifVwiLFwiXFxcXH1cIik7YShuLG8seSxcIn1cIixcIlxcXFx0ZXh0YnJhY2VyaWdodFwiKTthKGksbyxmLFwie1wiLFwiXFxcXGxicmFjZVwiKTthKGksbyxoLFwifVwiLFwiXFxcXHJicmFjZVwiKTthKGksbyxmLFwiW1wiLFwiXFxcXGxicmFja1wiKTthKGksbyxoLFwiXVwiLFwiXFxcXHJicmFja1wiKTthKG4sbyx5LFwiPFwiLFwiXFxcXHRleHRsZXNzXCIpO2EobixvLHksXCI+XCIsXCJcXFxcdGV4dGdyZWF0ZXJcIik7YShpLG8sZixcIlxcdTIzMGFcIixcIlxcXFxsZmxvb3JcIik7YShpLG8saCxcIlxcdTIzMGJcIixcIlxcXFxyZmxvb3JcIik7YShpLG8sZixcIlxcdTIzMDhcIixcIlxcXFxsY2VpbFwiKTthKGksbyxoLFwiXFx1MjMwOVwiLFwiXFxcXHJjZWlsXCIpO2EoaSxvLHksXCJcXFxcXCIsXCJcXFxcYmFja3NsYXNoXCIpO2EoaSxvLHksXCJcXHUyMjIzXCIsXCJ8XCIpO2EoaSxvLHksXCJcXHUyMjIzXCIsXCJcXFxcdmVydFwiKTthKG4sbyx5LFwifFwiLFwiXFxcXHRleHRiYXJcIik7YShpLG8seSxcIlxcdTIyMjVcIixcIlxcXFx8XCIpO2EoaSxvLHksXCJcXHUyMjI1XCIsXCJcXFxcVmVydFwiKTthKG4sbyx5LFwiXFx1MjIyNVwiLFwiXFxcXHRleHRiYXJkYmxcIik7YShpLG8sZCxcIlxcdTIxOTFcIixcIlxcXFx1cGFycm93XCIpO2EoaSxvLGQsXCJcXHUyMWQxXCIsXCJcXFxcVXBhcnJvd1wiKTthKGksbyxkLFwiXFx1MjE5M1wiLFwiXFxcXGRvd25hcnJvd1wiKTthKGksbyxkLFwiXFx1MjFkM1wiLFwiXFxcXERvd25hcnJvd1wiKTthKGksbyxkLFwiXFx1MjE5NVwiLFwiXFxcXHVwZG93bmFycm93XCIpO2EoaSxvLGQsXCJcXHUyMWQ1XCIsXCJcXFxcVXBkb3duYXJyb3dcIik7YShpLG8sdixcIlxcdTIyMTBcIixcIlxcXFxjb3Byb2RcIik7YShpLG8sdixcIlxcdTIyYzFcIixcIlxcXFxiaWd2ZWVcIik7YShpLG8sdixcIlxcdTIyYzBcIixcIlxcXFxiaWd3ZWRnZVwiKTthKGksbyx2LFwiXFx1MmEwNFwiLFwiXFxcXGJpZ3VwbHVzXCIpO2EoaSxvLHYsXCJcXHUyMmMyXCIsXCJcXFxcYmlnY2FwXCIpO2EoaSxvLHYsXCJcXHUyMmMzXCIsXCJcXFxcYmlnY3VwXCIpO2EoaSxvLHYsXCJcXHUyMjJiXCIsXCJcXFxcaW50XCIpO2EoaSxvLHYsXCJcXHUyMjJiXCIsXCJcXFxcaW50b3BcIik7YShpLG8sdixcIlxcdTIyMmNcIixcIlxcXFxpaW50XCIpO2EoaSxvLHYsXCJcXHUyMjJkXCIsXCJcXFxcaWlpbnRcIik7YShpLG8sdixcIlxcdTIyMGZcIixcIlxcXFxwcm9kXCIpO2EoaSxvLHYsXCJcXHUyMjExXCIsXCJcXFxcc3VtXCIpO2EoaSxvLHYsXCJcXHUyYTAyXCIsXCJcXFxcYmlnb3RpbWVzXCIpO2EoaSxvLHYsXCJcXHUyYTAxXCIsXCJcXFxcYmlnb3BsdXNcIik7YShpLG8sdixcIlxcdTJhMDBcIixcIlxcXFxiaWdvZG90XCIpO2EoaSxvLHYsXCJcXHUyMjJlXCIsXCJcXFxcb2ludFwiKTthKGksbyx2LFwiXFx1MmEwNlwiLFwiXFxcXGJpZ3NxY3VwXCIpO2EoaSxvLHYsXCJcXHUyMjJiXCIsXCJcXFxcc21hbGxpbnRcIik7YShuLG8scCxcIlxcdTIwMjZcIixcIlxcXFx0ZXh0ZWxsaXBzaXNcIik7YShpLG8scCxcIlxcdTIwMjZcIixcIlxcXFxtYXRoZWxsaXBzaXNcIik7YShuLG8scCxcIlxcdTIwMjZcIixcIlxcXFxsZG90c1wiKTthKGksbyxwLFwiXFx1MjAyNlwiLFwiXFxcXGxkb3RzXCIpO2EoaSxvLHAsXCJcXHUyMmVmXCIsXCJcXFxcY2RvdHNcIik7YShpLG8scCxcIlxcdTIyZjFcIixcIlxcXFxkZG90c1wiKTthKGksbyx5LFwiXFx1MjJlZVwiLFwiXFxcXHZkb3RzXCIpO2EoaSxvLGwsXCJcXHhiNFwiLFwiXFxcXGFjdXRlXCIpO2EoaSxvLGwsXCJgXCIsXCJcXFxcZ3JhdmVcIik7YShpLG8sbCxcIlxceGE4XCIsXCJcXFxcZGRvdFwiKTthKGksbyxsLFwiflwiLFwiXFxcXHRpbGRlXCIpO2EoaSxvLGwsXCJcXHhhZlwiLFwiXFxcXGJhclwiKTthKGksbyxsLFwiXFx1MDJkOFwiLFwiXFxcXGJyZXZlXCIpO2EoaSxvLGwsXCJcXHUwMmM3XCIsXCJcXFxcY2hlY2tcIik7YShpLG8sbCxcIl5cIixcIlxcXFxoYXRcIik7YShpLG8sbCxcIlxcdTIwZDdcIixcIlxcXFx2ZWNcIik7YShpLG8sbCxcIlxcdTAyZDlcIixcIlxcXFxkb3RcIik7YShpLG8sYyxcIlxcdTAxMzFcIixcIlxcXFxpbWF0aFwiKTthKGksbyxjLFwiXFx1MDIzN1wiLFwiXFxcXGptYXRoXCIpO2EobixvLHksXCJcXHUyMDEzXCIsXCItLVwiKTthKG4sbyx5LFwiXFx1MjAxM1wiLFwiXFxcXHRleHRlbmRhc2hcIik7YShuLG8seSxcIlxcdTIwMTRcIixcIi0tLVwiKTthKG4sbyx5LFwiXFx1MjAxNFwiLFwiXFxcXHRleHRlbWRhc2hcIik7YShuLG8seSxcIlxcdTIwMThcIixcImBcIik7YShuLG8seSxcIlxcdTIwMThcIixcIlxcXFx0ZXh0cXVvdGVsZWZ0XCIpO2EobixvLHksXCJcXHUyMDE5XCIsXCInXCIpO2EobixvLHksXCJcXHUyMDE5XCIsXCJcXFxcdGV4dHF1b3RlcmlnaHRcIik7YShuLG8seSxcIlxcdTIwMWNcIixcImBgXCIpO2EobixvLHksXCJcXHUyMDFjXCIsXCJcXFxcdGV4dHF1b3RlZGJsbGVmdFwiKTthKG4sbyx5LFwiXFx1MjAxZFwiLFwiJydcIik7YShuLG8seSxcIlxcdTIwMWRcIixcIlxcXFx0ZXh0cXVvdGVkYmxyaWdodFwiKTthKGksbyx5LFwiXFx4YjBcIixcIlxcXFxkZWdyZWVcIik7YShuLG8seSxcIlxceGIwXCIsXCJcXFxcZGVncmVlXCIpO2EoaSxvLGMsXCJcXHhhM1wiLFwiXFxcXHBvdW5kc1wiKTthKGksbyxjLFwiXFx4YTNcIixcIlxcXFxtYXRoc3RlcmxpbmdcIik7YShuLG8sYyxcIlxceGEzXCIsXCJcXFxccG91bmRzXCIpO2EobixvLGMsXCJcXHhhM1wiLFwiXFxcXHRleHRzdGVybGluZ1wiKTthKGkscyx5LFwiXFx1MjcyMFwiLFwiXFxcXG1hbHRlc2VcIik7YShuLHMseSxcIlxcdTI3MjBcIixcIlxcXFxtYWx0ZXNlXCIpO2EobixvLGcsXCJcXHhhMFwiLFwiXFxcXCBcIik7YShuLG8sZyxcIlxceGEwXCIsXCIgXCIpO2EobixvLGcsXCJcXHhhMFwiLFwiflwiKTt2YXIgeD0nMDEyMzQ1Njc4OS9ALlwiJztmb3IodmFyIGI9MDtiPHgubGVuZ3RoO2IrKyl7dmFyIHc9eC5jaGFyQXQoYik7YShpLG8seSx3LHcpfXZhciBrPScwMTIzNDU2Nzg5IUAqKCktPStbXTw+fFwiOzo/Ly4sJztmb3IodmFyIHo9MDt6PGsubGVuZ3RoO3orKyl7dmFyIE09ay5jaGFyQXQoeik7YShuLG8seSxNLE0pfXZhciBTPVwiYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWlwiO2Zvcih2YXIgQT0wO0E8Uy5sZW5ndGg7QSsrKXt2YXIgTj1TLmNoYXJBdChBKTthKGksbyxjLE4sTik7YShuLG8seSxOLE4pfWZvcih2YXIgVD0xOTI7VDw9MjE0O1QrKyl7dmFyIHE9U3RyaW5nLmZyb21DaGFyQ29kZShUKTthKG4sbyx5LHEscSl9Zm9yKHZhciBDPTIxNjtDPD0yNDY7QysrKXt2YXIgRT1TdHJpbmcuZnJvbUNoYXJDb2RlKEMpO2EobixvLHksRSxFKX1mb3IodmFyIE89MjQ4O088PTI1NTtPKyspe3ZhciBSPVN0cmluZy5mcm9tQ2hhckNvZGUoTyk7YShuLG8seSxSLFIpfWZvcih2YXIgTD0xMDQwO0w8PTExMDM7TCsrKXt2YXIgRD1TdHJpbmcuZnJvbUNoYXJDb2RlKEwpO2EobixvLHksRCxEKX1hKG4sbyx5LFwiXFx1MjAxM1wiLFwiXFx1MjAxM1wiKTthKG4sbyx5LFwiXFx1MjAxNFwiLFwiXFx1MjAxNFwiKTthKG4sbyx5LFwiXFx1MjAxOFwiLFwiXFx1MjAxOFwiKTthKG4sbyx5LFwiXFx1MjAxOVwiLFwiXFx1MjAxOVwiKTthKG4sbyx5LFwiXFx1MjAxY1wiLFwiXFx1MjAxY1wiKTthKG4sbyx5LFwiXFx1MjAxZFwiLFwiXFx1MjAxZFwiKX0se31dLDMwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9L1tcXHVBQzAwLVxcdUQ3QUZdLzt2YXIgaT0vW1xcdTMwNDAtXFx1MzA5Rl18W1xcdTMwQTAtXFx1MzBGRl18W1xcdTRFMDAtXFx1OUZBRl18W1xcdUFDMDAtXFx1RDdBRl0vO3QuZXhwb3J0cz17Y2prUmVnZXg6aSxoYW5ndWxSZWdleDphfX0se31dLDMxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9QXJyYXkucHJvdG90eXBlLmluZGV4T2Y7dmFyIGk9ZnVuY3Rpb24gZSh0LHIpe2lmKHQ9PW51bGwpe3JldHVybi0xfWlmKGEmJnQuaW5kZXhPZj09PWEpe3JldHVybiB0LmluZGV4T2Yocil9dmFyIGk9dC5sZW5ndGg7Zm9yKHZhciBuPTA7bjxpO24rKyl7aWYodFtuXT09PXIpe3JldHVybiBufX1yZXR1cm4tMX07dmFyIG49ZnVuY3Rpb24gZSh0LHIpe3JldHVybiBpKHQscikhPT0tMX07dmFyIG89ZnVuY3Rpb24gZSh0LHIpe3JldHVybiB0PT09dW5kZWZpbmVkP3I6dH07dmFyIHM9LyhbQS1aXSkvZzt2YXIgbD1mdW5jdGlvbiBlKHQpe3JldHVybiB0LnJlcGxhY2UocyxcIi0kMVwiKS50b0xvd2VyQ2FzZSgpfTt2YXIgdT17XCImXCI6XCImYW1wO1wiLFwiPlwiOlwiJmd0O1wiLFwiPFwiOlwiJmx0O1wiLCdcIic6XCImcXVvdDtcIixcIidcIjpcIiYjeDI3O1wifTt2YXIgaD0vWyY+PFwiJ10vZztmdW5jdGlvbiBwKGUpe3JldHVybiB1W2VdfWZ1bmN0aW9uIGMoZSl7cmV0dXJuKFwiXCIrZSkucmVwbGFjZShoLHApfXZhciB2PXZvaWQgMDtpZih0eXBlb2YgZG9jdW1lbnQhPT1cInVuZGVmaW5lZFwiKXt2YXIgZj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtpZihcInRleHRDb250ZW50XCJpbiBmKXt2PWZ1bmN0aW9uIGUodCxyKXt0LnRleHRDb250ZW50PXJ9fWVsc2V7dj1mdW5jdGlvbiBlKHQscil7dC5pbm5lclRleHQ9cn19fWZ1bmN0aW9uIG0oZSl7dihlLFwiXCIpfXQuZXhwb3J0cz17Y29udGFpbnM6bixkZWZsdDpvLGVzY2FwZTpjLGh5cGhlbmF0ZTpsLGluZGV4T2Y6aSxzZXRUZXh0Q29udGVudDp2LGNsZWFyTm9kZTptfX0se31dfSx7fSxbMV0pKDEpfSk7XG4iLCIvKmdsb2JhbCBkZWZpbmU6ZmFsc2UgKi9cbi8qKlxuICogQ29weXJpZ2h0IDIwMTYgQ3JhaWcgQ2FtcGJlbGxcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqXG4gKiBNb3VzZXRyYXAgaXMgYSBzaW1wbGUga2V5Ym9hcmQgc2hvcnRjdXQgbGlicmFyeSBmb3IgSmF2YXNjcmlwdCB3aXRoXG4gKiBubyBleHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqXG4gKiBAdmVyc2lvbiAxLjYuMFxuICogQHVybCBjcmFpZy5pcy9raWxsaW5nL21pY2VcbiAqL1xuKGZ1bmN0aW9uKHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXG4gICAgLy8gQ2hlY2sgaWYgbW91c2V0cmFwIGlzIHVzZWQgaW5zaWRlIGJyb3dzZXIsIGlmIG5vdCwgcmV0dXJuXG4gICAgaWYgKCF3aW5kb3cpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIG1hcHBpbmcgb2Ygc3BlY2lhbCBrZXljb2RlcyB0byB0aGVpciBjb3JyZXNwb25kaW5nIGtleXNcbiAgICAgKlxuICAgICAqIGV2ZXJ5dGhpbmcgaW4gdGhpcyBkaWN0aW9uYXJ5IGNhbm5vdCB1c2Uga2V5cHJlc3MgZXZlbnRzXG4gICAgICogc28gaXQgaGFzIHRvIGJlIGhlcmUgdG8gbWFwIHRvIHRoZSBjb3JyZWN0IGtleWNvZGVzIGZvclxuICAgICAqIGtleXVwL2tleWRvd24gZXZlbnRzXG4gICAgICpcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqL1xuICAgIHZhciBfTUFQID0ge1xuICAgICAgICA4OiAnYmFja3NwYWNlJyxcbiAgICAgICAgOTogJ3RhYicsXG4gICAgICAgIDEzOiAnZW50ZXInLFxuICAgICAgICAxNjogJ3NoaWZ0JyxcbiAgICAgICAgMTc6ICdjdHJsJyxcbiAgICAgICAgMTg6ICdhbHQnLFxuICAgICAgICAyMDogJ2NhcHNsb2NrJyxcbiAgICAgICAgMjc6ICdlc2MnLFxuICAgICAgICAzMjogJ3NwYWNlJyxcbiAgICAgICAgMzM6ICdwYWdldXAnLFxuICAgICAgICAzNDogJ3BhZ2Vkb3duJyxcbiAgICAgICAgMzU6ICdlbmQnLFxuICAgICAgICAzNjogJ2hvbWUnLFxuICAgICAgICAzNzogJ2xlZnQnLFxuICAgICAgICAzODogJ3VwJyxcbiAgICAgICAgMzk6ICdyaWdodCcsXG4gICAgICAgIDQwOiAnZG93bicsXG4gICAgICAgIDQ1OiAnaW5zJyxcbiAgICAgICAgNDY6ICdkZWwnLFxuICAgICAgICA5MTogJ21ldGEnLFxuICAgICAgICA5MzogJ21ldGEnLFxuICAgICAgICAyMjQ6ICdtZXRhJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBtYXBwaW5nIGZvciBzcGVjaWFsIGNoYXJhY3RlcnMgc28gdGhleSBjYW4gc3VwcG9ydFxuICAgICAqXG4gICAgICogdGhpcyBkaWN0aW9uYXJ5IGlzIG9ubHkgdXNlZCBpbmNhc2UgeW91IHdhbnQgdG8gYmluZCBhXG4gICAgICoga2V5dXAgb3Iga2V5ZG93biBldmVudCB0byBvbmUgb2YgdGhlc2Uga2V5c1xuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICB2YXIgX0tFWUNPREVfTUFQID0ge1xuICAgICAgICAxMDY6ICcqJyxcbiAgICAgICAgMTA3OiAnKycsXG4gICAgICAgIDEwOTogJy0nLFxuICAgICAgICAxMTA6ICcuJyxcbiAgICAgICAgMTExIDogJy8nLFxuICAgICAgICAxODY6ICc7JyxcbiAgICAgICAgMTg3OiAnPScsXG4gICAgICAgIDE4ODogJywnLFxuICAgICAgICAxODk6ICctJyxcbiAgICAgICAgMTkwOiAnLicsXG4gICAgICAgIDE5MTogJy8nLFxuICAgICAgICAxOTI6ICdgJyxcbiAgICAgICAgMjE5OiAnWycsXG4gICAgICAgIDIyMDogJ1xcXFwnLFxuICAgICAgICAyMjE6ICddJyxcbiAgICAgICAgMjIyOiAnXFwnJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiB0aGlzIGlzIGEgbWFwcGluZyBvZiBrZXlzIHRoYXQgcmVxdWlyZSBzaGlmdCBvbiBhIFVTIGtleXBhZFxuICAgICAqIGJhY2sgdG8gdGhlIG5vbiBzaGlmdCBlcXVpdmVsZW50c1xuICAgICAqXG4gICAgICogdGhpcyBpcyBzbyB5b3UgY2FuIHVzZSBrZXl1cCBldmVudHMgd2l0aCB0aGVzZSBrZXlzXG4gICAgICpcbiAgICAgKiBub3RlIHRoYXQgdGhpcyB3aWxsIG9ubHkgd29yayByZWxpYWJseSBvbiBVUyBrZXlib2FyZHNcbiAgICAgKlxuICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICovXG4gICAgdmFyIF9TSElGVF9NQVAgPSB7XG4gICAgICAgICd+JzogJ2AnLFxuICAgICAgICAnISc6ICcxJyxcbiAgICAgICAgJ0AnOiAnMicsXG4gICAgICAgICcjJzogJzMnLFxuICAgICAgICAnJCc6ICc0JyxcbiAgICAgICAgJyUnOiAnNScsXG4gICAgICAgICdeJzogJzYnLFxuICAgICAgICAnJic6ICc3JyxcbiAgICAgICAgJyonOiAnOCcsXG4gICAgICAgICcoJzogJzknLFxuICAgICAgICAnKSc6ICcwJyxcbiAgICAgICAgJ18nOiAnLScsXG4gICAgICAgICcrJzogJz0nLFxuICAgICAgICAnOic6ICc7JyxcbiAgICAgICAgJ1xcXCInOiAnXFwnJyxcbiAgICAgICAgJzwnOiAnLCcsXG4gICAgICAgICc+JzogJy4nLFxuICAgICAgICAnPyc6ICcvJyxcbiAgICAgICAgJ3wnOiAnXFxcXCdcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdGhpcyBpcyBhIGxpc3Qgb2Ygc3BlY2lhbCBzdHJpbmdzIHlvdSBjYW4gdXNlIHRvIG1hcFxuICAgICAqIHRvIG1vZGlmaWVyIGtleXMgd2hlbiB5b3Ugc3BlY2lmeSB5b3VyIGtleWJvYXJkIHNob3J0Y3V0c1xuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICB2YXIgX1NQRUNJQUxfQUxJQVNFUyA9IHtcbiAgICAgICAgJ29wdGlvbic6ICdhbHQnLFxuICAgICAgICAnY29tbWFuZCc6ICdtZXRhJyxcbiAgICAgICAgJ3JldHVybic6ICdlbnRlcicsXG4gICAgICAgICdlc2NhcGUnOiAnZXNjJyxcbiAgICAgICAgJ3BsdXMnOiAnKycsXG4gICAgICAgICdtb2QnOiAvTWFjfGlQb2R8aVBob25lfGlQYWQvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKSA/ICdtZXRhJyA6ICdjdHJsJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiB2YXJpYWJsZSB0byBzdG9yZSB0aGUgZmxpcHBlZCB2ZXJzaW9uIG9mIF9NQVAgZnJvbSBhYm92ZVxuICAgICAqIG5lZWRlZCB0byBjaGVjayBpZiB3ZSBzaG91bGQgdXNlIGtleXByZXNzIG9yIG5vdCB3aGVuIG5vIGFjdGlvblxuICAgICAqIGlzIHNwZWNpZmllZFxuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdHx1bmRlZmluZWR9XG4gICAgICovXG4gICAgdmFyIF9SRVZFUlNFX01BUDtcblxuICAgIC8qKlxuICAgICAqIGxvb3AgdGhyb3VnaCB0aGUgZiBrZXlzLCBmMSB0byBmMTkgYW5kIGFkZCB0aGVtIHRvIHRoZSBtYXBcbiAgICAgKiBwcm9ncmFtYXRpY2FsbHlcbiAgICAgKi9cbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IDIwOyArK2kpIHtcbiAgICAgICAgX01BUFsxMTEgKyBpXSA9ICdmJyArIGk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogbG9vcCB0aHJvdWdoIHRvIG1hcCBudW1iZXJzIG9uIHRoZSBudW1lcmljIGtleXBhZFxuICAgICAqL1xuICAgIGZvciAoaSA9IDA7IGkgPD0gOTsgKytpKSB7XG4gICAgICAgIF9NQVBbaSArIDk2XSA9IGk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogY3Jvc3MgYnJvd3NlciBhZGQgZXZlbnQgbWV0aG9kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0VsZW1lbnR8SFRNTERvY3VtZW50fSBvYmplY3RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9hZGRFdmVudChvYmplY3QsIHR5cGUsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmIChvYmplY3QuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICAgICAgb2JqZWN0LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgY2FsbGJhY2ssIGZhbHNlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIG9iamVjdC5hdHRhY2hFdmVudCgnb24nICsgdHlwZSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHRha2VzIHRoZSBldmVudCBhbmQgcmV0dXJucyB0aGUga2V5IGNoYXJhY3RlclxuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfY2hhcmFjdGVyRnJvbUV2ZW50KGUpIHtcblxuICAgICAgICAvLyBmb3Iga2V5cHJlc3MgZXZlbnRzIHdlIHNob3VsZCByZXR1cm4gdGhlIGNoYXJhY3RlciBhcyBpc1xuICAgICAgICBpZiAoZS50eXBlID09ICdrZXlwcmVzcycpIHtcbiAgICAgICAgICAgIHZhciBjaGFyYWN0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGUud2hpY2gpO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGUgc2hpZnQga2V5IGlzIG5vdCBwcmVzc2VkIHRoZW4gaXQgaXMgc2FmZSB0byBhc3N1bWVcbiAgICAgICAgICAgIC8vIHRoYXQgd2Ugd2FudCB0aGUgY2hhcmFjdGVyIHRvIGJlIGxvd2VyY2FzZS4gIHRoaXMgbWVhbnMgaWZcbiAgICAgICAgICAgIC8vIHlvdSBhY2NpZGVudGFsbHkgaGF2ZSBjYXBzIGxvY2sgb24gdGhlbiB5b3VyIGtleSBiaW5kaW5nc1xuICAgICAgICAgICAgLy8gd2lsbCBjb250aW51ZSB0byB3b3JrXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gdGhlIG9ubHkgc2lkZSBlZmZlY3QgdGhhdCBtaWdodCBub3QgYmUgZGVzaXJlZCBpcyBpZiB5b3VcbiAgICAgICAgICAgIC8vIGJpbmQgc29tZXRoaW5nIGxpa2UgJ0EnIGNhdXNlIHlvdSB3YW50IHRvIHRyaWdnZXIgYW5cbiAgICAgICAgICAgIC8vIGV2ZW50IHdoZW4gY2FwaXRhbCBBIGlzIHByZXNzZWQgY2FwcyBsb2NrIHdpbGwgbm8gbG9uZ2VyXG4gICAgICAgICAgICAvLyB0cmlnZ2VyIHRoZSBldmVudC4gIHNoaWZ0K2Egd2lsbCB0aG91Z2guXG4gICAgICAgICAgICBpZiAoIWUuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgICAgICBjaGFyYWN0ZXIgPSBjaGFyYWN0ZXIudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNoYXJhY3RlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGZvciBub24ga2V5cHJlc3MgZXZlbnRzIHRoZSBzcGVjaWFsIG1hcHMgYXJlIG5lZWRlZFxuICAgICAgICBpZiAoX01BUFtlLndoaWNoXSkge1xuICAgICAgICAgICAgcmV0dXJuIF9NQVBbZS53aGljaF07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX0tFWUNPREVfTUFQW2Uud2hpY2hdKSB7XG4gICAgICAgICAgICByZXR1cm4gX0tFWUNPREVfTUFQW2Uud2hpY2hdO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYgaXQgaXMgbm90IGluIHRoZSBzcGVjaWFsIG1hcFxuXG4gICAgICAgIC8vIHdpdGgga2V5ZG93biBhbmQga2V5dXAgZXZlbnRzIHRoZSBjaGFyYWN0ZXIgc2VlbXMgdG8gYWx3YXlzXG4gICAgICAgIC8vIGNvbWUgaW4gYXMgYW4gdXBwZXJjYXNlIGNoYXJhY3RlciB3aGV0aGVyIHlvdSBhcmUgcHJlc3Npbmcgc2hpZnRcbiAgICAgICAgLy8gb3Igbm90LiAgd2Ugc2hvdWxkIG1ha2Ugc3VyZSBpdCBpcyBhbHdheXMgbG93ZXJjYXNlIGZvciBjb21wYXJpc29uc1xuICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShlLndoaWNoKS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGNoZWNrcyBpZiB0d28gYXJyYXlzIGFyZSBlcXVhbFxuICAgICAqXG4gICAgICogQHBhcmFtIHtBcnJheX0gbW9kaWZpZXJzMVxuICAgICAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyczJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfbW9kaWZpZXJzTWF0Y2gobW9kaWZpZXJzMSwgbW9kaWZpZXJzMikge1xuICAgICAgICByZXR1cm4gbW9kaWZpZXJzMS5zb3J0KCkuam9pbignLCcpID09PSBtb2RpZmllcnMyLnNvcnQoKS5qb2luKCcsJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogdGFrZXMgYSBrZXkgZXZlbnQgYW5kIGZpZ3VyZXMgb3V0IHdoYXQgdGhlIG1vZGlmaWVycyBhcmVcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICovXG4gICAgZnVuY3Rpb24gX2V2ZW50TW9kaWZpZXJzKGUpIHtcbiAgICAgICAgdmFyIG1vZGlmaWVycyA9IFtdO1xuXG4gICAgICAgIGlmIChlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICBtb2RpZmllcnMucHVzaCgnc2hpZnQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlLmFsdEtleSkge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ2FsdCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGUuY3RybEtleSkge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ2N0cmwnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlLm1ldGFLZXkpIHtcbiAgICAgICAgICAgIG1vZGlmaWVycy5wdXNoKCdtZXRhJyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbW9kaWZpZXJzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHByZXZlbnRzIGRlZmF1bHQgZm9yIHRoaXMgZXZlbnRcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgZnVuY3Rpb24gX3ByZXZlbnREZWZhdWx0KGUpIHtcbiAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBzdG9wcyBwcm9wb2dhdGlvbiBmb3IgdGhpcyBldmVudFxuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfc3RvcFByb3BhZ2F0aW9uKGUpIHtcbiAgICAgICAgaWYgKGUuc3RvcFByb3BhZ2F0aW9uKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZS5jYW5jZWxCdWJibGUgPSB0cnVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGRldGVybWluZXMgaWYgdGhlIGtleWNvZGUgc3BlY2lmaWVkIGlzIGEgbW9kaWZpZXIga2V5IG9yIG5vdFxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9pc01vZGlmaWVyKGtleSkge1xuICAgICAgICByZXR1cm4ga2V5ID09ICdzaGlmdCcgfHwga2V5ID09ICdjdHJsJyB8fCBrZXkgPT0gJ2FsdCcgfHwga2V5ID09ICdtZXRhJztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZXZlcnNlcyB0aGUgbWFwIGxvb2t1cCBzbyB0aGF0IHdlIGNhbiBsb29rIGZvciBzcGVjaWZpYyBrZXlzXG4gICAgICogdG8gc2VlIHdoYXQgY2FuIGFuZCBjYW4ndCB1c2Uga2V5cHJlc3NcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge09iamVjdH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfZ2V0UmV2ZXJzZU1hcCgpIHtcbiAgICAgICAgaWYgKCFfUkVWRVJTRV9NQVApIHtcbiAgICAgICAgICAgIF9SRVZFUlNFX01BUCA9IHt9O1xuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIF9NQVApIHtcblxuICAgICAgICAgICAgICAgIC8vIHB1bGwgb3V0IHRoZSBudW1lcmljIGtleXBhZCBmcm9tIGhlcmUgY2F1c2Uga2V5cHJlc3Mgc2hvdWxkXG4gICAgICAgICAgICAgICAgLy8gYmUgYWJsZSB0byBkZXRlY3QgdGhlIGtleXMgZnJvbSB0aGUgY2hhcmFjdGVyXG4gICAgICAgICAgICAgICAgaWYgKGtleSA+IDk1ICYmIGtleSA8IDExMikge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoX01BUC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIF9SRVZFUlNFX01BUFtfTUFQW2tleV1dID0ga2V5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX1JFVkVSU0VfTUFQO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHBpY2tzIHRoZSBiZXN0IGFjdGlvbiBiYXNlZCBvbiB0aGUga2V5IGNvbWJpbmF0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gY2hhcmFjdGVyIGZvciBrZXlcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBtb2RpZmllcnNcbiAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvbiBwYXNzZWQgaW5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfcGlja0Jlc3RBY3Rpb24oa2V5LCBtb2RpZmllcnMsIGFjdGlvbikge1xuXG4gICAgICAgIC8vIGlmIG5vIGFjdGlvbiB3YXMgcGlja2VkIGluIHdlIHNob3VsZCB0cnkgdG8gcGljayB0aGUgb25lXG4gICAgICAgIC8vIHRoYXQgd2UgdGhpbmsgd291bGQgd29yayBiZXN0IGZvciB0aGlzIGtleVxuICAgICAgICBpZiAoIWFjdGlvbikge1xuICAgICAgICAgICAgYWN0aW9uID0gX2dldFJldmVyc2VNYXAoKVtrZXldID8gJ2tleWRvd24nIDogJ2tleXByZXNzJztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG1vZGlmaWVyIGtleXMgZG9uJ3Qgd29yayBhcyBleHBlY3RlZCB3aXRoIGtleXByZXNzLFxuICAgICAgICAvLyBzd2l0Y2ggdG8ga2V5ZG93blxuICAgICAgICBpZiAoYWN0aW9uID09ICdrZXlwcmVzcycgJiYgbW9kaWZpZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgYWN0aW9uID0gJ2tleWRvd24nO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0cyBmcm9tIGEgc3RyaW5nIGtleSBjb21iaW5hdGlvbiB0byBhbiBhcnJheVxuICAgICAqXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBjb21iaW5hdGlvbiBsaWtlIFwiY29tbWFuZCtzaGlmdCtsXCJcbiAgICAgKiBAcmV0dXJuIHtBcnJheX1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfa2V5c0Zyb21TdHJpbmcoY29tYmluYXRpb24pIHtcbiAgICAgICAgaWYgKGNvbWJpbmF0aW9uID09PSAnKycpIHtcbiAgICAgICAgICAgIHJldHVybiBbJysnXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbWJpbmF0aW9uID0gY29tYmluYXRpb24ucmVwbGFjZSgvXFwrezJ9L2csICcrcGx1cycpO1xuICAgICAgICByZXR1cm4gY29tYmluYXRpb24uc3BsaXQoJysnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXRzIGluZm8gZm9yIGEgc3BlY2lmaWMga2V5IGNvbWJpbmF0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9IGNvbWJpbmF0aW9uIGtleSBjb21iaW5hdGlvbiAoXCJjb21tYW5kK3NcIiBvciBcImFcIiBvciBcIipcIilcbiAgICAgKiBAcGFyYW0gIHtzdHJpbmc9fSBhY3Rpb25cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9nZXRLZXlJbmZvKGNvbWJpbmF0aW9uLCBhY3Rpb24pIHtcbiAgICAgICAgdmFyIGtleXM7XG4gICAgICAgIHZhciBrZXk7XG4gICAgICAgIHZhciBpO1xuICAgICAgICB2YXIgbW9kaWZpZXJzID0gW107XG5cbiAgICAgICAgLy8gdGFrZSB0aGUga2V5cyBmcm9tIHRoaXMgcGF0dGVybiBhbmQgZmlndXJlIG91dCB3aGF0IHRoZSBhY3R1YWxcbiAgICAgICAgLy8gcGF0dGVybiBpcyBhbGwgYWJvdXRcbiAgICAgICAga2V5cyA9IF9rZXlzRnJvbVN0cmluZyhjb21iaW5hdGlvbik7XG5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGtleSA9IGtleXNbaV07XG5cbiAgICAgICAgICAgIC8vIG5vcm1hbGl6ZSBrZXkgbmFtZXNcbiAgICAgICAgICAgIGlmIChfU1BFQ0lBTF9BTElBU0VTW2tleV0pIHtcbiAgICAgICAgICAgICAgICBrZXkgPSBfU1BFQ0lBTF9BTElBU0VTW2tleV07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIHRoaXMgaXMgbm90IGEga2V5cHJlc3MgZXZlbnQgdGhlbiB3ZSBzaG91bGRcbiAgICAgICAgICAgIC8vIGJlIHNtYXJ0IGFib3V0IHVzaW5nIHNoaWZ0IGtleXNcbiAgICAgICAgICAgIC8vIHRoaXMgd2lsbCBvbmx5IHdvcmsgZm9yIFVTIGtleWJvYXJkcyBob3dldmVyXG4gICAgICAgICAgICBpZiAoYWN0aW9uICYmIGFjdGlvbiAhPSAna2V5cHJlc3MnICYmIF9TSElGVF9NQVBba2V5XSkge1xuICAgICAgICAgICAgICAgIGtleSA9IF9TSElGVF9NQVBba2V5XTtcbiAgICAgICAgICAgICAgICBtb2RpZmllcnMucHVzaCgnc2hpZnQnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gaWYgdGhpcyBrZXkgaXMgYSBtb2RpZmllciB0aGVuIGFkZCBpdCB0byB0aGUgbGlzdCBvZiBtb2RpZmllcnNcbiAgICAgICAgICAgIGlmIChfaXNNb2RpZmllcihrZXkpKSB7XG4gICAgICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGRlcGVuZGluZyBvbiB3aGF0IHRoZSBrZXkgY29tYmluYXRpb24gaXNcbiAgICAgICAgLy8gd2Ugd2lsbCB0cnkgdG8gcGljayB0aGUgYmVzdCBldmVudCBmb3IgaXRcbiAgICAgICAgYWN0aW9uID0gX3BpY2tCZXN0QWN0aW9uKGtleSwgbW9kaWZpZXJzLCBhY3Rpb24pO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIG1vZGlmaWVyczogbW9kaWZpZXJzLFxuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb25cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfYmVsb25nc1RvKGVsZW1lbnQsIGFuY2VzdG9yKSB7XG4gICAgICAgIGlmIChlbGVtZW50ID09PSBudWxsIHx8IGVsZW1lbnQgPT09IGRvY3VtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZWxlbWVudCA9PT0gYW5jZXN0b3IpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIF9iZWxvbmdzVG8oZWxlbWVudC5wYXJlbnROb2RlLCBhbmNlc3Rvcik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gTW91c2V0cmFwKHRhcmdldEVsZW1lbnQpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICAgIHRhcmdldEVsZW1lbnQgPSB0YXJnZXRFbGVtZW50IHx8IGRvY3VtZW50O1xuXG4gICAgICAgIGlmICghKHNlbGYgaW5zdGFuY2VvZiBNb3VzZXRyYXApKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1vdXNldHJhcCh0YXJnZXRFbGVtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBlbGVtZW50IHRvIGF0dGFjaCBrZXkgZXZlbnRzIHRvXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtFbGVtZW50fVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXRFbGVtZW50O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhIGxpc3Qgb2YgYWxsIHRoZSBjYWxsYmFja3Mgc2V0dXAgdmlhIE1vdXNldHJhcC5iaW5kKClcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge09iamVjdH1cbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuX2NhbGxiYWNrcyA9IHt9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBkaXJlY3QgbWFwIG9mIHN0cmluZyBjb21iaW5hdGlvbnMgdG8gY2FsbGJhY2tzIHVzZWQgZm9yIHRyaWdnZXIoKVxuICAgICAgICAgKlxuICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5fZGlyZWN0TWFwID0ge307XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGtlZXBzIHRyYWNrIG9mIHdoYXQgbGV2ZWwgZWFjaCBzZXF1ZW5jZSBpcyBhdCBzaW5jZSBtdWx0aXBsZVxuICAgICAgICAgKiBzZXF1ZW5jZXMgY2FuIHN0YXJ0IG91dCB3aXRoIHRoZSBzYW1lIHNlcXVlbmNlXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICAgICAqL1xuICAgICAgICB2YXIgX3NlcXVlbmNlTGV2ZWxzID0ge307XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHZhcmlhYmxlIHRvIHN0b3JlIHRoZSBzZXRUaW1lb3V0IGNhbGxcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge251bGx8bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9yZXNldFRpbWVyO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiB0ZW1wb3Jhcnkgc3RhdGUgd2hlcmUgd2Ugd2lsbCBpZ25vcmUgdGhlIG5leHQga2V5dXBcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW58c3RyaW5nfVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9pZ25vcmVOZXh0S2V5dXAgPSBmYWxzZTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogdGVtcG9yYXJ5IHN0YXRlIHdoZXJlIHdlIHdpbGwgaWdub3JlIHRoZSBuZXh0IGtleXByZXNzXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9pZ25vcmVOZXh0S2V5cHJlc3MgPSBmYWxzZTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogYXJlIHdlIGN1cnJlbnRseSBpbnNpZGUgb2YgYSBzZXF1ZW5jZT9cbiAgICAgICAgICogdHlwZSBvZiBhY3Rpb24gKFwia2V5dXBcIiBvciBcImtleWRvd25cIiBvciBcImtleXByZXNzXCIpIG9yIGZhbHNlXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufHN0cmluZ31cbiAgICAgICAgICovXG4gICAgICAgIHZhciBfbmV4dEV4cGVjdGVkQWN0aW9uID0gZmFsc2U7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHJlc2V0cyBhbGwgc2VxdWVuY2UgY291bnRlcnMgZXhjZXB0IGZvciB0aGUgb25lcyBwYXNzZWQgaW5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRvTm90UmVzZXRcbiAgICAgICAgICogQHJldHVybnMgdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gX3Jlc2V0U2VxdWVuY2VzKGRvTm90UmVzZXQpIHtcbiAgICAgICAgICAgIGRvTm90UmVzZXQgPSBkb05vdFJlc2V0IHx8IHt9O1xuXG4gICAgICAgICAgICB2YXIgYWN0aXZlU2VxdWVuY2VzID0gZmFsc2UsXG4gICAgICAgICAgICAgICAga2V5O1xuXG4gICAgICAgICAgICBmb3IgKGtleSBpbiBfc2VxdWVuY2VMZXZlbHMpIHtcbiAgICAgICAgICAgICAgICBpZiAoZG9Ob3RSZXNldFtrZXldKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZVNlcXVlbmNlcyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfc2VxdWVuY2VMZXZlbHNba2V5XSA9IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghYWN0aXZlU2VxdWVuY2VzKSB7XG4gICAgICAgICAgICAgICAgX25leHRFeHBlY3RlZEFjdGlvbiA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGZpbmRzIGFsbCBjYWxsYmFja3MgdGhhdCBtYXRjaCBiYXNlZCBvbiB0aGUga2V5Y29kZSwgbW9kaWZpZXJzLFxuICAgICAgICAgKiBhbmQgYWN0aW9uXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjaGFyYWN0ZXJcbiAgICAgICAgICogQHBhcmFtIHtBcnJheX0gbW9kaWZpZXJzXG4gICAgICAgICAqIEBwYXJhbSB7RXZlbnR8T2JqZWN0fSBlXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gc2VxdWVuY2VOYW1lIC0gbmFtZSBvZiB0aGUgc2VxdWVuY2Ugd2UgYXJlIGxvb2tpbmcgZm9yXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gY29tYmluYXRpb25cbiAgICAgICAgICogQHBhcmFtIHtudW1iZXI9fSBsZXZlbFxuICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBfZ2V0TWF0Y2hlcyhjaGFyYWN0ZXIsIG1vZGlmaWVycywgZSwgc2VxdWVuY2VOYW1lLCBjb21iaW5hdGlvbiwgbGV2ZWwpIHtcbiAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgdmFyIGNhbGxiYWNrO1xuICAgICAgICAgICAgdmFyIG1hdGNoZXMgPSBbXTtcbiAgICAgICAgICAgIHZhciBhY3Rpb24gPSBlLnR5cGU7XG5cbiAgICAgICAgICAgIC8vIGlmIHRoZXJlIGFyZSBubyBldmVudHMgcmVsYXRlZCB0byB0aGlzIGtleWNvZGVcbiAgICAgICAgICAgIGlmICghc2VsZi5fY2FsbGJhY2tzW2NoYXJhY3Rlcl0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIGEgbW9kaWZpZXIga2V5IGlzIGNvbWluZyB1cCBvbiBpdHMgb3duIHdlIHNob3VsZCBhbGxvdyBpdFxuICAgICAgICAgICAgaWYgKGFjdGlvbiA9PSAna2V5dXAnICYmIF9pc01vZGlmaWVyKGNoYXJhY3RlcikpIHtcbiAgICAgICAgICAgICAgICBtb2RpZmllcnMgPSBbY2hhcmFjdGVyXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gbG9vcCB0aHJvdWdoIGFsbCBjYWxsYmFja3MgZm9yIHRoZSBrZXkgdGhhdCB3YXMgcHJlc3NlZFxuICAgICAgICAgICAgLy8gYW5kIHNlZSBpZiBhbnkgb2YgdGhlbSBtYXRjaFxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHNlbGYuX2NhbGxiYWNrc1tjaGFyYWN0ZXJdLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgPSBzZWxmLl9jYWxsYmFja3NbY2hhcmFjdGVyXVtpXTtcblxuICAgICAgICAgICAgICAgIC8vIGlmIGEgc2VxdWVuY2UgbmFtZSBpcyBub3Qgc3BlY2lmaWVkLCBidXQgdGhpcyBpcyBhIHNlcXVlbmNlIGF0XG4gICAgICAgICAgICAgICAgLy8gdGhlIHdyb25nIGxldmVsIHRoZW4gbW92ZSBvbnRvIHRoZSBuZXh0IG1hdGNoXG4gICAgICAgICAgICAgICAgaWYgKCFzZXF1ZW5jZU5hbWUgJiYgY2FsbGJhY2suc2VxICYmIF9zZXF1ZW5jZUxldmVsc1tjYWxsYmFjay5zZXFdICE9IGNhbGxiYWNrLmxldmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBhY3Rpb24gd2UgYXJlIGxvb2tpbmcgZm9yIGRvZXNuJ3QgbWF0Y2ggdGhlIGFjdGlvbiB3ZSBnb3RcbiAgICAgICAgICAgICAgICAvLyB0aGVuIHdlIHNob3VsZCBrZWVwIGdvaW5nXG4gICAgICAgICAgICAgICAgaWYgKGFjdGlvbiAhPSBjYWxsYmFjay5hY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpcyBhIGtleXByZXNzIGV2ZW50IGFuZCB0aGUgbWV0YSBrZXkgYW5kIGNvbnRyb2wga2V5XG4gICAgICAgICAgICAgICAgLy8gYXJlIG5vdCBwcmVzc2VkIHRoYXQgbWVhbnMgdGhhdCB3ZSBuZWVkIHRvIG9ubHkgbG9vayBhdCB0aGVcbiAgICAgICAgICAgICAgICAvLyBjaGFyYWN0ZXIsIG90aGVyd2lzZSBjaGVjayB0aGUgbW9kaWZpZXJzIGFzIHdlbGxcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vIGNocm9tZSB3aWxsIG5vdCBmaXJlIGEga2V5cHJlc3MgaWYgbWV0YSBvciBjb250cm9sIGlzIGRvd25cbiAgICAgICAgICAgICAgICAvLyBzYWZhcmkgd2lsbCBmaXJlIGEga2V5cHJlc3MgaWYgbWV0YSBvciBtZXRhK3NoaWZ0IGlzIGRvd25cbiAgICAgICAgICAgICAgICAvLyBmaXJlZm94IHdpbGwgZmlyZSBhIGtleXByZXNzIGlmIG1ldGEgb3IgY29udHJvbCBpcyBkb3duXG4gICAgICAgICAgICAgICAgaWYgKChhY3Rpb24gPT0gJ2tleXByZXNzJyAmJiAhZS5tZXRhS2V5ICYmICFlLmN0cmxLZXkpIHx8IF9tb2RpZmllcnNNYXRjaChtb2RpZmllcnMsIGNhbGxiYWNrLm1vZGlmaWVycykpIHtcblxuICAgICAgICAgICAgICAgICAgICAvLyB3aGVuIHlvdSBiaW5kIGEgY29tYmluYXRpb24gb3Igc2VxdWVuY2UgYSBzZWNvbmQgdGltZSBpdFxuICAgICAgICAgICAgICAgICAgICAvLyBzaG91bGQgb3ZlcndyaXRlIHRoZSBmaXJzdCBvbmUuICBpZiBhIHNlcXVlbmNlTmFtZSBvclxuICAgICAgICAgICAgICAgICAgICAvLyBjb21iaW5hdGlvbiBpcyBzcGVjaWZpZWQgaW4gdGhpcyBjYWxsIGl0IGRvZXMganVzdCB0aGF0XG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIEB0b2RvIG1ha2UgZGVsZXRpbmcgaXRzIG93biBtZXRob2Q/XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWxldGVDb21ibyA9ICFzZXF1ZW5jZU5hbWUgJiYgY2FsbGJhY2suY29tYm8gPT0gY29tYmluYXRpb247XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWxldGVTZXF1ZW5jZSA9IHNlcXVlbmNlTmFtZSAmJiBjYWxsYmFjay5zZXEgPT0gc2VxdWVuY2VOYW1lICYmIGNhbGxiYWNrLmxldmVsID09IGxldmVsO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGVsZXRlQ29tYm8gfHwgZGVsZXRlU2VxdWVuY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2NhbGxiYWNrc1tjaGFyYWN0ZXJdLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIG1hdGNoZXMucHVzaChjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hlcztcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhY3R1YWxseSBjYWxscyB0aGUgY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgICpcbiAgICAgICAgICogaWYgeW91ciBjYWxsYmFjayBmdW5jdGlvbiByZXR1cm5zIGZhbHNlIHRoaXMgd2lsbCB1c2UgdGhlIGpxdWVyeVxuICAgICAgICAgKiBjb252ZW50aW9uIC0gcHJldmVudCBkZWZhdWx0IGFuZCBzdG9wIHByb3BvZ2F0aW9uIG9uIHRoZSBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9maXJlQ2FsbGJhY2soY2FsbGJhY2ssIGUsIGNvbWJvLCBzZXF1ZW5jZSkge1xuXG4gICAgICAgICAgICAvLyBpZiB0aGlzIGV2ZW50IHNob3VsZCBub3QgaGFwcGVuIHN0b3AgaGVyZVxuICAgICAgICAgICAgaWYgKHNlbGYuc3RvcENhbGxiYWNrKGUsIGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudCwgY29tYm8sIHNlcXVlbmNlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKGUsIGNvbWJvKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBfcHJldmVudERlZmF1bHQoZSk7XG4gICAgICAgICAgICAgICAgX3N0b3BQcm9wYWdhdGlvbihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBoYW5kbGVzIGEgY2hhcmFjdGVyIGtleSBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY2hhcmFjdGVyXG4gICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyc1xuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuX2hhbmRsZUtleSA9IGZ1bmN0aW9uKGNoYXJhY3RlciwgbW9kaWZpZXJzLCBlKSB7XG4gICAgICAgICAgICB2YXIgY2FsbGJhY2tzID0gX2dldE1hdGNoZXMoY2hhcmFjdGVyLCBtb2RpZmllcnMsIGUpO1xuICAgICAgICAgICAgdmFyIGk7XG4gICAgICAgICAgICB2YXIgZG9Ob3RSZXNldCA9IHt9O1xuICAgICAgICAgICAgdmFyIG1heExldmVsID0gMDtcbiAgICAgICAgICAgIHZhciBwcm9jZXNzZWRTZXF1ZW5jZUNhbGxiYWNrID0gZmFsc2U7XG5cbiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgbWF4TGV2ZWwgZm9yIHNlcXVlbmNlcyBzbyB3ZSBjYW4gb25seSBleGVjdXRlIHRoZSBsb25nZXN0IGNhbGxiYWNrIHNlcXVlbmNlXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5zZXEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWF4TGV2ZWwgPSBNYXRoLm1heChtYXhMZXZlbCwgY2FsbGJhY2tzW2ldLmxldmVsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGxvb3AgdGhyb3VnaCBtYXRjaGluZyBjYWxsYmFja3MgZm9yIHRoaXMga2V5IGV2ZW50XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgKytpKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBmaXJlIGZvciBhbGwgc2VxdWVuY2UgY2FsbGJhY2tzXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBpcyBiZWNhdXNlIGlmIGZvciBleGFtcGxlIHlvdSBoYXZlIG11bHRpcGxlIHNlcXVlbmNlc1xuICAgICAgICAgICAgICAgIC8vIGJvdW5kIHN1Y2ggYXMgXCJnIGlcIiBhbmQgXCJnIHRcIiB0aGV5IGJvdGggbmVlZCB0byBmaXJlIHRoZVxuICAgICAgICAgICAgICAgIC8vIGNhbGxiYWNrIGZvciBtYXRjaGluZyBnIGNhdXNlIG90aGVyd2lzZSB5b3UgY2FuIG9ubHkgZXZlclxuICAgICAgICAgICAgICAgIC8vIG1hdGNoIHRoZSBmaXJzdCBvbmVcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2tzW2ldLnNlcSkge1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIG9ubHkgZmlyZSBjYWxsYmFja3MgZm9yIHRoZSBtYXhMZXZlbCB0byBwcmV2ZW50XG4gICAgICAgICAgICAgICAgICAgIC8vIHN1YnNlcXVlbmNlcyBmcm9tIGFsc28gZmlyaW5nXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIGZvciBleGFtcGxlICdhIG9wdGlvbiBiJyBzaG91bGQgbm90IGNhdXNlICdvcHRpb24gYicgdG8gZmlyZVxuICAgICAgICAgICAgICAgICAgICAvLyBldmVuIHRob3VnaCAnb3B0aW9uIGInIGlzIHBhcnQgb2YgdGhlIG90aGVyIHNlcXVlbmNlXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIGFueSBzZXF1ZW5jZXMgdGhhdCBkbyBub3QgbWF0Y2ggaGVyZSB3aWxsIGJlIGRpc2NhcmRlZFxuICAgICAgICAgICAgICAgICAgICAvLyBiZWxvdyBieSB0aGUgX3Jlc2V0U2VxdWVuY2VzIGNhbGxcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5sZXZlbCAhPSBtYXhMZXZlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZWRTZXF1ZW5jZUNhbGxiYWNrID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBrZWVwIGEgbGlzdCBvZiB3aGljaCBzZXF1ZW5jZXMgd2VyZSBtYXRjaGVzIGZvciBsYXRlclxuICAgICAgICAgICAgICAgICAgICBkb05vdFJlc2V0W2NhbGxiYWNrc1tpXS5zZXFdID0gMTtcbiAgICAgICAgICAgICAgICAgICAgX2ZpcmVDYWxsYmFjayhjYWxsYmFja3NbaV0uY2FsbGJhY2ssIGUsIGNhbGxiYWNrc1tpXS5jb21ibywgY2FsbGJhY2tzW2ldLnNlcSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZXJlIHdlcmUgbm8gc2VxdWVuY2UgbWF0Y2hlcyBidXQgd2UgYXJlIHN0aWxsIGhlcmVcbiAgICAgICAgICAgICAgICAvLyB0aGF0IG1lYW5zIHRoaXMgaXMgYSByZWd1bGFyIG1hdGNoIHNvIHdlIHNob3VsZCBmaXJlIHRoYXRcbiAgICAgICAgICAgICAgICBpZiAoIXByb2Nlc3NlZFNlcXVlbmNlQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgX2ZpcmVDYWxsYmFjayhjYWxsYmFja3NbaV0uY2FsbGJhY2ssIGUsIGNhbGxiYWNrc1tpXS5jb21ibyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBpZiB0aGUga2V5IHlvdSBwcmVzc2VkIG1hdGNoZXMgdGhlIHR5cGUgb2Ygc2VxdWVuY2Ugd2l0aG91dFxuICAgICAgICAgICAgLy8gYmVpbmcgYSBtb2RpZmllciAoaWUgXCJrZXl1cFwiIG9yIFwia2V5cHJlc3NcIikgdGhlbiB3ZSBzaG91bGRcbiAgICAgICAgICAgIC8vIHJlc2V0IGFsbCBzZXF1ZW5jZXMgdGhhdCB3ZXJlIG5vdCBtYXRjaGVkIGJ5IHRoaXMgZXZlbnRcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyB0aGlzIGlzIHNvLCBmb3IgZXhhbXBsZSwgaWYgeW91IGhhdmUgdGhlIHNlcXVlbmNlIFwiaCBhIHRcIiBhbmQgeW91XG4gICAgICAgICAgICAvLyB0eXBlIFwiaCBlIGEgciB0XCIgaXQgZG9lcyBub3QgbWF0Y2guICBpbiB0aGlzIGNhc2UgdGhlIFwiZVwiIHdpbGxcbiAgICAgICAgICAgIC8vIGNhdXNlIHRoZSBzZXF1ZW5jZSB0byByZXNldFxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIG1vZGlmaWVyIGtleXMgYXJlIGlnbm9yZWQgYmVjYXVzZSB5b3UgY2FuIGhhdmUgYSBzZXF1ZW5jZVxuICAgICAgICAgICAgLy8gdGhhdCBjb250YWlucyBtb2RpZmllcnMgc3VjaCBhcyBcImVudGVyIGN0cmwrc3BhY2VcIiBhbmQgaW4gbW9zdFxuICAgICAgICAgICAgLy8gY2FzZXMgdGhlIG1vZGlmaWVyIGtleSB3aWxsIGJlIHByZXNzZWQgYmVmb3JlIHRoZSBuZXh0IGtleVxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIGFsc28gaWYgeW91IGhhdmUgYSBzZXF1ZW5jZSBzdWNoIGFzIFwiY3RybCtiIGFcIiB0aGVuIHByZXNzaW5nIHRoZVxuICAgICAgICAgICAgLy8gXCJiXCIga2V5IHdpbGwgdHJpZ2dlciBhIFwia2V5cHJlc3NcIiBhbmQgYSBcImtleWRvd25cIlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIHRoZSBcImtleWRvd25cIiBpcyBleHBlY3RlZCB3aGVuIHRoZXJlIGlzIGEgbW9kaWZpZXIsIGJ1dCB0aGVcbiAgICAgICAgICAgIC8vIFwia2V5cHJlc3NcIiBlbmRzIHVwIG1hdGNoaW5nIHRoZSBfbmV4dEV4cGVjdGVkQWN0aW9uIHNpbmNlIGl0IG9jY3Vyc1xuICAgICAgICAgICAgLy8gYWZ0ZXIgYW5kIHRoYXQgY2F1c2VzIHRoZSBzZXF1ZW5jZSB0byByZXNldFxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIHdlIGlnbm9yZSBrZXlwcmVzc2VzIGluIGEgc2VxdWVuY2UgdGhhdCBkaXJlY3RseSBmb2xsb3cgYSBrZXlkb3duXG4gICAgICAgICAgICAvLyBmb3IgdGhlIHNhbWUgY2hhcmFjdGVyXG4gICAgICAgICAgICB2YXIgaWdub3JlVGhpc0tleXByZXNzID0gZS50eXBlID09ICdrZXlwcmVzcycgJiYgX2lnbm9yZU5leHRLZXlwcmVzcztcbiAgICAgICAgICAgIGlmIChlLnR5cGUgPT0gX25leHRFeHBlY3RlZEFjdGlvbiAmJiAhX2lzTW9kaWZpZXIoY2hhcmFjdGVyKSAmJiAhaWdub3JlVGhpc0tleXByZXNzKSB7XG4gICAgICAgICAgICAgICAgX3Jlc2V0U2VxdWVuY2VzKGRvTm90UmVzZXQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBfaWdub3JlTmV4dEtleXByZXNzID0gcHJvY2Vzc2VkU2VxdWVuY2VDYWxsYmFjayAmJiBlLnR5cGUgPT0gJ2tleWRvd24nO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBoYW5kbGVzIGEga2V5ZG93biBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9oYW5kbGVLZXlFdmVudChlKSB7XG5cbiAgICAgICAgICAgIC8vIG5vcm1hbGl6ZSBlLndoaWNoIGZvciBrZXkgZXZlbnRzXG4gICAgICAgICAgICAvLyBAc2VlIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDI4NTYyNy9qYXZhc2NyaXB0LWtleWNvZGUtdnMtY2hhcmNvZGUtdXR0ZXItY29uZnVzaW9uXG4gICAgICAgICAgICBpZiAodHlwZW9mIGUud2hpY2ggIT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgZS53aGljaCA9IGUua2V5Q29kZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGNoYXJhY3RlciA9IF9jaGFyYWN0ZXJGcm9tRXZlbnQoZSk7XG5cbiAgICAgICAgICAgIC8vIG5vIGNoYXJhY3RlciBmb3VuZCB0aGVuIHN0b3BcbiAgICAgICAgICAgIGlmICghY2hhcmFjdGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBuZWVkIHRvIHVzZSA9PT0gZm9yIHRoZSBjaGFyYWN0ZXIgY2hlY2sgYmVjYXVzZSB0aGUgY2hhcmFjdGVyIGNhbiBiZSAwXG4gICAgICAgICAgICBpZiAoZS50eXBlID09ICdrZXl1cCcgJiYgX2lnbm9yZU5leHRLZXl1cCA9PT0gY2hhcmFjdGVyKSB7XG4gICAgICAgICAgICAgICAgX2lnbm9yZU5leHRLZXl1cCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2VsZi5oYW5kbGVLZXkoY2hhcmFjdGVyLCBfZXZlbnRNb2RpZmllcnMoZSksIGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGNhbGxlZCB0byBzZXQgYSAxIHNlY29uZCB0aW1lb3V0IG9uIHRoZSBzcGVjaWZpZWQgc2VxdWVuY2VcbiAgICAgICAgICpcbiAgICAgICAgICogdGhpcyBpcyBzbyBhZnRlciBlYWNoIGtleSBwcmVzcyBpbiB0aGUgc2VxdWVuY2UgeW91IGhhdmUgMSBzZWNvbmRcbiAgICAgICAgICogdG8gcHJlc3MgdGhlIG5leHQga2V5IGJlZm9yZSB5b3UgaGF2ZSB0byBzdGFydCBvdmVyXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9yZXNldFNlcXVlbmNlVGltZXIoKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQoX3Jlc2V0VGltZXIpO1xuICAgICAgICAgICAgX3Jlc2V0VGltZXIgPSBzZXRUaW1lb3V0KF9yZXNldFNlcXVlbmNlcywgMTAwMCk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgYSBrZXkgc2VxdWVuY2UgdG8gYW4gZXZlbnRcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbWJvIC0gY29tYm8gc3BlY2lmaWVkIGluIGJpbmQgY2FsbFxuICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBrZXlzXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9iaW5kU2VxdWVuY2UoY29tYm8sIGtleXMsIGNhbGxiYWNrLCBhY3Rpb24pIHtcblxuICAgICAgICAgICAgLy8gc3RhcnQgb2ZmIGJ5IGFkZGluZyBhIHNlcXVlbmNlIGxldmVsIHJlY29yZCBmb3IgdGhpcyBjb21iaW5hdGlvblxuICAgICAgICAgICAgLy8gYW5kIHNldHRpbmcgdGhlIGxldmVsIHRvIDBcbiAgICAgICAgICAgIF9zZXF1ZW5jZUxldmVsc1tjb21ib10gPSAwO1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIGNhbGxiYWNrIHRvIGluY3JlYXNlIHRoZSBzZXF1ZW5jZSBsZXZlbCBmb3IgdGhpcyBzZXF1ZW5jZSBhbmQgcmVzZXRcbiAgICAgICAgICAgICAqIGFsbCBvdGhlciBzZXF1ZW5jZXMgdGhhdCB3ZXJlIGFjdGl2ZVxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuZXh0QWN0aW9uXG4gICAgICAgICAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGZ1bmN0aW9uIF9pbmNyZWFzZVNlcXVlbmNlKG5leHRBY3Rpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIF9uZXh0RXhwZWN0ZWRBY3Rpb24gPSBuZXh0QWN0aW9uO1xuICAgICAgICAgICAgICAgICAgICArK19zZXF1ZW5jZUxldmVsc1tjb21ib107XG4gICAgICAgICAgICAgICAgICAgIF9yZXNldFNlcXVlbmNlVGltZXIoKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIHdyYXBzIHRoZSBzcGVjaWZpZWQgY2FsbGJhY2sgaW5zaWRlIG9mIGFub3RoZXIgZnVuY3Rpb24gaW4gb3JkZXJcbiAgICAgICAgICAgICAqIHRvIHJlc2V0IGFsbCBzZXF1ZW5jZSBjb3VudGVycyBhcyBzb29uIGFzIHRoaXMgc2VxdWVuY2UgaXMgZG9uZVxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZnVuY3Rpb24gX2NhbGxiYWNrQW5kUmVzZXQoZSkge1xuICAgICAgICAgICAgICAgIF9maXJlQ2FsbGJhY2soY2FsbGJhY2ssIGUsIGNvbWJvKTtcblxuICAgICAgICAgICAgICAgIC8vIHdlIHNob3VsZCBpZ25vcmUgdGhlIG5leHQga2V5IHVwIGlmIHRoZSBhY3Rpb24gaXMga2V5IGRvd25cbiAgICAgICAgICAgICAgICAvLyBvciBrZXlwcmVzcy4gIHRoaXMgaXMgc28gaWYgeW91IGZpbmlzaCBhIHNlcXVlbmNlIGFuZFxuICAgICAgICAgICAgICAgIC8vIHJlbGVhc2UgdGhlIGtleSB0aGUgZmluYWwga2V5IHdpbGwgbm90IHRyaWdnZXIgYSBrZXl1cFxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gIT09ICdrZXl1cCcpIHtcbiAgICAgICAgICAgICAgICAgICAgX2lnbm9yZU5leHRLZXl1cCA9IF9jaGFyYWN0ZXJGcm9tRXZlbnQoZSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gd2VpcmQgcmFjZSBjb25kaXRpb24gaWYgYSBzZXF1ZW5jZSBlbmRzIHdpdGggdGhlIGtleVxuICAgICAgICAgICAgICAgIC8vIGFub3RoZXIgc2VxdWVuY2UgYmVnaW5zIHdpdGhcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KF9yZXNldFNlcXVlbmNlcywgMTApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBsb29wIHRocm91Z2gga2V5cyBvbmUgYXQgYSB0aW1lIGFuZCBiaW5kIHRoZSBhcHByb3ByaWF0ZSBjYWxsYmFja1xuICAgICAgICAgICAgLy8gZnVuY3Rpb24uICBmb3IgYW55IGtleSBsZWFkaW5nIHVwIHRvIHRoZSBmaW5hbCBvbmUgaXQgc2hvdWxkXG4gICAgICAgICAgICAvLyBpbmNyZWFzZSB0aGUgc2VxdWVuY2UuIGFmdGVyIHRoZSBmaW5hbCwgaXQgc2hvdWxkIHJlc2V0IGFsbCBzZXF1ZW5jZXNcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyBpZiBhbiBhY3Rpb24gaXMgc3BlY2lmaWVkIGluIHRoZSBvcmlnaW5hbCBiaW5kIGNhbGwgdGhlbiB0aGF0IHdpbGxcbiAgICAgICAgICAgIC8vIGJlIHVzZWQgdGhyb3VnaG91dC4gIG90aGVyd2lzZSB3ZSB3aWxsIHBhc3MgdGhlIGFjdGlvbiB0aGF0IHRoZVxuICAgICAgICAgICAgLy8gbmV4dCBrZXkgaW4gdGhlIHNlcXVlbmNlIHNob3VsZCBtYXRjaC4gIHRoaXMgYWxsb3dzIGEgc2VxdWVuY2VcbiAgICAgICAgICAgIC8vIHRvIG1peCBhbmQgbWF0Y2gga2V5cHJlc3MgYW5kIGtleWRvd24gZXZlbnRzIGRlcGVuZGluZyBvbiB3aGljaFxuICAgICAgICAgICAgLy8gb25lcyBhcmUgYmV0dGVyIHN1aXRlZCB0byB0aGUga2V5IHByb3ZpZGVkXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICB2YXIgaXNGaW5hbCA9IGkgKyAxID09PSBrZXlzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB2YXIgd3JhcHBlZENhbGxiYWNrID0gaXNGaW5hbCA/IF9jYWxsYmFja0FuZFJlc2V0IDogX2luY3JlYXNlU2VxdWVuY2UoYWN0aW9uIHx8IF9nZXRLZXlJbmZvKGtleXNbaSArIDFdKS5hY3Rpb24pO1xuICAgICAgICAgICAgICAgIF9iaW5kU2luZ2xlKGtleXNbaV0sIHdyYXBwZWRDYWxsYmFjaywgYWN0aW9uLCBjb21ibywgaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgYSBzaW5nbGUga2V5Ym9hcmQgY29tYmluYXRpb25cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbWJpbmF0aW9uXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gc2VxdWVuY2VOYW1lIC0gbmFtZSBvZiBzZXF1ZW5jZSBpZiBwYXJ0IG9mIHNlcXVlbmNlXG4gICAgICAgICAqIEBwYXJhbSB7bnVtYmVyPX0gbGV2ZWwgLSB3aGF0IHBhcnQgb2YgdGhlIHNlcXVlbmNlIHRoZSBjb21tYW5kIGlzXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9iaW5kU2luZ2xlKGNvbWJpbmF0aW9uLCBjYWxsYmFjaywgYWN0aW9uLCBzZXF1ZW5jZU5hbWUsIGxldmVsKSB7XG5cbiAgICAgICAgICAgIC8vIHN0b3JlIGEgZGlyZWN0IG1hcHBlZCByZWZlcmVuY2UgZm9yIHVzZSB3aXRoIE1vdXNldHJhcC50cmlnZ2VyXG4gICAgICAgICAgICBzZWxmLl9kaXJlY3RNYXBbY29tYmluYXRpb24gKyAnOicgKyBhY3Rpb25dID0gY2FsbGJhY2s7XG5cbiAgICAgICAgICAgIC8vIG1ha2Ugc3VyZSBtdWx0aXBsZSBzcGFjZXMgaW4gYSByb3cgYmVjb21lIGEgc2luZ2xlIHNwYWNlXG4gICAgICAgICAgICBjb21iaW5hdGlvbiA9IGNvbWJpbmF0aW9uLnJlcGxhY2UoL1xccysvZywgJyAnKTtcblxuICAgICAgICAgICAgdmFyIHNlcXVlbmNlID0gY29tYmluYXRpb24uc3BsaXQoJyAnKTtcbiAgICAgICAgICAgIHZhciBpbmZvO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGlzIHBhdHRlcm4gaXMgYSBzZXF1ZW5jZSBvZiBrZXlzIHRoZW4gcnVuIHRocm91Z2ggdGhpcyBtZXRob2RcbiAgICAgICAgICAgIC8vIHRvIHJlcHJvY2VzcyBlYWNoIHBhdHRlcm4gb25lIGtleSBhdCBhIHRpbWVcbiAgICAgICAgICAgIGlmIChzZXF1ZW5jZS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgX2JpbmRTZXF1ZW5jZShjb21iaW5hdGlvbiwgc2VxdWVuY2UsIGNhbGxiYWNrLCBhY3Rpb24pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaW5mbyA9IF9nZXRLZXlJbmZvKGNvbWJpbmF0aW9uLCBhY3Rpb24pO1xuXG4gICAgICAgICAgICAvLyBtYWtlIHN1cmUgdG8gaW5pdGlhbGl6ZSBhcnJheSBpZiB0aGlzIGlzIHRoZSBmaXJzdCB0aW1lXG4gICAgICAgICAgICAvLyBhIGNhbGxiYWNrIGlzIGFkZGVkIGZvciB0aGlzIGtleVxuICAgICAgICAgICAgc2VsZi5fY2FsbGJhY2tzW2luZm8ua2V5XSA9IHNlbGYuX2NhbGxiYWNrc1tpbmZvLmtleV0gfHwgW107XG5cbiAgICAgICAgICAgIC8vIHJlbW92ZSBhbiBleGlzdGluZyBtYXRjaCBpZiB0aGVyZSBpcyBvbmVcbiAgICAgICAgICAgIF9nZXRNYXRjaGVzKGluZm8ua2V5LCBpbmZvLm1vZGlmaWVycywge3R5cGU6IGluZm8uYWN0aW9ufSwgc2VxdWVuY2VOYW1lLCBjb21iaW5hdGlvbiwgbGV2ZWwpO1xuXG4gICAgICAgICAgICAvLyBhZGQgdGhpcyBjYWxsIGJhY2sgdG8gdGhlIGFycmF5XG4gICAgICAgICAgICAvLyBpZiBpdCBpcyBhIHNlcXVlbmNlIHB1dCBpdCBhdCB0aGUgYmVnaW5uaW5nXG4gICAgICAgICAgICAvLyBpZiBub3QgcHV0IGl0IGF0IHRoZSBlbmRcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyB0aGlzIGlzIGltcG9ydGFudCBiZWNhdXNlIHRoZSB3YXkgdGhlc2UgYXJlIHByb2Nlc3NlZCBleHBlY3RzXG4gICAgICAgICAgICAvLyB0aGUgc2VxdWVuY2Ugb25lcyB0byBjb21lIGZpcnN0XG4gICAgICAgICAgICBzZWxmLl9jYWxsYmFja3NbaW5mby5rZXldW3NlcXVlbmNlTmFtZSA/ICd1bnNoaWZ0JyA6ICdwdXNoJ10oe1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgICAgICAgICBtb2RpZmllcnM6IGluZm8ubW9kaWZpZXJzLFxuICAgICAgICAgICAgICAgIGFjdGlvbjogaW5mby5hY3Rpb24sXG4gICAgICAgICAgICAgICAgc2VxOiBzZXF1ZW5jZU5hbWUsXG4gICAgICAgICAgICAgICAgbGV2ZWw6IGxldmVsLFxuICAgICAgICAgICAgICAgIGNvbWJvOiBjb21iaW5hdGlvblxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgbXVsdGlwbGUgY29tYmluYXRpb25zIHRvIHRoZSBzYW1lIGNhbGxiYWNrXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGNvbWJpbmF0aW9uc1xuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ3x1bmRlZmluZWR9IGFjdGlvblxuICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLl9iaW5kTXVsdGlwbGUgPSBmdW5jdGlvbihjb21iaW5hdGlvbnMsIGNhbGxiYWNrLCBhY3Rpb24pIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29tYmluYXRpb25zLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgX2JpbmRTaW5nbGUoY29tYmluYXRpb25zW2ldLCBjYWxsYmFjaywgYWN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvLyBzdGFydCFcbiAgICAgICAgX2FkZEV2ZW50KHRhcmdldEVsZW1lbnQsICdrZXlwcmVzcycsIF9oYW5kbGVLZXlFdmVudCk7XG4gICAgICAgIF9hZGRFdmVudCh0YXJnZXRFbGVtZW50LCAna2V5ZG93bicsIF9oYW5kbGVLZXlFdmVudCk7XG4gICAgICAgIF9hZGRFdmVudCh0YXJnZXRFbGVtZW50LCAna2V5dXAnLCBfaGFuZGxlS2V5RXZlbnQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGJpbmRzIGFuIGV2ZW50IHRvIG1vdXNldHJhcFxuICAgICAqXG4gICAgICogY2FuIGJlIGEgc2luZ2xlIGtleSwgYSBjb21iaW5hdGlvbiBvZiBrZXlzIHNlcGFyYXRlZCB3aXRoICssXG4gICAgICogYW4gYXJyYXkgb2Yga2V5cywgb3IgYSBzZXF1ZW5jZSBvZiBrZXlzIHNlcGFyYXRlZCBieSBzcGFjZXNcbiAgICAgKlxuICAgICAqIGJlIHN1cmUgdG8gbGlzdCB0aGUgbW9kaWZpZXIga2V5cyBmaXJzdCB0byBtYWtlIHN1cmUgdGhhdCB0aGVcbiAgICAgKiBjb3JyZWN0IGtleSBlbmRzIHVwIGdldHRpbmcgYm91bmQgKHRoZSBsYXN0IGtleSBpbiB0aGUgcGF0dGVybilcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfEFycmF5fSBrZXlzXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvbiAtICdrZXlwcmVzcycsICdrZXlkb3duJywgb3IgJ2tleXVwJ1xuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBNb3VzZXRyYXAucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbihrZXlzLCBjYWxsYmFjaywgYWN0aW9uKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAga2V5cyA9IGtleXMgaW5zdGFuY2VvZiBBcnJheSA/IGtleXMgOiBba2V5c107XG4gICAgICAgIHNlbGYuX2JpbmRNdWx0aXBsZS5jYWxsKHNlbGYsIGtleXMsIGNhbGxiYWNrLCBhY3Rpb24pO1xuICAgICAgICByZXR1cm4gc2VsZjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdW5iaW5kcyBhbiBldmVudCB0byBtb3VzZXRyYXBcbiAgICAgKlxuICAgICAqIHRoZSB1bmJpbmRpbmcgc2V0cyB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gb2YgdGhlIHNwZWNpZmllZCBrZXkgY29tYm9cbiAgICAgKiB0byBhbiBlbXB0eSBmdW5jdGlvbiBhbmQgZGVsZXRlcyB0aGUgY29ycmVzcG9uZGluZyBrZXkgaW4gdGhlXG4gICAgICogX2RpcmVjdE1hcCBkaWN0LlxuICAgICAqXG4gICAgICogVE9ETzogYWN0dWFsbHkgcmVtb3ZlIHRoaXMgZnJvbSB0aGUgX2NhbGxiYWNrcyBkaWN0aW9uYXJ5IGluc3RlYWRcbiAgICAgKiBvZiBiaW5kaW5nIGFuIGVtcHR5IGZ1bmN0aW9uXG4gICAgICpcbiAgICAgKiB0aGUga2V5Y29tYm8rYWN0aW9uIGhhcyB0byBiZSBleGFjdGx5IHRoZSBzYW1lIGFzXG4gICAgICogaXQgd2FzIGRlZmluZWQgaW4gdGhlIGJpbmQgbWV0aG9kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ3xBcnJheX0ga2V5c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhY3Rpb25cbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgTW91c2V0cmFwLnByb3RvdHlwZS51bmJpbmQgPSBmdW5jdGlvbihrZXlzLCBhY3Rpb24pIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICByZXR1cm4gc2VsZi5iaW5kLmNhbGwoc2VsZiwga2V5cywgZnVuY3Rpb24oKSB7fSwgYWN0aW9uKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdHJpZ2dlcnMgYW4gZXZlbnQgdGhhdCBoYXMgYWxyZWFkeSBiZWVuIGJvdW5kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUudHJpZ2dlciA9IGZ1bmN0aW9uKGtleXMsIGFjdGlvbikge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIGlmIChzZWxmLl9kaXJlY3RNYXBba2V5cyArICc6JyArIGFjdGlvbl0pIHtcbiAgICAgICAgICAgIHNlbGYuX2RpcmVjdE1hcFtrZXlzICsgJzonICsgYWN0aW9uXSh7fSwga2V5cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlbGY7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIHJlc2V0cyB0aGUgbGlicmFyeSBiYWNrIHRvIGl0cyBpbml0aWFsIHN0YXRlLiAgdGhpcyBpcyB1c2VmdWxcbiAgICAgKiBpZiB5b3Ugd2FudCB0byBjbGVhciBvdXQgdGhlIGN1cnJlbnQga2V5Ym9hcmQgc2hvcnRjdXRzIGFuZCBiaW5kXG4gICAgICogbmV3IG9uZXMgLSBmb3IgZXhhbXBsZSBpZiB5b3Ugc3dpdGNoIHRvIGFub3RoZXIgcGFnZVxuICAgICAqXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICBzZWxmLl9jYWxsYmFja3MgPSB7fTtcbiAgICAgICAgc2VsZi5fZGlyZWN0TWFwID0ge307XG4gICAgICAgIHJldHVybiBzZWxmO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBzaG91bGQgd2Ugc3RvcCB0aGlzIGV2ZW50IGJlZm9yZSBmaXJpbmcgb2ZmIGNhbGxiYWNrc1xuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAgICovXG4gICAgTW91c2V0cmFwLnByb3RvdHlwZS5zdG9wQ2FsbGJhY2sgPSBmdW5jdGlvbihlLCBlbGVtZW50KSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgICAgICAvLyBpZiB0aGUgZWxlbWVudCBoYXMgdGhlIGNsYXNzIFwibW91c2V0cmFwXCIgdGhlbiBubyBuZWVkIHRvIHN0b3BcbiAgICAgICAgaWYgKCgnICcgKyBlbGVtZW50LmNsYXNzTmFtZSArICcgJykuaW5kZXhPZignIG1vdXNldHJhcCAnKSA+IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX2JlbG9uZ3NUbyhlbGVtZW50LCBzZWxmLnRhcmdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHN0b3AgZm9yIGlucHV0LCBzZWxlY3QsIGFuZCB0ZXh0YXJlYVxuICAgICAgICByZXR1cm4gZWxlbWVudC50YWdOYW1lID09ICdJTlBVVCcgfHwgZWxlbWVudC50YWdOYW1lID09ICdTRUxFQ1QnIHx8IGVsZW1lbnQudGFnTmFtZSA9PSAnVEVYVEFSRUEnIHx8IGVsZW1lbnQuaXNDb250ZW50RWRpdGFibGU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIGV4cG9zZXMgX2hhbmRsZUtleSBwdWJsaWNseSBzbyBpdCBjYW4gYmUgb3ZlcndyaXR0ZW4gYnkgZXh0ZW5zaW9uc1xuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUuaGFuZGxlS2V5ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgcmV0dXJuIHNlbGYuX2hhbmRsZUtleS5hcHBseShzZWxmLCBhcmd1bWVudHMpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBhbGxvdyBjdXN0b20ga2V5IG1hcHBpbmdzXG4gICAgICovXG4gICAgTW91c2V0cmFwLmFkZEtleWNvZGVzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgICAgIGlmIChvYmplY3QuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgIF9NQVBba2V5XSA9IG9iamVjdFtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIF9SRVZFUlNFX01BUCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEluaXQgdGhlIGdsb2JhbCBtb3VzZXRyYXAgZnVuY3Rpb25zXG4gICAgICpcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBuZWVkZWQgdG8gYWxsb3cgdGhlIGdsb2JhbCBtb3VzZXRyYXAgZnVuY3Rpb25zIHRvIHdvcmtcbiAgICAgKiBub3cgdGhhdCBtb3VzZXRyYXAgaXMgYSBjb25zdHJ1Y3RvciBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBNb3VzZXRyYXAuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZG9jdW1lbnRNb3VzZXRyYXAgPSBNb3VzZXRyYXAoZG9jdW1lbnQpO1xuICAgICAgICBmb3IgKHZhciBtZXRob2QgaW4gZG9jdW1lbnRNb3VzZXRyYXApIHtcbiAgICAgICAgICAgIGlmIChtZXRob2QuY2hhckF0KDApICE9PSAnXycpIHtcbiAgICAgICAgICAgICAgICBNb3VzZXRyYXBbbWV0aG9kXSA9IChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50TW91c2V0cmFwW21ldGhvZF0uYXBwbHkoZG9jdW1lbnRNb3VzZXRyYXAsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSAobWV0aG9kKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgTW91c2V0cmFwLmluaXQoKTtcblxuICAgIC8vIGV4cG9zZSBtb3VzZXRyYXAgdG8gdGhlIGdsb2JhbCBvYmplY3RcbiAgICB3aW5kb3cuTW91c2V0cmFwID0gTW91c2V0cmFwO1xuXG4gICAgLy8gZXhwb3NlIGFzIGEgY29tbW9uIGpzIG1vZHVsZVxuICAgIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IE1vdXNldHJhcDtcbiAgICB9XG5cbiAgICAvLyBleHBvc2UgbW91c2V0cmFwIGFzIGFuIEFNRCBtb2R1bGVcbiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgICAgIGRlZmluZShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBNb3VzZXRyYXA7XG4gICAgICAgIH0pO1xuICAgIH1cbn0pICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IG51bGwsIHR5cGVvZiAgd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogbnVsbCk7XG4iLCJNb3VzZXRyYXAgPSByZXF1aXJlKCdtb3VzZXRyYXAnKTtcbmthdGV4ID0gcmVxdWlyZSgnLi4vbGliL2thdGV4L2thdGV4LW1vZGlmaWVkLm1pbi5qcycpO1xuR3VwcHlCYWNrZW5kID0gcmVxdWlyZSgnLi9ndXBweV9iYWNrZW5kLmpzJyk7XG5HdXBweVV0aWxzID0gcmVxdWlyZSgnLi9ndXBweV91dGlscy5qcycpO1xuR3VwcHlTeW1ib2xzID0gcmVxdWlyZSgnLi9ndXBweV9zeW1ib2xzLmpzJyk7XG5HdXBweUhlbHAgPSByZXF1aXJlKCcuL2d1cHB5X2hlbHAuanMnKTtcblxuLyoqXG4gICBAY2xhc3NcbiAgIEBjbGFzc2Rlc2MgQW4gaW5zdGFuY2Ugb2YgR3VwcHlcbiAgIEBwYXJhbSB7c3RyaW5nfSBndXBweV9kaXYgLSBUaGUgc3RyaW5nIElEIG9mIHRoZSBlbGVtZW50IHRoYXQgc2hvdWxkIGJlIGNvbnZlcnRlZCB0byBhbiBlZGl0b3JcbiAgIEBwYXJhbSB7T2JqZWN0fSBbY29uZmlnXSAtIFRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHRoaXMgaW5zdGFuY2VcbiAgIEBwYXJhbSB7T2JqZWN0fSBbY29uZmlnLmV2ZW50c10gLSBBIGRpY3Rpb25hcnkgb2YgZXZlbnRzXG4gICBAcGFyYW0ge2Z1bmN0aW9ufSBbY29uZmlnLmV2ZW50cy5yZWFkeV0gLSBDYWxsZWQgd2hlbiB0aGUgaW5zdGFuY2UgaXMgcmVhZHkgdG8gcmVuZGVyIHRoaW5ncy4gXG4gICBAcGFyYW0ge2Z1bmN0aW9ufSBbY29uZmlnLmV2ZW50cy5jaGFuZ2VdIC0gQ2FsbGVkIHdoZW4gdGhlIGVkaXRvcidzIGNvbnRlbnQgY2hhbmdlcy4gIEFyZ3VtZW50IHdpbGwgYmUgYSBkaWN0aW9uYXJ5IHdpdGgga2V5cyBgb2xkYCBhbmQgYG5ld2AgY29udGFpbmluZyB0aGUgb2xkIGFuZCBuZXcgZG9jdW1lbnRzLCByZXNwZWN0aXZlbHkuIFxuICAgQHBhcmFtIHtmdW5jdGlvbn0gW2NvbmZpZy5ldmVudHMubGVmdF9lbmRdIC0gQ2FsbGVkIHdoZW4gdGhlIGN1cnNvciBpcyBhdCB0aGUgbGVmdC1tb3N0IHBvaW50IGFuZCBhIGNvbW1hbmQgaXMgcmVjZWl2ZWQgdG8gbW92ZSB0aGUgY3Vyc29yIHRvIHRoZSBsZWZ0IChlLmcuLCB2aWEgdGhlIGxlZnQgYXJyb3cga2V5KS4gIEFyZ3VtZW50IHdpbGwgYmUgbnVsbC5cbiAgIEBwYXJhbSB7ZnVuY3Rpb259IFtjb25maWcuZXZlbnRzLmxlZnRfZW5kXSAtIENhbGxlZCB3aGVuIHRoZSBjdXJzb3IgaXMgYXQgdGhlIHJpZ2h0LW1vc3QgcG9pbnQgYW5kIGEgY29tbWFuZCBpcyByZWNlaXZlZCB0byBtb3ZlIHRoZSBjdXJzb3IgdG8gdGhlIHJpZ2h0IChlLmcuLCB2aWEgdGhlIHJpZ2h0IGFycm93IGtleSkuICBBcmd1bWVudCB3aWxsIGJlIG51bGwuXG4gICBAcGFyYW0ge2Z1bmN0aW9ufSBbY29uZmlnLmV2ZW50cy5kb25lXSAtIENhbGxlZCB3aGVuIHRoZSBlbnRlciBrZXkgaXMgcHJlc3NlZCBpbiB0aGUgZWRpdG9yLlxuICAgQHBhcmFtIHtmdW5jdGlvbn0gW2NvbmZpZy5ldmVudHMuY29tcGxldGlvbl0gLSBDYWxsZWQgd2hlbiB0aGUgZWRpdG9yIG91dHB1dHMgdGFiIGNvbXBsZXRpb25cbiAgICAgIG9wdGlvbnMuICBBcmd1bWVudCBpcyBhIGRpY3Rpb25hcnkgd2l0aCB0aGUga2V5IGBjYW5kaWRhdGVzYCwgYVxuICAgICAgbGlzdCBvZiB0aGUgb3B0aW9ucyBmb3IgdGFiLWNvbXBsZXRpb24uXG4gICBAcGFyYW0ge2Z1bmN0aW9ufSBbY29uZmlnLmV2ZW50cy5kZWJ1Z10gLSBDYWxsZWQgd2hlbiB0aGUgZWRpdG9yIG91dHB1dHMgc29tZSBkZWJ1ZyBpbmZvcm1hdGlvbi5cbiAgICAgIEFyZ3VtZW50IGlzIGEgZGljdGlvbmFyeSB3aXRoIHRoZSBrZXkgYG1lc3NhZ2VgLlxuICAgQHBhcmFtIHtmdW5jdGlvbn0gW2NvbmZpZy5ldmVudHMuZXJyb3JdIC0gQ2FsbGVkIHdoZW4gdGhlIGVkaXRvciByZWNlaXZlcyBhbiBlcnJvci4gIEFyZ3VtZW50IGlzXG4gICAgICBhIGRpY3Rpb25hcnkgd2l0aCB0aGUga2V5IGBtZXNzYWdlYC5cbiAgIEBwYXJhbSB7ZnVuY3Rpb259IFtjb25maWcuZXZlbnRzLmZvY3VzXSAtIENhbGxlZCB3aGVuIHRoZSBlZGl0b3IgaXMgZm9jdXNlZCBvciB1bmZvY3VzZWQuXG4gICAgICBBcmd1bWVudCB3aWxsIGhhdmUgYSBzaW5nbGUga2V5IGBmb2N1c2VkYCB3aGljaCB3aWxsIGJlIGB0cnVlYFxuICAgICAgb3IgYGZhbHNlYCBhY2NvcmRpbmcgdG8gd2hldGhlciB0aGUgZWRpdG9yIGlzIG5ld2x5IGZvY3VzZWQgb3JcbiAgICAgIG5ld2x5IHVuZm9jdXNlZCAocmVzcGVjdGl2ZWx5KS5cbiAgIEBwYXJhbSB7T2JqZWN0fSBbY29uZmlnLm9wdGlvbnNdIC0gQSBkaWN0aW9uYXJ5IG9mIG9wdGlvbnNcbiAgIEBwYXJhbSB7c3RyaW5nfSBbY29uZmlnLm9wdGlvbnMueG1sX2NvbnRlbnQ9PG0+PGUvPjwvbT5dIC0gQW4gWE1MXG4gICAgICBzdHJpbmcgd2l0aCB3aGljaCB0byBpbml0aWFsaXNlIHRoZSBlZGl0b3IncyBzdGF0ZS5cbiAgIEBwYXJhbSB7Ym9vbGVhbn0gW2NvbmZpZy5vcHRpb25zLmF1dG9yZXBsYWNlPXRydWVdIC0gRGV0ZXJtaW5lc1xuICAgICAgd2hldGhlciBvciBub3QgdG8gYXV0b3JlcGxhY2UgdHlwZWQgdGV4dCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nXG4gICAgICBzeW1ib2xzIHdoZW4gcG9zc2libGUuXG4gICBAcGFyYW0ge3N0cmluZ30gW2NvbmZpZy5vcHRpb25zLmJsYW5rPVwiXCJdIC0gQSBMYVRlWCBzdHJpbmcgdGhhdFxuICAgICAgc3BlY2lmaWVzIHdoYXQgdGhlIGNhcmV0IHNob3VsZCBsb29rIGxpa2Ugd2hlbiBpbiBhIGJsYW5rIHNwb3QuXG4gICBAcGFyYW0ge3N0cmluZ30gW2NvbmZpZy5vcHRpb25zLmVtcHR5X2NvbnRlbnQ9XFxjb2xvcntyZWR9e1s/XX1dIC0gQVxuICAgICAgTGFUZVggc3RyaW5nIHRoYXQgd2lsbCBiZSBkaXNwbGF5ZWQgd2hlbiB0aGUgZWRpdG9yIGlzIGJvdGhcbiAgICAgIGluYWN0aXZlIGFuZCBjb250YWlucyBubyBjb250ZW50LlxuICAgQHBhcmFtIHtzdHJpbmdbXX0gW2NvbmZpZy5vcHRpb25zLmJsYWNrbGlzdD1bXV0gLSBBIGxpc3Qgb2Ygc3RyaW5nXG4gICAgICBzeW1ib2wgbmFtZXMsIGNvcnJlc3BvbmRpbmcgdG8gc3ltYm9scyB0aGF0IHNob3VsZCBub3QgYmVcbiAgICAgIGFsbG93ZWQgaW4gdGhpcyBpbnN0YW5jZSBvZiB0aGUgZWRpdG9yLlxuICAgQHBhcmFtIHtzdHJpbmd9IFtjb25maWcub3B0aW9ucy5jbGlwdHlwZV0gLSBBIHN0cmluZywgZWl0aGVyXG4gICAgICBcInRleHRcIiBvciBcImxhdGV4XCIuICBJZiB0aGlzIG9wdGlvbiBpcyBwcmVzZW50LCB3aGVuIHRleHQgaXNcbiAgICAgIHBsYWNlZCBvbnRvIHRoZSBlZGl0b3IgY2xpcGJvYXJkLCB0aGUgY29udGVudHMgb2YgdGhlIGVkaXRvclxuICAgICAgd2lsbCBiZSByZW5kZXJlZCBpbnRvIGVpdGhlciBwbGFpbiB0ZXh0IG9yIExhVGVYIChkZXBlbmRpbmcgb25cbiAgICAgIHRoZSB2YWx1ZSBvZiB0aGlzIG9wdGlvbikgYW5kIGFuIGF0dGVtcHQgd2lsbCBiZSBtYWRlIHRvIGNvcHlcbiAgICAgIHRoZSByZXN1bHQgdG8gdGhlIHN5c3RlbSBjbGlwYm9hcmQuXG4gICBAY29uc3RydWN0b3IgXG4gKi9cbnZhciBHdXBweSA9IGZ1bmN0aW9uKGd1cHB5X2RpdiwgY29uZmlnKXtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICB2YXIgZXZlbnRzID0gY29uZmlnWydldmVudHMnXSB8fCB7fVxuICAgIHZhciBvcHRpb25zID0gY29uZmlnWydvcHRpb25zJ10gfHwge307XG5cbiAgICBpZih0eXBlb2YgZ3VwcHlfZGl2ID09PSAnc3RyaW5nJyB8fCBndXBweV9kaXYgaW5zdGFuY2VvZiBTdHJpbmcpe1xuXHRndXBweV9kaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChndXBweV9kaXYpO1xuICAgIH1cbiAgICBcbiAgICAvLyBTZXQgdGhlIGlkIG9uIHRoZSBkaXYgaWYgaXQgaXMgbm90IGN1cnJlbnRseSBzZXQuXG4gICAgaWYoIShndXBweV9kaXYuaWQpKXtcblx0dmFyIGkgPSBHdXBweS5tYXhfdWlkIHx8IDA7XG5cdHdoaWxlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ3VwcHlfdWlkX1wiK2kpKSBpKys7XG5cdEd1cHB5Lm1heF91aWQgPSBpO1xuXHRndXBweV9kaXYuaWQgPSBcImd1cHB5X3VpZF9cIitpO1xuICAgIH1cbiAgICB2YXIgaSA9IEd1cHB5Lm1heF90YWJJbmRleCB8fCAwO1xuICAgIGd1cHB5X2Rpdi50YWJJbmRleCA9IGk7XG4gICAgR3VwcHkubWF4X3RhYkluZGV4ID0gaSsxO1xuICAgIFxuICAgIHRoaXMuYnV0dG9uc19kaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRoaXMuYnV0dG9uc19kaXYuYXBwZW5kQ2hpbGQoR3VwcHkubWFrZV9idXR0b24oXCJpY29ucy9rZXlib2FyZC5wbmdcIiwgZnVuY3Rpb24oZSkge30pKTtcbiAgICB0aGlzLmJ1dHRvbnNfZGl2LmFwcGVuZENoaWxkKEd1cHB5Lm1ha2VfYnV0dG9uKFwiaWNvbnMvc2V0dGluZ3MucG5nXCIsIGZ1bmN0aW9uKGUpe30pKTtcbiAgICB0aGlzLmJ1dHRvbnNfZGl2LmFwcGVuZENoaWxkKEd1cHB5Lm1ha2VfYnV0dG9uKFwiaWNvbnMvaGVscC5wbmdcIiwgZnVuY3Rpb24oZSl7IHNlbGYudG9nZ2xlX2hlbHAoKTsgfSkpO1xuICAgIHRoaXMuYnV0dG9uc19kaXYuc3R5bGUgPSBcInBvc2l0aW9uOmFic29sdXRlO2JvdHRvbTowO3JpZ2h0OjA7cGFkZGluZzowIDNweCAzcHggMDtkaXNwbGF5Om5vbmU7XCI7XG5cbiAgICBndXBweV9kaXYuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIixmdW5jdGlvbihlKXtzZWxmLmJ1dHRvbnNfZGl2LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7fSwgZmFsc2UpO1xuICAgIGd1cHB5X2Rpdi5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLGZ1bmN0aW9uKGUpe3NlbGYuYnV0dG9uc19kaXYuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO30sIGZhbHNlKTtcbiAgICB0aGlzLmVkaXRvcl9hY3RpdmUgPSB0cnVlO1xuICAgIHRoaXMuZW1wdHlfY29udGVudCA9IG9wdGlvbnNbJ2VtcHR5X2NvbnRlbnQnXSB8fCBcIlxcXFxyZWR7Wz9dfVwiXG4gICAgdGhpcy5lZGl0b3IgPSBndXBweV9kaXY7XG4gICAgdGhpcy5ibGFja2xpc3QgPSBbXTtcbiAgICB0aGlzLmF1dG9yZXBsYWNlID0gdHJ1ZTtcbiAgICB0aGlzLnJlYWR5ID0gZmFsc2U7XG5cbiAgICB0aGlzLmV2ZW50cyA9IHt9O1xuICAgIFxuICAgIEd1cHB5Lmluc3RhbmNlc1tndXBweV9kaXYuaWRdID0gdGhpcztcblxuICAgIGNvbmZpZ1sncGFyZW50J10gPSBzZWxmO1xuXG4gICAgLyoqICAgQG1lbWJlciB7R3VwcHlCYWNrZW5kfSAqL1xuICAgIHRoaXMuYmFja2VuZCA9IG5ldyBHdXBweUJhY2tlbmQoY29uZmlnKTtcbiAgICB0aGlzLnRlbXBfY3Vyc29yID0ge1wibm9kZVwiOm51bGwsXCJjYXJldFwiOjB9XG4gICAgdGhpcy5lZGl0b3IuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixHdXBweS5rZXlfZG93biwgZmFsc2UpO1xuICAgIHRoaXMuZWRpdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLEd1cHB5LmtleV91cCwgZmFsc2UpO1xuICAgIHRoaXMuZWRpdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLCBmdW5jdGlvbihlKSB7IEd1cHB5LmtiLmFsdF9kb3duID0gZmFsc2U7IGlmKHNlbGYuYWN0aXZhdGUpIHNlbGYuYWN0aXZhdGUoKTt9LCBmYWxzZSk7XG4gICAgaWYoR3VwcHkucmVhZHkgJiYgIXRoaXMucmVhZHkpe1xuICAgIFx0dGhpcy5yZWFkeSA9IHRydWU7XG4gICAgXHR0aGlzLmJhY2tlbmQuZmlyZV9ldmVudChcInJlYWR5XCIpO1xuXHR0aGlzLnJlbmRlcih0cnVlKTtcbiAgICB9XG4gICAgdGhpcy5kZWFjdGl2YXRlKCk7XG4gICAgdGhpcy5yZWNvbXB1dGVfbG9jYXRpb25zX3BhdGhzKCk7XG59XG5cbkd1cHB5Lmluc3RhbmNlcyA9IHt9O1xuR3VwcHkucmVhZHkgPSBmYWxzZTtcblxuR3VwcHkuYWN0aXZlX2d1cHB5ID0gbnVsbDtcblxuR3VwcHkubWFrZV9idXR0b24gPSBmdW5jdGlvbih1cmwsIGNiKXtcbiAgICB2YXIgYiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgYi5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLFwiZ3VwcHktYnV0dG9uXCIpO1xuICAgIGIuc3R5bGU9XCJjdXJzb3I6cG9pbnRlcjtoZWlnaHQ6MTZweDt3aWR0aDoxNnB4O3BhZGRpbmctbGVmdDo0cHg7b3BhY2l0eTowLjU7XCI7XG4gICAgYi5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgdXJsKTtcbiAgICBpZihjYil7XG5cdGIub25jbGljayA9IGZ1bmN0aW9uKGUpe1xuXHQgICAgY2IoZSk7XG5cdCAgICBpZihlLmNhbmNlbEJ1YmJsZSE9bnVsbCkgZS5jYW5jZWxCdWJibGUgPSB0cnVlO1xuXHQgICAgaWYoZS5zdG9wUHJvcGFnYXRpb24pIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdCAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cdCAgICByZXR1cm4gZmFsc2U7XG5cdH07XG4gICAgfVxuICAgIHJldHVybiBiO1xufVxuXG5HdXBweS5hZGRfc3ltYm9scyA9IGZ1bmN0aW9uKHN5bWJvbHMpe1xuICAgIGZvcih2YXIgcyBpbiBzeW1ib2xzKXtcblx0dmFyIG5ld19zeW1zID0gR3VwcHlTeW1ib2xzLmFkZF9zeW1ib2xzKHMsc3ltYm9sc1tzXSwgR3VwcHlTeW1ib2xzLnN5bWJvbHMpO1xuXHRmb3IodmFyIHMgaW4gbmV3X3N5bXMpXG5cdCAgICBHdXBweVN5bWJvbHMuc3ltYm9sc1tzXSA9IG5ld19zeW1zW3NdO1xuICAgIH1cbiAgICBmb3IodmFyIGkgaW4gR3VwcHkuaW5zdGFuY2VzKXtcblx0Zm9yKHZhciBzIGluIHN5bWJvbHMpe1xuXHQgICAgR3VwcHkuaW5zdGFuY2VzW2ldLmJhY2tlbmQuc3ltYm9sc1tzXSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoc3ltYm9sc1tzXSkpO1xuXHR9XG4gICAgfVxufVxuXG5HdXBweS5zZXRfZ2xvYmFsX3N5bWJvbHMgPSBmdW5jdGlvbihzeW1ib2xzKXtcbiAgICBHdXBweVN5bWJvbHMuc3ltYm9scyA9IHt9O1xuICAgIEd1cHB5LmFkZF9zeW1ib2xzKHN5bWJvbHMpO1xufVxuXG5HdXBweS5yZXNldF9nbG9iYWxfc3ltYm9scyA9IGZ1bmN0aW9uKCl7XG4gICAgZm9yKHZhciBpIGluIEd1cHB5Lmluc3RhbmNlcyl7XG5cdEd1cHB5Lmluc3RhbmNlc1tpXS5iYWNrZW5kLnN5bWJvbHMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KEd1cHB5U3ltYm9scy5zeW1ib2xzKSk7XG4gICAgfVxufVxuXG4vKiogXG4gICAgSW5pdGlhbGlzZSB0aGUgc3ltYm9scyBmb3IgYWxsIGluc3RhbmNlcyBvZiB0aGUgZWRpdG9yXG4gICAgQG1lbWJlcm9mIEd1cHB5XG4gICAgQHBhcmFtIHtzdHJpbmdbXX0gc3ltYm9scyAtIEEgbGlzdCBvZiBVUkxzIGZvciBzeW1ib2wgSlNPTiBmaWxlcyB0byByZXF1ZXN0XG4qL1xuR3VwcHkuaW5pdF9zeW1ib2xzID0gZnVuY3Rpb24oc3ltYm9scyl7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChHdXBweUhlbHApO1xuICAgIHZhciBhbGxfcmVhZHkgPSBmdW5jdGlvbigpe1xuXHRHdXBweS5yZWdpc3Rlcl9rZXlib2FyZF9oYW5kbGVycygpO1xuXHRmb3IodmFyIGkgaW4gR3VwcHkuaW5zdGFuY2VzKXtcblx0ICAgIEd1cHB5Lmluc3RhbmNlc1tpXS5yZWFkeSA9IHRydWU7XG5cdCAgICBHdXBweS5pbnN0YW5jZXNbaV0ucmVuZGVyKHRydWUpO1xuXHQgICAgR3VwcHkuaW5zdGFuY2VzW2ldLmJhY2tlbmQuc3ltYm9scyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoR3VwcHlTeW1ib2xzLnN5bWJvbHMpKTtcblx0ICAgIEd1cHB5Lmluc3RhbmNlc1tpXS5iYWNrZW5kLnJlYWR5ID0gdHJ1ZTtcblx0ICAgIEd1cHB5Lmluc3RhbmNlc1tpXS5iYWNrZW5kLmZpcmVfZXZlbnQoXCJyZWFkeVwiKTtcblx0ICAgIEd1cHB5Lmluc3RhbmNlc1tpXS5ldmVudHNbXCJyZWFkeVwiXSA9IG51bGw7XG5cdH1cblx0R3VwcHlCYWNrZW5kLnJlYWR5ID0gdHJ1ZTtcbiAgICB9XG4gICAgaWYoIShBcnJheS5pc0FycmF5KHN5bWJvbHMpKSl7XG5cdHN5bWJvbHMgPSBbc3ltYm9sc107XG4gICAgfVxuICAgIHZhciBjYWxscyA9IFtdO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKXtcblx0dmFyIHggPSBmdW5jdGlvbiBvdXRlcihqKXtcblx0ICAgIHJldHVybiBmdW5jdGlvbihjYWxsYmFjayl7XG5cdFx0dmFyIHJlcSA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXHRcdHJlcS5vbmxvYWQgPSBmdW5jdGlvbigpe1xuXHRcdCAgICB2YXIgc3ltcyA9IEpTT04ucGFyc2UodGhpcy5yZXNwb25zZVRleHQpO1xuXHRcdCAgICB2YXIgdGVtcGxhdGVzID0gc3ltc1tcIl90ZW1wbGF0ZXNcIl07XG5cdFx0ICAgIGlmKHRlbXBsYXRlcyl7XG5cdFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGVtcGxhdGVzLmxlbmd0aDsgaSsrKXtcblx0XHRcdCAgICB2YXIgdCA9IHRlbXBsYXRlc1tpXS50ZW1wbGF0ZTtcblx0XHRcdCAgICBmb3IodmFyIHYgaW4gdGVtcGxhdGVzW2ldLnZhbHVlcyl7XG5cdFx0XHRcdGlmKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0ZW1wbGF0ZXNbaV0udmFsdWVzKSA9PSBcIltvYmplY3QgQXJyYXldXCIpe1xuXHRcdFx0XHQgICAgdmFyIG5hbWUgPSB0ZW1wbGF0ZXNbaV0udmFsdWVzW3ZdO1xuXHRcdFx0XHQgICAgdmFyIGFyZ3MgPSB7fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2V7XG5cdFx0XHRcdCAgICB2YXIgbmFtZSA9IHY7XG5cdFx0XHRcdCAgICB2YXIgYXJncyA9IHRlbXBsYXRlc1tpXS52YWx1ZXNbdl07XG5cdFx0XHRcdH1cblx0XHRcdFx0dmFyIHN5bSA9IEd1cHB5U3ltYm9scy5ldmFsX3RlbXBsYXRlKEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodCkpLCBuYW1lLCBhcmdzKTtcblx0XHRcdFx0R3VwcHlTeW1ib2xzLnN5bWJvbHNbbmFtZV0gPSBzeW07XG5cdFx0XHQgICAgfVxuXHRcdFx0fVxuXHRcdCAgICB9XG5cdFx0ICAgIGZvcih2YXIgcyBpbiBzeW1zKXtcblx0XHRcdEd1cHB5U3ltYm9scy5zeW1ib2xzW3NdID0gc3ltc1tzXTtcblx0XHQgICAgfVxuXHRcdCAgICBjYWxsYmFjaygpO1xuXHRcdH07XG5cdFx0cmVxLm9wZW4oXCJnZXRcIiwgc3ltYm9sc1tqXSwgdHJ1ZSk7XG5cdFx0cmVxLnNlbmQoKTtcblx0ICAgIH1cblx0fShpKTtcblx0Y2FsbHMucHVzaCh4KTtcbiAgICB9XG4gICAgY2FsbHMucHVzaChhbGxfcmVhZHkpO1xuICAgIHZhciBqID0gMDtcbiAgICB2YXIgY2IgPSBmdW5jdGlvbigpe1xuXHRqICs9IDE7XG5cdGlmKGogPCBjYWxscy5sZW5ndGgpIGNhbGxzW2pdKGNiKTtcbiAgICB9XG4gICAgaWYoY2FsbHMubGVuZ3RoID4gMCkgY2FsbHNbMF0oY2IpO1xufVxuXG5HdXBweS5wcm90b3R5cGUuaXNfY2hhbmdlZCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIGJiID0gdGhpcy5lZGl0b3IuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImthdGV4XCIpWzBdO1xuICAgIGlmKCFiYikgcmV0dXJuO1xuICAgIHZhciByZWN0ID0gYmIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgaWYodGhpcy5ib3VuZGluZ19ib3gpXG5cdGFucyA9IHRoaXMuYm91bmRpbmdfYm94LnRvcCAhPSByZWN0LnRvcCB8fCB0aGlzLmJvdW5kaW5nX2JveC5ib3R0b20gIT0gcmVjdC5ib3R0b20gfHwgdGhpcy5ib3VuZGluZ19ib3gucmlnaHQgIT0gcmVjdC5yaWdodCB8fCB0aGlzLmJvdW5kaW5nX2JveC5sZWZ0ICE9IHJlY3QubGVmdDtcbiAgICBlbHNlXG5cdGFucyA9IHRydWU7XG4gICAgdGhpcy5ib3VuZGluZ19ib3ggPSByZWN0O1xuICAgIHJldHVybiBhbnM7XG59XG5cbkd1cHB5LnByb3RvdHlwZS50b2dnbGVfaGVscCA9IGZ1bmN0aW9uKCl7XG4gICAgaWYoR3VwcHlIZWxwLnN0eWxlLmRpc3BsYXkgPT0gXCJub25lXCIpe1xuXHRjb25zb2xlLmxvZyhcImhlbHBpbmdcIixkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wLCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCk7XG5cdHZhciByID0gdGhpcy5lZGl0b3IuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdEd1cHB5SGVscC5zdHlsZS50b3AgPSAoci5ib3R0b20rZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCkgKyBcInB4XCI7XG5cdEd1cHB5SGVscC5zdHlsZS5sZWZ0ID0gKHIubGVmdCtkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCkgKyBcInB4XCI7XG5cdEd1cHB5SGVscC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgIH1cbiAgICBlbHNle1xuXHRjb25zb2xlLmxvZyhcInVuaGVscGluZ1wiKTtcblx0R3VwcHlIZWxwLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5yZWNvbXB1dGVfbG9jYXRpb25zX3BhdGhzID0gZnVuY3Rpb24oKXtcbiAgICBhbnMgPSBbXTtcbiAgICB2YXIgYmIgPSB0aGlzLmVkaXRvci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwia2F0ZXhcIilbMF07XG4gICAgaWYoIWJiKSByZXR1cm47XG4gICAgdmFyIHJlY3QgPSBiYi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBhbnMucHVzaCh7J3BhdGgnOidhbGwnLFxuXHQgICAgICAndG9wJzpyZWN0LnRvcCxcblx0ICAgICAgJ2JvdHRvbSc6cmVjdC5ib3R0b20sXG5cdCAgICAgICdsZWZ0JzpyZWN0LmxlZnQsXG5cdCAgICAgICdyaWdodCc6cmVjdC5yaWdodH0pO1xuICAgIHZhciBlbHRzID0gdGhpcy5lZGl0b3IuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImd1cHB5X2VsdFwiKTtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgZWx0cy5sZW5ndGg7IGkrKyl7XG5cdHZhciBlbHQgPSBlbHRzW2ldO1xuXHRpZihlbHQubm9kZU5hbWUgPT0gXCJtc3R5bGVcIikgY29udGludWU7XG5cdHZhciByZWN0ID0gZWx0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXHRpZihyZWN0LnRvcCA9PSAwICYmIHJlY3QuYm90dG9tID09IDAgJiYgcmVjdC5sZWZ0ID09IDAgJiYgcmVjdC5yaWdodCA9PSAwKSBjb250aW51ZTtcblx0dmFyIGNsID0gZWx0LmNsYXNzTGlzdDtcblx0Zm9yKHZhciBqID0gMDsgaiA8IGNsLmxlbmd0aDsgaisrKXtcblx0ICAgIGlmKGNsW2pdLmluZGV4T2YoXCJndXBweV9sb2NcIikgPT0gMCl7XG5cdFx0YW5zLnB1c2goeydwYXRoJzpjbFtqXSxcblx0XHRcdCAgJ3RvcCc6cmVjdC50b3AsXG5cdFx0XHQgICdib3R0b20nOnJlY3QuYm90dG9tLFxuXHRcdFx0ICAnbGVmdCc6cmVjdC5sZWZ0LFxuXHRcdFx0ICAncmlnaHQnOnJlY3QucmlnaHQsXG5cdFx0XHQgICdtaWRfeCc6KHJlY3QubGVmdCtyZWN0LnJpZ2h0KS8yLFxuXHRcdFx0ICAnbWlkX3knOihyZWN0LmJvdHRvbStyZWN0LnRvcCkvMixcblx0XHRcdCAgJ2JsYW5rJzooJyAnK2VsdC5jbGFzc05hbWUrJyAnKS5pbmRleE9mKCcgZ3VwcHlfYmxhbmsgJykgPj0gMH0pO1xuXHRcdGJyZWFrO1xuXHQgICAgfVxuXHR9XG4gICAgfVxuICAgIHRoaXMuYm94ZXMgPSBhbnM7XG59XG5cbkd1cHB5LmdldF9sb2MgPSBmdW5jdGlvbih4LHksY3VycmVudF9ub2RlLGN1cnJlbnRfY2FyZXQpe1xuICAgIHZhciBnID0gR3VwcHkuYWN0aXZlX2d1cHB5O1xuICAgIHZhciBtaW5fZGlzdCA9IC0xO1xuICAgIHZhciBtaWRfZGlzdCA9IDA7XG4gICAgdmFyIHBvcyA9IFwiXCI7XG4gICAgdmFyIG9wdCA9IG51bGw7XG4gICAgdmFyIGN1ciA9IG51bGw7XG4gICAgdmFyIGNhciA9IG51bGw7XG4gICAgLy8gY2hlY2sgaWYgd2UgZ28gdG8gZmlyc3Qgb3IgbGFzdCBlbGVtZW50XG4gICAgdmFyIGJiID0gZy5lZGl0b3IuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImthdGV4XCIpWzBdO1xuICAgIGlmKCFiYikgcmV0dXJuO1xuICAgIHZhciByZWN0ID0gYmIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgaWYoY3VycmVudF9ub2RlKXtcblx0dmFyIGN1cnJlbnRfcGF0aCA9IEd1cHB5VXRpbHMucGF0aF90byhjdXJyZW50X25vZGUpO1xuXHR2YXIgY3VycmVudF9wb3MgPSBwYXJzZUludChjdXJyZW50X3BhdGguc3Vic3RyaW5nKGN1cnJlbnRfcGF0aC5sYXN0SW5kZXhPZihcImVcIikrMSkpO1xuICAgIH1cblxuICAgIHZhciBib3hlcyA9IGcuYm94ZXM7XG4gICAgaWYoIWJveGVzKSByZXR1cm47XG4gICAgaWYoY3VycmVudF9ub2RlKXtcblx0Y3VycmVudF9wYXRoID0gY3VycmVudF9wYXRoLnJlcGxhY2UoL2VbMC05XSskLyxcImVcIik7XG5cdHZhciBib3hlczIgPSBbXTtcblx0Zm9yKHZhciBpID0gMDsgaSA8IGJveGVzLmxlbmd0aDsgaSsrKXtcblx0ICAgIGlmKGJveGVzW2ldLnBhdGggPT0gXCJhbGxcIikgY29udGludWU7XG5cdCAgICB2YXIgbG9jID0gYm94ZXNbaV0ucGF0aC5zdWJzdHJpbmcoMCxib3hlc1tpXS5wYXRoLmxhc3RJbmRleE9mKFwiX1wiKSk7XG5cdCAgICBsb2MgPSBsb2MucmVwbGFjZSgvZVswLTldKyQvLFwiZVwiKTtcblx0ICAgIGlmKGxvYyA9PSBjdXJyZW50X3BhdGgpe1xuXHRcdGJveGVzMi5wdXNoKGJveGVzW2ldKTtcblx0ICAgIH1cblx0fVxuXHRib3hlcyA9IGJveGVzMjtcbiAgICB9XG4gICAgaWYoIWJveGVzKSByZXR1cm47XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IGJveGVzLmxlbmd0aDsgaSsrKXtcblx0dmFyIGJveCA9IGJveGVzW2ldO1xuXHRpZihib3gucGF0aCA9PSBcImFsbFwiKXtcblx0ICAgIGlmKCFvcHQpIG9wdCA9IHsncGF0aCc6J2d1cHB5X2xvY19tX2UxXzAnfTtcblx0ICAgIGNvbnRpbnVlO1xuXHR9XG5cdHZhciB4ZGlzdCA9IE1hdGgubWF4KGJveC5sZWZ0IC0geCwgeCAtIGJveC5yaWdodCwgMClcblx0dmFyIHlkaXN0ID0gTWF0aC5tYXgoYm94LnRvcCAtIHksIHkgLSBib3guYm90dG9tLCAwKVxuXHR2YXIgZGlzdCA9IE1hdGguc3FydCh4ZGlzdCp4ZGlzdCArIHlkaXN0KnlkaXN0KTtcblx0aWYobWluX2Rpc3QgPT0gLTEgfHwgZGlzdCA8IG1pbl9kaXN0KXtcblx0ICAgIG1pbl9kaXN0ID0gZGlzdDtcblx0ICAgIG1pZF9kaXN0ID0geCAtIGJveC5taWRfeDtcblx0ICAgIG9wdCA9IGJveDtcblx0fVxuICAgIH1cbiAgICB2YXIgbG9jID0gb3B0LnBhdGguc3Vic3RyaW5nKFwiZ3VwcHlfbG9jXCIubGVuZ3RoKTtcbiAgICBsb2MgPSBsb2MucmVwbGFjZSgvXy9nLFwiL1wiKTtcbiAgICBsb2MgPSBsb2MucmVwbGFjZSgvKFswLTldKykoPz0uKj9cXC8pL2csXCJbJDFdXCIpO1xuICAgIGN1ciA9IGcuYmFja2VuZC5kb2MueHBhdGhfbm9kZShsb2Muc3Vic3RyaW5nKDAsbG9jLmxhc3RJbmRleE9mKFwiL1wiKSksIGcuYmFja2VuZC5kb2Mucm9vdCgpKTtcbiAgICBjYXIgPSBwYXJzZUludChsb2Muc3Vic3RyaW5nKGxvYy5sYXN0SW5kZXhPZihcIi9cIikrMSkpO1xuICAgIC8vIENoZWNrIGlmIHdlIHdhbnQgdGhlIGN1cnNvciBiZWZvcmUgb3IgYWZ0ZXIgdGhlIGVsZW1lbnRcbiAgICBpZihtaWRfZGlzdCA+IDAgJiYgIShvcHQuYmxhbmspKXtcblx0Y2FyKys7XG4gICAgfVxuICAgIGFucyA9IHtcImN1cnJlbnRcIjpjdXIsXCJjYXJldFwiOmNhcixcInBvc1wiOnBvc307XG4gICAgaWYoY3VycmVudF9ub2RlICYmIG9wdCl7XG5cdHZhciBvcHRfcG9zID0gcGFyc2VJbnQob3B0LnBhdGguc3Vic3RyaW5nKG9wdC5wYXRoLmxhc3RJbmRleE9mKFwiZVwiKSsxLG9wdC5wYXRoLmxhc3RJbmRleE9mKFwiX1wiKSkpO1xuXHRpZihvcHRfcG9zIDwgY3VycmVudF9wb3MpIHBvcyA9IFwibGVmdFwiO1xuXHRlbHNlIGlmKG9wdF9wb3MgPiBjdXJyZW50X3BvcykgcG9zID0gXCJyaWdodFwiO1xuXHRlbHNlIGlmKGNhciA8IGN1cnJlbnRfY2FyZXQpIHBvcyA9IFwibGVmdFwiO1xuXHRlbHNlIGlmKGNhciA+IGN1cnJlbnRfY2FyZXQpIHBvcyA9IFwicmlnaHRcIjtcblx0aWYocG9zKSBhbnNbJ3BvcyddID0gcG9zO1xuXHRlbHNlIGFuc1sncG9zJ10gPSBcIm5vbmVcIjtcbiAgICB9XG4gICAgcmV0dXJuIGFucztcbn1cblxuR3VwcHkubW91c2VfdXAgPSBmdW5jdGlvbihlKXtcbiAgICBHdXBweS5rYi5pc19tb3VzZV9kb3duID0gZmFsc2U7XG4gICAgdmFyIGcgPSBHdXBweS5hY3RpdmVfZ3VwcHk7XG4gICAgaWYoZykgZy5yZW5kZXIodHJ1ZSk7XG59XG5cbkd1cHB5Lm1vdXNlX2Rvd24gPSBmdW5jdGlvbihlKXtcbiAgICBpZihlLnRhcmdldC5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSA9PSBcImd1cHB5LWJ1dHRvblwiKSByZXR1cm47XG4gICAgdmFyIG4gPSBlLnRhcmdldDtcbiAgICBHdXBweS5rYi5pc19tb3VzZV9kb3duID0gdHJ1ZTtcbiAgICBpZihlLnRhcmdldCA9PSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRvZ2dsZV9yZWZcIikpIHRvZ2dsZV9kaXYoXCJoZWxwX2NhcmRcIik7XG4gICAgZWxzZSB3aGlsZShuICE9IG51bGwpe1xuXHRpZihuLmlkIGluIEd1cHB5Lmluc3RhbmNlcyl7XG5cdCAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cdCAgICB2YXIgcHJldl9hY3RpdmUgPSBHdXBweS5hY3RpdmVfZ3VwcHk7XG5cdCAgICBmb3IodmFyIGkgaW4gR3VwcHkuaW5zdGFuY2VzKXtcblx0XHRpZihpICE9IG4uaWQpIEd1cHB5Lmluc3RhbmNlc1tpXS5kZWFjdGl2YXRlKCk7XG5cdFx0R3VwcHkuYWN0aXZlX2d1cHB5ID0gR3VwcHkuaW5zdGFuY2VzW24uaWRdO1xuXHRcdEd1cHB5LmFjdGl2ZV9ndXBweS5hY3RpdmF0ZSgpO1xuXHQgICAgfVxuXHQgICAgdmFyIGcgPSBHdXBweS5hY3RpdmVfZ3VwcHk7XG5cdCAgICB2YXIgYiA9IEd1cHB5LmFjdGl2ZV9ndXBweS5iYWNrZW5kO1xuXHQgICAgZy5zcGFjZV9jYXJldCA9IDA7XG5cdCAgICBpZihwcmV2X2FjdGl2ZSA9PSBnKXtcblx0XHRpZihlLnNoaWZ0S2V5KXtcblx0XHQgICAgZy5zZWxlY3RfdG8oZS5jbGllbnRYLCBlLmNsaWVudFksIHRydWUpO1xuXHRcdH1cblx0XHRlbHNlIHtcblx0XHQgICAgdmFyIGxvYyA9IEd1cHB5LmdldF9sb2MoZS5jbGllbnRYLGUuY2xpZW50WSk7XG5cdFx0ICAgIGlmKCFsb2MpIHJldHVybjtcblx0XHQgICAgYi5jdXJyZW50ID0gbG9jLmN1cnJlbnQ7XG5cdFx0ICAgIGIuY2FyZXQgPSBsb2MuY2FyZXQ7XG5cdFx0ICAgIGIuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfTk9ORTtcblx0XHR9XG5cdFx0Zy5yZW5kZXIodHJ1ZSk7XG5cdCAgICB9XG5cdCAgICByZXR1cm47XG5cdH1cblx0aWYobi5jbGFzc0xpc3QgJiYgbi5jbGFzc0xpc3QuY29udGFpbnMoXCJndXBweV9vc2tcIikpe1xuXHQgICAgcmV0dXJuO1xuXHR9XG5cdG4gPSBuLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIEd1cHB5LmFjdGl2ZV9ndXBweSA9IG51bGw7XG4gICAgZm9yKHZhciBpIGluIEd1cHB5Lmluc3RhbmNlcyl7XG5cdEd1cHB5Lmluc3RhbmNlc1tpXS5kZWFjdGl2YXRlKCk7XG4gICAgfVxufVxuXG5HdXBweS5tb3VzZV9tb3ZlID0gZnVuY3Rpb24oZSl7XG4gICAgdmFyIGcgPSBHdXBweS5hY3RpdmVfZ3VwcHk7XG4gICAgaWYoIWcpIHJldHVybjtcbiAgICBpZighR3VwcHkua2IuaXNfbW91c2VfZG93bil7XG5cdHZhciBiYiA9IGcuZWRpdG9yO1xuXHR2YXIgcmVjdCA9IGJiLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXHRpZigoZS5jbGllbnRYIDwgcmVjdC5sZWZ0IHx8IGUuY2xpZW50WCA+IHJlY3QucmlnaHQpIHx8IChlLmNsaWVudFkgPiByZWN0LmJvdHRvbSB8fCBlLmNsaWVudFkgPCByZWN0LnRvcCkpe1xuXHQgICAgZy50ZW1wX2N1cnNvciA9IHtcIm5vZGVcIjpudWxsLFwiY2FyZXRcIjowfTtcblx0fVxuXHRlbHNle1xuXHQgICAgdmFyIGxvYyA9IEd1cHB5LmdldF9sb2MoZS5jbGllbnRYLGUuY2xpZW50WSk7XG5cdCAgICBpZighbG9jKSByZXR1cm47XG5cdCAgICBnLnRlbXBfY3Vyc29yID0ge1wibm9kZVwiOmxvYy5jdXJyZW50LFwiY2FyZXRcIjpsb2MuY2FyZXR9O1xuXHR9XG5cdGcucmVuZGVyKGcuaXNfY2hhbmdlZCgpKTtcbiAgICB9XG4gICAgZWxzZXtcblx0Zy5zZWxlY3RfdG8oZS5jbGllbnRYLGUuY2xpZW50WSwgdHJ1ZSk7XG5cdGcucmVuZGVyKGcuaXNfY2hhbmdlZCgpKTtcbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5zZWxlY3RfdG8gPSBmdW5jdGlvbih4LCB5LCBtb3VzZSl7XG4gICAgdmFyIHNlbF9jYXJldCA9IHRoaXMuYmFja2VuZC5jYXJldDtcbiAgICB2YXIgc2VsX2N1cnNvciA9IHRoaXMuYmFja2VuZC5jdXJyZW50O1xuICAgIGlmKHRoaXMuYmFja2VuZC5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKXtcblx0c2VsX2N1cnNvciA9IHRoaXMuYmFja2VuZC5zZWxfZW5kLm5vZGU7XG5cdHNlbF9jYXJldCA9IHRoaXMuYmFja2VuZC5zZWxfZW5kLmNhcmV0O1xuICAgIH1cbiAgICBlbHNlIGlmKHRoaXMuYmFja2VuZC5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCl7XG5cdHNlbF9jdXJzb3IgPSB0aGlzLmJhY2tlbmQuc2VsX3N0YXJ0Lm5vZGU7XG5cdHNlbF9jYXJldCA9IHRoaXMuYmFja2VuZC5zZWxfc3RhcnQuY2FyZXQ7XG4gICAgfVxuICAgIHZhciBsb2MgPSBHdXBweS5nZXRfbG9jKHgseSxzZWxfY3Vyc29yLHNlbF9jYXJldCk7XG4gICAgaWYoIWxvYykgcmV0dXJuO1xuICAgIHRoaXMuYmFja2VuZC5zZWxlY3RfdG8obG9jLCBzZWxfY3Vyc29yLCBzZWxfY2FyZXQsIG1vdXNlKTtcbn1cblxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLEd1cHB5Lm1vdXNlX2Rvd24sIGZhbHNlKTtcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLEd1cHB5Lm1vdXNlX3VwLCBmYWxzZSk7XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLEd1cHB5Lm1vdXNlX21vdmUsIGZhbHNlKTtcblxuR3VwcHkucHJvdG90eXBlLnJlbmRlcl9ub2RlID0gZnVuY3Rpb24odCl7XG4gICAgLy8gQWxsIHRoZSBpbnRlcmVzdGluZyB3b3JrIGlzIGRvbmUgYnkgdHJhbnNmb3JtLiAgVGhpcyBmdW5jdGlvbiBqdXN0IGFkZHMgaW4gdGhlIGN1cnNvciBhbmQgc2VsZWN0aW9uLXN0YXJ0IGN1cnNvclxuICAgIHZhciBvdXRwdXQgPSBcIlwiO1xuICAgIGlmKHQgPT0gXCJyZW5kZXJcIil7XG5cdHZhciByb290ID0gdGhpcy5iYWNrZW5kLmRvYy5yb290KCk7XG5cdHRoaXMuYmFja2VuZC5hZGRfcGF0aHMocm9vdCxcIm1cIik7XG5cdHRoaXMuYmFja2VuZC50ZW1wX2N1cnNvciA9IHRoaXMudGVtcF9jdXJzb3I7XG5cdHRoaXMuYmFja2VuZC5hZGRfY2xhc3Nlc19jdXJzb3JzKHJvb3QpO1xuXHR0aGlzLmJhY2tlbmQuY3VycmVudC5zZXRBdHRyaWJ1dGUoXCJjdXJyZW50XCIsXCJ5ZXNcIik7XG5cdGlmKHRoaXMudGVtcF9jdXJzb3Iubm9kZSkgdGhpcy50ZW1wX2N1cnNvci5ub2RlLnNldEF0dHJpYnV0ZShcInRlbXBcIixcInllc1wiKTtcblx0b3V0cHV0ID0gdGhpcy5iYWNrZW5kLmdldF9jb250ZW50KFwibGF0ZXhcIix0cnVlKTtcblx0dGhpcy5iYWNrZW5kLnJlbW92ZV9jdXJzb3JzX2NsYXNzZXMocm9vdCk7XG5cdG91dHB1dCA9IG91dHB1dC5yZXBsYWNlKG5ldyBSZWdFeHAoJyZhbXA7JywnZycpLCAnJicpO1xuXHRyZXR1cm4gb3V0cHV0O1xuICAgIH1cbiAgICBlbHNle1xuXHRvdXRwdXQgPSB0aGlzLmJhY2tlbmQuZ2V0X2NvbnRlbnQodCk7XG4gICAgfVxuICAgIHJldHVybiBvdXRwdXRcbn1cblxuLyoqIFxuICAgIFJlbmRlciB0aGUgZG9jdW1lbnRcbiAgICBAbWVtYmVyb2YgR3VwcHlcbiAgICBAcGFyYW0ge2Jvb2xlYW59IFt1cGRhdGVkPWZhbHNlXSAtIFdoZXRoZXIgdGhlcmUgaGF2ZSBiZWVuIHZpc2libGVcbiAgICBjaGFuZ2VzIHRvIHRoZSBkb2N1bWVudCAoaS5lLiB0aGF0IGFmZmVjdCB0aGUgcG9zaXRpb25zIG9mXG4gICAgZWxlbWVudHMpXG4qL1xuR3VwcHkucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uKHVwZGF0ZWQpe1xuICAgIGlmKCF0aGlzLmVkaXRvcl9hY3RpdmUgJiYgdGhpcy5iYWNrZW5kLmRvYy5pc19ibGFuaygpKXtcblx0a2F0ZXgucmVuZGVyKHRoaXMuZW1wdHlfY29udGVudCx0aGlzLmVkaXRvcik7XG5cdHRoaXMuZWRpdG9yLmFwcGVuZENoaWxkKHRoaXMuYnV0dG9uc19kaXYpO1xuXHRyZXR1cm47XG4gICAgfVxuICAgIHZhciB0ZXggPSB0aGlzLnJlbmRlcl9ub2RlKFwicmVuZGVyXCIpO1xuICAgIGthdGV4LnJlbmRlcih0ZXgsdGhpcy5lZGl0b3IpO1xuICAgIHRoaXMuZWRpdG9yLmFwcGVuZENoaWxkKHRoaXMuYnV0dG9uc19kaXYpO1xuICAgIGlmKHVwZGF0ZWQpe1xuXHR0aGlzLnJlY29tcHV0ZV9sb2NhdGlvbnNfcGF0aHMoKTtcbiAgICB9XG59XG5cbi8qKiBcbiAgICBGb2N1cyB0aGlzIGluc3RhbmNlIG9mIHRoZSBlZGl0b3JcbiAgICBAbWVtYmVyb2YgR3VwcHlcbiovXG5HdXBweS5wcm90b3R5cGUuYWN0aXZhdGUgPSBmdW5jdGlvbigpe1xuICAgIEd1cHB5LmFjdGl2ZV9ndXBweSA9IHRoaXM7XG4gICAgdGhpcy5lZGl0b3JfYWN0aXZlID0gdHJ1ZTtcbiAgICB0aGlzLmVkaXRvci5jbGFzc05hbWUgPSB0aGlzLmVkaXRvci5jbGFzc05hbWUucmVwbGFjZShuZXcgUmVnRXhwKCcoXFxcXHN8XilndXBweV9pbmFjdGl2ZShcXFxcc3wkKScpLCcgZ3VwcHlfYWN0aXZlICcpO1xuICAgIHRoaXMuZWRpdG9yLmZvY3VzKCk7XG4gICAgaWYodGhpcy5yZWFkeSl7XG5cdHRoaXMucmVuZGVyKHRydWUpO1xuXHR0aGlzLmJhY2tlbmQuZmlyZV9ldmVudChcImZvY3VzXCIse1wiZm9jdXNlZFwiOnRydWV9KTtcbiAgICB9XG59XG5cblxuLyoqIFxuICAgIFVuZm9jdXMgdGhpcyBpbnN0YW5jZSBvZiB0aGUgZWRpdG9yXG4gICAgQG1lbWJlcm9mIEd1cHB5XG4qL1xuR3VwcHkucHJvdG90eXBlLmRlYWN0aXZhdGUgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuZWRpdG9yX2FjdGl2ZSA9IGZhbHNlO1xuICAgIHZhciByMSA9IG5ldyBSZWdFeHAoJyg/OlxcXFxzfF4pZ3VwcHlfYWN0aXZlKD86XFxcXHN8JCknKTtcbiAgICB2YXIgcjIgPSBuZXcgUmVnRXhwKCcoPzpcXFxcc3xeKWd1cHB5X2luYWN0aXZlKD86XFxcXHN8JCknKTtcbiAgICBpZih0aGlzLmVkaXRvci5jbGFzc05hbWUubWF0Y2gocjEpKXtcblx0dGhpcy5lZGl0b3IuY2xhc3NOYW1lID0gdGhpcy5lZGl0b3IuY2xhc3NOYW1lLnJlcGxhY2UocjEsJyBndXBweV9pbmFjdGl2ZSAnKTtcbiAgICB9XG4gICAgZWxzZSBpZighdGhpcy5lZGl0b3IuY2xhc3NOYW1lLm1hdGNoKHIyKSl7XG5cdHRoaXMuZWRpdG9yLmNsYXNzTmFtZSArPSAnIGd1cHB5X2luYWN0aXZlICc7XG4gICAgfVxuICAgIEd1cHB5LmtiLnNoaWZ0X2Rvd24gPSBmYWxzZTtcbiAgICBHdXBweS5rYi5jdHJsX2Rvd24gPSBmYWxzZTtcbiAgICBHdXBweS5rYi5hbHRfZG93biA9IGZhbHNlO1xuICAgIGlmKHRoaXMucmVhZHkpe1xuXHR0aGlzLnJlbmRlcigpO1xuXHR0aGlzLmJhY2tlbmQuZmlyZV9ldmVudChcImZvY3VzXCIse1wiZm9jdXNlZFwiOmZhbHNlfSk7XG4gICAgfVxufVxuXG5cbi8vIEtleWJvYXJkIHN0dWZmXG5cbkd1cHB5LmtiID0ge307XG5cbkd1cHB5LmtiLmlzX21vdXNlX2Rvd24gPSBmYWxzZTtcblxuLyoga2V5Ym9hcmQgYmVoYXZpb3VyIGRlZmluaXRpb25zICovXG5cbi8vIGtleXMgYXNpZGUgZnJvbSAwLTksYS16LEEtWlxuR3VwcHkua2Iua19jaGFycyA9IHtcbiAgICBcIj1cIjpcIj1cIixcbiAgICBcIitcIjpcIitcIixcbiAgICBcIi1cIjpcIi1cIixcbiAgICBcIipcIjpcIipcIixcbiAgICBcIi5cIjpcIi5cIixcbiAgICBcInNoaWZ0Ky9cIjpcIi9cIixcbiAgICBcInNoaWZ0Kz1cIjpcIitcIixcbn07XG5HdXBweS5rYi5rX3N5bXMgPSB7XG4gICAgXCIvXCI6XCJzbGFzaFwiLFxuICAgIFwiXlwiOlwiZXhwXCIsXG4gICAgXCIqXCI6XCIqXCIsXG4gICAgXCIoXCI6XCJwYXJlblwiLFxuICAgIFwiPFwiOlwibGVzc1wiLFxuICAgIFwiPlwiOlwiZ3JlYXRlclwiLFxuICAgIFwiX1wiOlwic3ViXCIsXG4gICAgXCJ8XCI6XCJhYnNcIixcbiAgICBcIiFcIjpcImZhY3RvcmlhbFwiLFxuICAgIFwic2hpZnQrdXBcIjpcImV4cFwiLFxuICAgIFwic2hpZnQrZG93blwiOlwic3ViXCJcbn07XG5HdXBweS5rYi5rX2NvbnRyb2xzID0ge1xuICAgIFwidXBcIjpcInVwXCIsXG4gICAgXCJkb3duXCI6XCJkb3duXCIsXG4gICAgXCJyaWdodFwiOlwicmlnaHRcIixcbiAgICBcImxlZnRcIjpcImxlZnRcIixcbiAgICBcImFsdCtrXCI6XCJ1cFwiLFxuICAgIFwiYWx0K2pcIjpcImRvd25cIixcbiAgICBcImFsdCtsXCI6XCJyaWdodFwiLFxuICAgIFwiYWx0K2hcIjpcImxlZnRcIixcbiAgICBcInNwYWNlXCI6XCJzcGFjZWJhclwiLFxuICAgIFwiaG9tZVwiOlwiaG9tZVwiLFxuICAgIFwiZW5kXCI6XCJlbmRcIixcbiAgICBcImJhY2tzcGFjZVwiOlwiYmFja3NwYWNlXCIsXG4gICAgXCJkZWxcIjpcImRlbGV0ZV9rZXlcIixcbiAgICBcIm1vZCthXCI6XCJzZWxfYWxsXCIsXG4gICAgXCJtb2QrY1wiOlwic2VsX2NvcHlcIixcbiAgICBcIm1vZCt4XCI6XCJzZWxfY3V0XCIsXG4gICAgXCJtb2QrdlwiOlwic2VsX3Bhc3RlXCIsXG4gICAgXCJtb2QrelwiOlwidW5kb1wiLFxuICAgIFwibW9kK3lcIjpcInJlZG9cIixcbiAgICBcImVudGVyXCI6XCJkb25lXCIsXG4gICAgXCJtb2Qrc2hpZnQrcmlnaHRcIjpcImxpc3RfZXh0ZW5kX2NvcHlfcmlnaHRcIixcbiAgICBcIm1vZCtzaGlmdCtsZWZ0XCI6XCJsaXN0X2V4dGVuZF9jb3B5X2xlZnRcIixcbiAgICBcIixcIjpcImxpc3RfZXh0ZW5kX3JpZ2h0XCIsXG4gICAgXCI7XCI6XCJsaXN0X2V4dGVuZF9kb3duXCIsXG4gICAgXCJtb2QrcmlnaHRcIjpcImxpc3RfZXh0ZW5kX3JpZ2h0XCIsXG4gICAgXCJtb2QrbGVmdFwiOlwibGlzdF9leHRlbmRfbGVmdFwiLFxuICAgIFwibW9kK3VwXCI6XCJsaXN0X2V4dGVuZF91cFwiLFxuICAgIFwibW9kK2Rvd25cIjpcImxpc3RfZXh0ZW5kX2Rvd25cIixcbiAgICBcIm1vZCtzaGlmdCt1cFwiOlwibGlzdF9leHRlbmRfY29weV91cFwiLFxuICAgIFwibW9kK3NoaWZ0K2Rvd25cIjpcImxpc3RfZXh0ZW5kX2NvcHlfZG93blwiLFxuICAgIFwibW9kK2JhY2tzcGFjZVwiOlwibGlzdF9yZW1vdmVcIixcbiAgICBcIm1vZCtzaGlmdCtiYWNrc3BhY2VcIjpcImxpc3RfcmVtb3ZlX3Jvd1wiLFxuICAgIFwic2hpZnQrbGVmdFwiOlwic2VsX2xlZnRcIixcbiAgICBcInNoaWZ0K3JpZ2h0XCI6XCJzZWxfcmlnaHRcIixcbiAgICBcIilcIjpcInJpZ2h0X3BhcmVuXCIsXG4gICAgXCJcXFxcXCI6XCJiYWNrc2xhc2hcIixcbiAgICBcInRhYlwiOlwidGFiXCJcbn07XG5cbi8vIGxldHRlcnNcblxuZm9yKHZhciBpID0gNjU7IGkgPD0gOTA7IGkrKyl7XG4gICAgR3VwcHkua2Iua19jaGFyc1tTdHJpbmcuZnJvbUNoYXJDb2RlKGkpLnRvTG93ZXJDYXNlKCldID0gU3RyaW5nLmZyb21DaGFyQ29kZShpKS50b0xvd2VyQ2FzZSgpO1xuICAgIEd1cHB5LmtiLmtfY2hhcnNbJ3NoaWZ0KycrU3RyaW5nLmZyb21DaGFyQ29kZShpKS50b0xvd2VyQ2FzZSgpXSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSkudG9VcHBlckNhc2UoKTtcbn1cblxuLy8gbnVtYmVyc1xuXG5mb3IodmFyIGkgPSA0ODsgaSA8PSA1NzsgaSsrKVxuICAgIEd1cHB5LmtiLmtfY2hhcnNbU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpO1xuXG5HdXBweS5yZWdpc3Rlcl9rZXlib2FyZF9oYW5kbGVycyA9IGZ1bmN0aW9uKCl7XG4gICAgTW91c2V0cmFwLmFkZEtleWNvZGVzKHsxNzM6ICctJ30pOyAvLyBGaXJlZm94J3Mgc3BlY2lhbCBtaW51cyAobmVlZGVkIGZvciBfID0gc3ViIGJpbmRpbmcpXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIGZvcih2YXIgaSBpbiBHdXBweS5rYi5rX2NoYXJzKVxuICAgIFx0TW91c2V0cmFwLmJpbmQoaSxmdW5jdGlvbihpKXsgcmV0dXJuIGZ1bmN0aW9uKCl7XG5cdCAgICBpZighR3VwcHkuYWN0aXZlX2d1cHB5KSByZXR1cm4gdHJ1ZTtcblx0ICAgIEd1cHB5LmFjdGl2ZV9ndXBweS50ZW1wX2N1cnNvci5ub2RlID0gbnVsbDtcblx0ICAgIEd1cHB5LmFjdGl2ZV9ndXBweS5iYWNrZW5kLmluc2VydF9zdHJpbmcoR3VwcHkua2Iua19jaGFyc1tpXSk7XG5cdCAgICBHdXBweS5hY3RpdmVfZ3VwcHkucmVuZGVyKHRydWUpO1xuXHQgICAgcmV0dXJuIGZhbHNlO1xuXHR9fShpKSk7ICBcbiAgICBmb3IodmFyIGkgaW4gR3VwcHkua2Iua19zeW1zKVxuICAgIFx0TW91c2V0cmFwLmJpbmQoaSxmdW5jdGlvbihpKXsgcmV0dXJuIGZ1bmN0aW9uKCl7XG5cdCAgICBpZighR3VwcHkuYWN0aXZlX2d1cHB5KSByZXR1cm4gdHJ1ZTtcblx0ICAgIEd1cHB5LmFjdGl2ZV9ndXBweS50ZW1wX2N1cnNvci5ub2RlID0gbnVsbDtcblx0ICAgIEd1cHB5LmFjdGl2ZV9ndXBweS5iYWNrZW5kLnNwYWNlX2NhcmV0ID0gMDtcblx0ICAgIEd1cHB5LmFjdGl2ZV9ndXBweS5iYWNrZW5kLmluc2VydF9zeW1ib2woR3VwcHkua2Iua19zeW1zW2ldKTtcblx0ICAgIEd1cHB5LmFjdGl2ZV9ndXBweS5yZW5kZXIodHJ1ZSk7XG5cdCAgICByZXR1cm4gZmFsc2U7XG5cdH19KGkpKTtcbiAgICBmb3IodmFyIGkgaW4gR3VwcHkua2Iua19jb250cm9scylcbiAgICBcdE1vdXNldHJhcC5iaW5kKGksZnVuY3Rpb24oaSl7IHJldHVybiBmdW5jdGlvbigpe1xuXHQgICAgaWYoIUd1cHB5LmFjdGl2ZV9ndXBweSkgcmV0dXJuIHRydWU7XG5cdCAgICBHdXBweS5hY3RpdmVfZ3VwcHkuYmFja2VuZC5zcGFjZV9jYXJldCA9IDA7XG5cdCAgICBHdXBweS5hY3RpdmVfZ3VwcHkuYmFja2VuZFtHdXBweS5rYi5rX2NvbnRyb2xzW2ldXSgpO1xuXHQgICAgR3VwcHkuYWN0aXZlX2d1cHB5LnRlbXBfY3Vyc29yLm5vZGUgPSBudWxsO1xuXHQgICAgR3VwcHkuYWN0aXZlX2d1cHB5LnJlbmRlcihbXCJ1cFwiLFwiZG93blwiLFwicmlnaHRcIixcImxlZnRcIixcImhvbWVcIixcImVuZFwiLFwic2VsX2xlZnRcIixcInNlbF9yaWdodFwiXS5pbmRleE9mKGkpIDwgMCk7XG5cdCAgICBHdXBweS5hY3RpdmVfZ3VwcHkucmVuZGVyKGZhbHNlKTtcblx0ICAgIHJldHVybiBmYWxzZTtcblx0fX0oaSkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEd1cHB5O1xuIiwiTW91c2V0cmFwID0gcmVxdWlyZSgnbW91c2V0cmFwJyk7XG5rYXRleCA9IHJlcXVpcmUoJy4uL2xpYi9rYXRleC9rYXRleC1tb2RpZmllZC5taW4uanMnKTtcbkd1cHB5VXRpbHMgPSByZXF1aXJlKCcuL2d1cHB5X3V0aWxzLmpzJyk7XG5HdXBweURvYyA9IHJlcXVpcmUoJy4vZ3VwcHlfZG9jLmpzJyk7XG5HdXBweVN5bWJvbHMgPSByZXF1aXJlKCcuL2d1cHB5X3N5bWJvbHMuanMnKTtcblxuU3RyaW5nLnByb3RvdHlwZS5zcGxpY2UgPSBmdW5jdGlvbihpZHgsIHMpeyByZXR1cm4gKHRoaXMuc2xpY2UoMCxpZHgpICsgcyArIHRoaXMuc2xpY2UoaWR4KSk7IH07XG5TdHJpbmcucHJvdG90eXBlLnNwbGljZW4gPSBmdW5jdGlvbihpZHgsIHMsIG4peyByZXR1cm4gKHRoaXMuc2xpY2UoMCxpZHgpICsgcyArIHRoaXMuc2xpY2UoaWR4K24pKTt9O1xuU3RyaW5nLnByb3RvdHlwZS5zZWFyY2hfYXQgPSBmdW5jdGlvbihpZHgsIHMpeyByZXR1cm4gKHRoaXMuc3Vic3RyaW5nKGlkeC1zLmxlbmd0aCxpZHgpID09IHMpOyB9O1xuXG4vKipcbiAgIEBjbGFzc1xuICAgQGNsYXNzZGVzYyBUaGUgYmFja2VuZCB0byB0aGUgZWRpdG9yLiAgU2hvdWxkIG5ldmVyIGJlIGNvbnN0cnVjdGVkIGRpcmVjdGx5IGJ5IHRoZSB1c2VyLlxuICAgQGNvbnN0cnVjdG9yIFxuICovXG52YXIgR3VwcHlCYWNrZW5kID0gZnVuY3Rpb24oY29uZmlnKXtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICB2YXIgZXZlbnRzID0gY29uZmlnWydldmVudHMnXSB8fCB7fTtcbiAgICB2YXIgb3B0aW9ucyA9IGNvbmZpZ1snb3B0aW9ucyddIHx8IHt9O1xuICAgIHRoaXMucGFyZW50ID0gY29uZmlnWydwYXJlbnQnXTtcbiAgICBcbiAgICB0aGlzLmJsYWNrbGlzdCA9IFtdO1xuICAgIHRoaXMuYXV0b3JlcGxhY2UgPSB0cnVlO1xuICAgIHRoaXMucmVhZHkgPSBmYWxzZTtcbiAgICB0aGlzLmV2ZW50cyA9IHt9O1xuICAgIFxuICAgIHZhciBldnRzID0gW1wicmVhZHlcIiwgXCJjaGFuZ2VcIiwgXCJsZWZ0X2VuZFwiLCBcInJpZ2h0X2VuZFwiLCBcImRvbmVcIiwgXCJjb21wbGV0aW9uXCIsIFwiZGVidWdcIiwgXCJlcnJvclwiLCBcImZvY3VzXCJdO1xuICAgIFxuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBldnRzLmxlbmd0aDsgaSsrKXtcblx0dmFyIGUgPSBldnRzW2ldO1xuXHRpZihlIGluIGV2ZW50cykgdGhpcy5ldmVudHNbZV0gPSBlIGluIGV2ZW50cyA/IGV2ZW50c1tlXSA6IG51bGw7XG4gICAgfVxuXG4gICAgdmFyIG9wdHMgPSBbXCJibGFua19jYXJldFwiLCBcImVtcHR5X2NvbnRlbnRcIiwgXCJibGFja2xpc3RcIiwgXCJhdXRvcmVwbGFjZVwiLCBcImNsaXB0eXBlXCJdO1xuICAgIFxuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBvcHRzLmxlbmd0aDsgaSsrKXtcblx0dmFyIHAgPSBvcHRzW2ldO1xuXHRpZihwIGluIG9wdGlvbnMpIHRoaXNbcF0gPSBvcHRpb25zW3BdO1xuICAgIH1cblxuICAgIHRoaXMuc3ltYm9scyA9IHt9O1xuICAgIHRoaXMuZG9jID0gbmV3IEd1cHB5RG9jKG9wdGlvbnNbXCJ4bWxfY29udGVudFwiXSk7XG4gICAgXG4gICAgdGhpcy5jdXJyZW50ID0gdGhpcy5kb2Mucm9vdCgpLmZpcnN0Q2hpbGQ7XG4gICAgdGhpcy5jYXJldCA9IDA7XG4gICAgdGhpcy5zcGFjZV9jYXJldCA9IDA7XG4gICAgdGhpcy5zZWxfc3RhcnQgPSBudWxsO1xuICAgIHRoaXMuc2VsX2VuZCA9IG51bGw7XG4gICAgdGhpcy51bmRvX2RhdGEgPSBbXTtcbiAgICB0aGlzLnVuZG9fbm93ID0gLTE7XG4gICAgdGhpcy5zZWxfc3RhdHVzID0gR3VwcHlCYWNrZW5kLlNFTF9OT05FO1xuICAgIHRoaXMuY2hlY2twb2ludCgpO1xuICAgIGlmKEd1cHB5QmFja2VuZC5yZWFkeSAmJiAhdGhpcy5yZWFkeSl7XG4gICAgXHR0aGlzLnJlYWR5ID0gdHJ1ZTtcblx0dGhpcy5zeW1ib2xzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShHdXBweVN5bWJvbHMuc3ltYm9scykpO1xuICAgIFx0dGhpcy5maXJlX2V2ZW50KFwicmVhZHlcIik7XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQuU0VMX05PTkUgPSAwO1xuR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQgPSAxO1xuR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EID0gMjtcbkd1cHB5QmFja2VuZC5jbGlwYm9hcmQgPSBudWxsO1xuXG4vKiogXG4gICAgR2V0IHRoZSBjb250ZW50IG9mIHRoZSBlZGl0b3JcbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IHQgLSBUaGUgdHlwZSBvZiBjb250ZW50IHRvIHJlbmRlciAoXCJsYXRleFwiLCBcInRleHRcIiwgb3IgXCJ4bWxcIikuXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5nZXRfY29udGVudCA9IGZ1bmN0aW9uKHQscil7XG4gICAgcmV0dXJuIHRoaXMuZG9jLmdldF9jb250ZW50KHQscik7XG59XG5cbi8qKiBcbiAgICBTZXQgdGhlIGNvbnRlbnQgb2YgdGhlIGVkaXRvclxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30geG1sX2RhdGEgLSBBbiBYTUwgc3RyaW5nIG9mIHRoZSBjb250ZW50IHRvIHBsYWNlIGluIHRoZSBlZGl0b3JcbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNldF9jb250ZW50ID0gZnVuY3Rpb24oeG1sX2RhdGEpe1xuICAgIHRoaXMuZG9jID0gbmV3IEd1cHB5RG9jKHhtbF9kYXRhKTtcbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmRvYy5yb290KCkuZmlyc3RDaGlsZDtcbiAgICB0aGlzLmNhcmV0ID0gMDtcbiAgICB0aGlzLnNlbF9zdGFydCA9IG51bGw7XG4gICAgdGhpcy5zZWxfZW5kID0gbnVsbDtcbiAgICB0aGlzLnVuZG9fZGF0YSA9IFtdO1xuICAgIHRoaXMudW5kb19ub3cgPSAtMTtcbiAgICB0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX05PTkU7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZmlyZV9ldmVudCA9IGZ1bmN0aW9uKGV2ZW50LCBhcmdzKXtcbiAgICBhcmdzID0gYXJncyB8fCB7fTtcbiAgICBhcmdzLnRhcmdldCA9IHRoaXMucGFyZW50IHx8IHRoaXM7XG4gICAgaWYodGhpcy5ldmVudHNbZXZlbnRdICYmIHRoaXMucmVhZHkgJiYgR3VwcHlCYWNrZW5kLnJlYWR5KSB0aGlzLmV2ZW50c1tldmVudF0oYXJncyk7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5yZW1vdmVfc3ltYm9sID0gZnVuY3Rpb24obmFtZSl7XG4gICAgaWYodGhpcy5zeW1ib2xzW25hbWVdKSBkZWxldGUgdGhpcy5zeW1ib2xzW25hbWVdO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuYWRkX3N5bWJvbHMgPSBmdW5jdGlvbihuYW1lLCBzeW0pe1xuICAgIHZhciBuZXdfc3ltcyA9IEd1cHB5U3ltYm9scy5hZGRfc3ltYm9scyhuYW1lLCBzeW0pO1xuICAgIGZvcih2YXIgcyBpbiBuZXdfc3ltcyl7XG5cdHRoaXMuc3ltYm9sc1tzXSA9IG5ld19zeW1zW3NdO1xuICAgIH1cbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmFkZF9zeW1ib2xfZnVuYyA9IGZ1bmN0aW9uKG5hbWUsIGdyb3VwKXtcbiAgICB2YXIgbmV3X3N5bXMgPSBHdXBweVN5bWJvbHMuYWRkX3N5bWJvbHMoXCJfZnVuY1wiLCBbe1wiZ3JvdXBcIjpncm91cCxcInN5bWJvbHNcIjpbbmFtZV19XSk7XG4gICAgZm9yKHZhciBzIGluIG5ld19zeW1zKVxuXHR0aGlzLnN5bWJvbHNbc10gPSBuZXdfc3ltc1tzXTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmFkZF9zeW1ib2xfcmF3ID0gZnVuY3Rpb24obmFtZSwgbGF0ZXgsIHRleHQsIGdyb3VwKXtcbiAgICB2YXIgcyA9IHt9XG4gICAgc1tuYW1lXSA9IHtcImxhdGV4XCI6bGF0ZXgsXCJ0ZXh0XCI6dGV4dH1cbiAgICB2YXIgbmV3X3N5bXMgPSBHdXBweVN5bWJvbHMuYWRkX3N5bWJvbHMoXCJfcmF3XCIsIFt7XCJncm91cFwiOmdyb3VwLFwic3ltYm9sc1wiOnN9XSk7XG4gICAgZm9yKHZhciBzIGluIG5ld19zeW1zKVxuXHR0aGlzLnN5bWJvbHNbc10gPSBuZXdfc3ltc1tzXTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZWxlY3RfdG8gPSBmdW5jdGlvbihsb2MsIHNlbF9jdXJzb3IsIHNlbF9jYXJldCwgbW91c2Upe1xuICAgIGlmKGxvYy5jdXJyZW50ID09IHNlbF9jdXJzb3IgJiYgbG9jLmNhcmV0ID09IHNlbF9jYXJldCl7XG5cdHRoaXMuY3VycmVudCA9IGxvYy5jdXJyZW50O1xuXHR0aGlzLmNhcmV0ID0gbG9jLmNhcmV0O1xuXHR0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX05PTkU7XG4gICAgfVxuICAgIGVsc2UgaWYobG9jLnBvcyA9PSBcImxlZnRcIil7XG5cdHRoaXMuc2VsX2VuZCA9IHtcIm5vZGVcIjpzZWxfY3Vyc29yLFwiY2FyZXRcIjpzZWxfY2FyZXR9O1xuXHR0aGlzLmN1cnJlbnQgPSBsb2MuY3VycmVudDtcblx0dGhpcy5jYXJldCA9IGxvYy5jYXJldDtcblx0dGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJULCBtb3VzZSk7XG4gICAgfVxuICAgIGVsc2UgaWYobG9jLnBvcyA9PSBcInJpZ2h0XCIpe1xuXHR0aGlzLnNlbF9zdGFydCA9IHtcIm5vZGVcIjpzZWxfY3Vyc29yLFwiY2FyZXRcIjpzZWxfY2FyZXR9O1xuXHR0aGlzLmN1cnJlbnQgPSBsb2MuY3VycmVudDtcblx0dGhpcy5jYXJldCA9IGxvYy5jYXJldDtcblx0dGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCwgbW91c2UpO1xuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZXRfc2VsX3N0YXJ0ID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9zdGFydCA9IHtcIm5vZGVcIjp0aGlzLmN1cnJlbnQsIFwiY2FyZXRcIjp0aGlzLmNhcmV0fTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZXRfc2VsX2VuZCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfZW5kID0ge1wibm9kZVwiOnRoaXMuY3VycmVudCwgXCJjYXJldFwiOnRoaXMuY2FyZXR9O1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmFkZF9wYXRocyA9IGZ1bmN0aW9uKG4scGF0aCl7XG4gICAgaWYobi5ub2RlTmFtZSA9PSBcImVcIil7XG5cdG4uc2V0QXR0cmlidXRlKFwicGF0aFwiLHBhdGgpO1xuICAgIH1cbiAgICBlbHNle1xuXHR2YXIgZXMgPSAxLCBmcyA9IDEsIGNzID0gMSwgbHMgPSAxO1xuXHRmb3IodmFyIGMgPSBuLmZpcnN0Q2hpbGQ7IGMgIT0gbnVsbDsgYyA9IGMubmV4dFNpYmxpbmcpe1xuXHQgICAgaWYoYy5ub2RlTmFtZSA9PSBcImNcIil7IHRoaXMuYWRkX3BhdGhzKGMsIHBhdGgrXCJfY1wiK2NzKTsgY3MrKzsgfVxuXHQgICAgZWxzZSBpZihjLm5vZGVOYW1lID09IFwiZlwiKXsgdGhpcy5hZGRfcGF0aHMoYywgcGF0aCtcIl9mXCIrZnMpOyBmcysrOyB9XG5cdCAgICBlbHNlIGlmKGMubm9kZU5hbWUgPT0gXCJsXCIpeyB0aGlzLmFkZF9wYXRocyhjLCBwYXRoK1wiX2xcIitscyk7IGxzKys7IH1cblx0ICAgIGVsc2UgaWYoYy5ub2RlTmFtZSA9PSBcImVcIil7IHRoaXMuYWRkX3BhdGhzKGMsIHBhdGgrXCJfZVwiK2VzKTsgZXMrKzsgfVxuXHR9XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmFkZF9jbGFzc2VzX2N1cnNvcnMgPSBmdW5jdGlvbihuLHBhdGgpe1xuICAgIGlmKG4ubm9kZU5hbWUgPT0gXCJlXCIpe1xuXHR2YXIgdGV4dCA9IG4uZmlyc3RDaGlsZC5ub2RlVmFsdWU7XG5cdGFucyA9IFwiXCI7XG5cdHZhciBzZWxfY3Vyc29yO1xuXHR2YXIgdGV4dF9ub2RlID0gR3VwcHlVdGlscy5pc190ZXh0KG4pO1xuXHRpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQpIHNlbF9jdXJzb3IgPSB0aGlzLnNlbF9lbmQ7XG5cdGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpIHNlbF9jdXJzb3IgPSB0aGlzLnNlbF9zdGFydDtcblx0aWYodGhpcy5zZWxfc3RhdHVzICE9IEd1cHB5QmFja2VuZC5TRUxfTk9ORSl7XG5cdCAgICB2YXIgc2VsX2NhcmV0X3RleHQgPSBHdXBweVV0aWxzLmlzX3NtYWxsKHNlbF9jdXJzb3Iubm9kZSkgPyBHdXBweVV0aWxzLlNNQUxMX1NFTF9DQVJFVCA6IEd1cHB5VXRpbHMuU0VMX0NBUkVUO1xuXHQgICAgaWYoIXRleHRfbm9kZSAmJiB0ZXh0Lmxlbmd0aCA9PSAwICYmIG4ucGFyZW50Tm9kZS5jaGlsZEVsZW1lbnRDb3VudCA+IDEpe1xuXHRcdHNlbF9jYXJldF90ZXh0ID0gXCJcXFxcYmx1ZXtcXFxceG1sQ2xhc3N7Z3VwcHlfZWx0IGd1cHB5X2JsYW5rIGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfMH17XCIrc2VsX2NhcmV0X3RleHQrXCJ9fVwiO1xuXHQgICAgfVxuXHQgICAgZWxzZXtcblx0XHRzZWxfY2FyZXRfdGV4dCA9IFwiXFxcXGJsdWV7XCIrc2VsX2NhcmV0X3RleHQrXCJ9XCI7XG5cdCAgICB9XG5cdCAgICBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKSBzZWxfY2FyZXRfdGV4dCA9IHRleHRfbm9kZSA/IFwiW1wiIDogc2VsX2NhcmV0X3RleHQgKyBcIlxcXFxcIitHdXBweVV0aWxzLlNFTF9DT0xPUitcIntcIjtcblx0ICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCkgc2VsX2NhcmV0X3RleHQgPSB0ZXh0X25vZGUgPyBcIl1cIiA6IFwifVwiICsgc2VsX2NhcmV0X3RleHQ7XG5cdH1cblx0dmFyIGNhcmV0X3RleHQgPSBcIlwiO1xuXHR2YXIgdGVtcF9jYXJldF90ZXh0ID0gXCJcIjtcblx0aWYodGV4dC5sZW5ndGggPT0gMCl7XG5cdCAgICBpZih0ZXh0X25vZGUpIGNhcmV0X3RleHQgPSBcIlxcXFxfXCI7XG5cdCAgICBlbHNlIGlmKG4ucGFyZW50Tm9kZS5jaGlsZEVsZW1lbnRDb3VudCA9PSAxKXtcblx0XHRpZih0aGlzLmN1cnJlbnQgPT0gbil7XG5cdFx0ICAgIHZhciBibGFua19jYXJldCA9IHRoaXMuYmxhbmtfY2FyZXQgfHwgKEd1cHB5VXRpbHMuaXNfc21hbGwodGhpcy5jdXJyZW50KSA/IEd1cHB5VXRpbHMuU01BTExfQ0FSRVQgOiBHdXBweVV0aWxzLkNBUkVUKTtcblx0XHQgICAgYW5zID0gXCJcXFxccmVke1xcXFx4bWxDbGFzc3ttYWluX2N1cnNvciBndXBweV9lbHQgZ3VwcHlfYmxhbmsgZ3VwcHlfbG9jX1wiK24uZ2V0QXR0cmlidXRlKFwicGF0aFwiKStcIl8wXCIrXCJ9e1wiK2JsYW5rX2NhcmV0K1wifX1cIjtcblx0XHR9XG5cdFx0ZWxzZSBpZih0aGlzLnRlbXBfY3Vyc29yLm5vZGUgPT0gbilcblx0XHQgICAgYW5zID0gXCJcXFxcZ3JheXtcXFxceG1sQ2xhc3N7Z3VwcHlfZWx0IGd1cHB5X2JsYW5rIGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfMFwiK1wifXtbP119fVwiO1xuXHRcdGVsc2Vcblx0XHQgICAgYW5zID0gXCJcXFxcYmx1ZXtcXFxceG1sQ2xhc3N7Z3VwcHlfZWx0IGd1cHB5X2JsYW5rIGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfMFwiK1wifXtbP119fVwiO1xuXHQgICAgfVxuXHQgICAgZWxzZSBpZih0aGlzLnRlbXBfY3Vyc29yLm5vZGUgIT0gbiAmJiB0aGlzLmN1cnJlbnQgIT0gbiAmJiAoIShzZWxfY3Vyc29yKSB8fCBzZWxfY3Vyc29yLm5vZGUgIT0gbikpe1xuXHRcdC8vIFRoZXNlIGFyZSB0aGUgZW1wdHkgZSBlbGVtZW50cyBhdCBlaXRoZXIgZW5kIG9mXG5cdFx0Ly8gYSBjIG9yIG0gbm9kZSwgc3VjaCBhcyB0aGUgc3BhY2UgYmVmb3JlIGFuZFxuXHRcdC8vIGFmdGVyIGJvdGggdGhlIHNpbiBhbmQgeF4yIGluIHNpbih4XjIpXG5cdFx0Ly9cblx0XHQvLyBIZXJlLCB3ZSBhZGQgaW4gYSBzbWFsbCBlbGVtZW50IHNvIHRoYXQgd2UgY2FuXG5cdFx0Ly8gdXNlIHRoZSBtb3VzZSB0byBzZWxlY3QgdGhlc2UgYXJlYXNcblx0XHRhbnMgPSBcIlxcXFxwaGFudG9te1xcXFx4bWxDbGFzc3tndXBweV9lbHQgZ3VwcHlfYmxhbmsgZ3VwcHlfbG9jX1wiK24uZ2V0QXR0cmlidXRlKFwicGF0aFwiKStcIl8wXCIrXCJ9e1xcXFxjdXJzb3JbMC4xZXhdezFleH19fVwiO1xuXHQgICAgfVxuXHR9XG5cdGZvcih2YXIgaSA9IDA7IGkgPCB0ZXh0Lmxlbmd0aCsxOyBpKyspe1xuXHQgICAgaWYobiA9PSB0aGlzLmN1cnJlbnQgJiYgaSA9PSB0aGlzLmNhcmV0ICYmICh0ZXh0Lmxlbmd0aCA+IDAgfHwgbi5wYXJlbnROb2RlLmNoaWxkRWxlbWVudENvdW50ID4gMSkpe1xuXHRcdGlmKHRleHRfbm9kZSl7XG5cdFx0ICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVClcblx0XHRcdGNhcmV0X3RleHQgPSBcIltcIjtcblx0XHQgICAgZWxzZSBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKVxuXHRcdFx0Y2FyZXRfdGV4dCA9IFwiXVwiO1xuXHRcdCAgICBlbHNlXG5cdFx0XHRjYXJldF90ZXh0ID0gXCJcXFxcX1wiO1xuXHRcdH1cblx0XHRlbHNle1xuXHRcdCAgICBjYXJldF90ZXh0ID0gR3VwcHlVdGlscy5pc19zbWFsbCh0aGlzLmN1cnJlbnQpID8gR3VwcHlVdGlscy5TTUFMTF9DQVJFVCA6IEd1cHB5VXRpbHMuQ0FSRVQ7XG5cdFx0ICAgIGlmKHRleHQubGVuZ3RoID09IDApXG5cdFx0XHRjYXJldF90ZXh0ID0gXCJcXFxccmVke1xcXFx4bWxDbGFzc3ttYWluX2N1cnNvciBndXBweV9lbHQgZ3VwcHlfYmxhbmsgZ3VwcHlfbG9jX1wiK24uZ2V0QXR0cmlidXRlKFwicGF0aFwiKStcIl8wfXtcIitjYXJldF90ZXh0K1wifX1cIjtcblx0XHQgICAgZWxzZXtcblx0XHRcdGNhcmV0X3RleHQgPSBcIlxcXFxyZWR7XFxcXHhtbENsYXNze21haW5fY3Vyc29yfXtcIitjYXJldF90ZXh0K1wifX1cIlxuXHRcdCAgICB9XG5cdFx0ICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVClcblx0XHRcdGNhcmV0X3RleHQgPSBjYXJldF90ZXh0ICsgXCJcXFxcXCIrR3VwcHlVdGlscy5TRUxfQ09MT1IrXCJ7XCI7XG5cdFx0ICAgIGVsc2UgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORClcblx0XHRcdGNhcmV0X3RleHQgPSBcIn1cIiArIGNhcmV0X3RleHQ7XG5cdFx0fVxuXHRcdGFucyArPSBjYXJldF90ZXh0O1xuXHQgICAgfVxuXHQgICAgZWxzZSBpZihuID09IHRoaXMuY3VycmVudCAmJiBpID09IHRoaXMuY2FyZXQgJiYgdGV4dF9ub2RlKXtcblx0XHRhbnMgKz0gY2FyZXRfdGV4dDtcblx0ICAgIH1cblx0ICAgIGVsc2UgaWYodGhpcy5zZWxfc3RhdHVzICE9IEd1cHB5QmFja2VuZC5TRUxfTk9ORSAmJiBzZWxfY3Vyc29yLm5vZGUgPT0gbiAmJiBpID09IHNlbF9jdXJzb3IuY2FyZXQpe1xuXHRcdGFucyArPSBzZWxfY2FyZXRfdGV4dDtcblx0ICAgIH1cblx0ICAgIGVsc2UgaWYodGhpcy50ZW1wX2N1cnNvci5ub2RlID09IG4gJiYgaSA9PSB0aGlzLnRlbXBfY3Vyc29yLmNhcmV0ICYmICh0ZXh0Lmxlbmd0aCA+IDAgfHwgbi5wYXJlbnROb2RlLmNoaWxkRWxlbWVudENvdW50ID4gMSkpe1xuXHRcdGlmKHRleHRfbm9kZSkgXG5cdFx0ICAgIHRlbXBfY2FyZXRfdGV4dCA9IFwiLlwiO1xuXHRcdGVsc2V7XG5cdFx0ICAgIHRlbXBfY2FyZXRfdGV4dCA9IEd1cHB5VXRpbHMuaXNfc21hbGwodGhpcy5jdXJyZW50KSA/IEd1cHB5VXRpbHMuVEVNUF9TTUFMTF9DQVJFVCA6IEd1cHB5VXRpbHMuVEVNUF9DQVJFVDtcblx0XHQgICAgaWYodGV4dC5sZW5ndGggPT0gMCl7XG5cdFx0XHR0ZW1wX2NhcmV0X3RleHQgPSBcIlxcXFxncmF5e1xcXFx4bWxDbGFzc3tndXBweV9lbHQgZ3VwcHlfYmxhbmsgZ3VwcHlfbG9jX1wiK24uZ2V0QXR0cmlidXRlKFwicGF0aFwiKStcIl8wfXtcIit0ZW1wX2NhcmV0X3RleHQrXCJ9fVwiO1xuXHRcdCAgICB9XG5cdFx0ICAgIGVsc2Vcblx0XHRcdHRlbXBfY2FyZXRfdGV4dCA9IFwiXFxcXGdyYXl7XCIrdGVtcF9jYXJldF90ZXh0K1wifVwiO1xuXHRcdH1cblx0XHRhbnMgKz0gdGVtcF9jYXJldF90ZXh0O1xuXHQgICAgfVxuXHQgICAgaWYoaSA8IHRleHQubGVuZ3RoKSBhbnMgKz0gXCJcXFxceG1sQ2xhc3N7Z3VwcHlfZWx0IGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfXCIraStcIn17XCIrdGV4dFtpXStcIn1cIjtcblx0fVxuXHRpZih0ZXh0X25vZGUgJiYgbiA9PSB0aGlzLmN1cnJlbnQpe1xuXHQgICAgYW5zID0gXCJcXFxceG1sQ2xhc3N7Z3VwcHlfdGV4dF9jdXJyZW50fXt7XCIrYW5zK1wifX1cIjtcblx0fVxuXHRuLnNldEF0dHJpYnV0ZShcInJlbmRlclwiLCBhbnMpO1xuXHRuLnJlbW92ZUF0dHJpYnV0ZShcInBhdGhcIik7XG4gICAgfVxuICAgIGVsc2V7XG5cdGZvcih2YXIgYyA9IG4uZmlyc3RDaGlsZDsgYyAhPSBudWxsOyBjID0gYy5uZXh0U2libGluZyl7XG5cdCAgICBpZihjLm5vZGVOYW1lID09IFwiY1wiIHx8IGMubm9kZU5hbWUgPT0gXCJsXCIgfHwgYy5ub2RlTmFtZSA9PSBcImZcIiB8fCBjLm5vZGVOYW1lID09IFwiZVwiKXsgdGhpcy5hZGRfY2xhc3Nlc19jdXJzb3JzKGMpOyB9XG5cdH1cbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUucmVtb3ZlX2N1cnNvcnNfY2xhc3NlcyA9IGZ1bmN0aW9uKG4pe1xuICAgIGlmKG4ubm9kZU5hbWUgPT0gXCJlXCIpe1xuXHRuLnJlbW92ZUF0dHJpYnV0ZShcInBhdGhcIik7XG5cdG4ucmVtb3ZlQXR0cmlidXRlKFwicmVuZGVyXCIpO1xuXHRuLnJlbW92ZUF0dHJpYnV0ZShcImN1cnJlbnRcIik7XG5cdG4ucmVtb3ZlQXR0cmlidXRlKFwidGVtcFwiKTtcbiAgICB9XG4gICAgZWxzZXtcblx0Zm9yKHZhciBjID0gbi5maXJzdENoaWxkOyBjICE9IG51bGw7IGMgPSBjLm5leHRTaWJsaW5nKXtcblx0ICAgIGlmKGMubm9kZVR5cGUgPT0gMSl7IHRoaXMucmVtb3ZlX2N1cnNvcnNfY2xhc3NlcyhjKTsgfVxuXHR9XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmRvd25fZnJvbV9mID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgbm4gPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZDtcbiAgICB3aGlsZShubiAhPSBudWxsICYmIG5uLm5vZGVOYW1lICE9ICdjJyAmJiBubi5ub2RlTmFtZSAhPSAnbCcpIG5uID0gbm4ubmV4dFNpYmxpbmc7XG4gICAgaWYobm4gIT0gbnVsbCl7XG5cdHdoaWxlKG5uLm5vZGVOYW1lID09ICdsJykgbm4gPSBubi5maXJzdENoaWxkO1xuXHR0aGlzLmN1cnJlbnQgPSBubi5maXJzdENoaWxkO1xuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5kb3duX2Zyb21fZl90b19ibGFuayA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIG5uID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQ7XG4gICAgd2hpbGUobm4gIT0gbnVsbCAmJiAhKG5uLm5vZGVOYW1lID09ICdjJyAmJiBubi5jaGlsZHJlbi5sZW5ndGggPT0gMSAmJiBubi5maXJzdENoaWxkLmZpcnN0Q2hpbGQubm9kZVZhbHVlID09IFwiXCIpKXtcblx0bm4gPSBubi5uZXh0U2libGluZztcbiAgICB9XG4gICAgaWYobm4gIT0gbnVsbCl7XG5cdC8vU2FuaXR5IGNoZWNrOlxuXHRcblx0d2hpbGUobm4ubm9kZU5hbWUgPT0gJ2wnKSBubiA9IG5uLmZpcnN0Q2hpbGQ7XG5cdGlmKG5uLm5vZGVOYW1lICE9ICdjJyB8fCBubi5maXJzdENoaWxkLm5vZGVOYW1lICE9ICdlJyl7XG5cdCAgICB0aGlzLnByb2JsZW0oJ2RmZnRiJyk7XG5cdCAgICByZXR1cm47XG5cdH1cblx0dGhpcy5jdXJyZW50ID0gbm4uZmlyc3RDaGlsZDtcbiAgICB9XG4gICAgZWxzZSB0aGlzLmRvd25fZnJvbV9mKCk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZGVsZXRlX2Zyb21fZiA9IGZ1bmN0aW9uKHRvX2luc2VydCl7XG4gICAgdmFyIG4gPSB0aGlzLmN1cnJlbnQ7XG4gICAgdmFyIHAgPSBuLnBhcmVudE5vZGU7XG4gICAgdmFyIHByZXYgPSBuLnByZXZpb3VzU2libGluZztcbiAgICB2YXIgbmV4dCA9IG4ubmV4dFNpYmxpbmc7XG4gICAgdmFyIG1pZGRsZSA9IHRvX2luc2VydCB8fCBcIlwiO1xuICAgIHZhciBuZXdfbm9kZSA9IHRoaXMubWFrZV9lKHByZXYuZmlyc3RDaGlsZC50ZXh0Q29udGVudCArIG1pZGRsZSArIG5leHQuZmlyc3RDaGlsZC50ZXh0Q29udGVudCk7XG4gICAgdGhpcy5jdXJyZW50ID0gbmV3X25vZGU7XG4gICAgdGhpcy5jYXJldCA9IHByZXYuZmlyc3RDaGlsZC50ZXh0Q29udGVudC5sZW5ndGg7XG4gICAgcC5pbnNlcnRCZWZvcmUobmV3X25vZGUsIHByZXYpO1xuICAgIHAucmVtb3ZlQ2hpbGQocHJldik7XG4gICAgcC5yZW1vdmVDaGlsZChuKTtcbiAgICBwLnJlbW92ZUNoaWxkKG5leHQpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnN5bWJvbF90b19ub2RlID0gZnVuY3Rpb24oc3ltX25hbWUsIGNvbnRlbnQpe1xuICAgIC8vIHN5bV9uYW1lIGlzIGEga2V5IGluIHRoZSBzeW1ib2xzIGRpY3Rpb25hcnlcbiAgICAvL1xuICAgIC8vIGNvbnRlbnQgaXMgYSBsaXN0IG9mIG5vZGVzIHRvIGluc2VydFxuICAgIHZhciBiYXNlID0gdGhpcy5kb2MuYmFzZTtcbiAgICB2YXIgcyA9IHRoaXMuc3ltYm9sc1tzeW1fbmFtZV07XG4gICAgdmFyIGYgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJmXCIpO1xuICAgIGZvcih2YXIgYSBpbiBzLmF0dHJzKXtcblx0Zi5zZXRBdHRyaWJ1dGUoYSwgcy5hdHRyc1thXSk7XG4gICAgfVxuICAgIGlmKFwiYXN0XCIgaW4gcyl7XG5cdGlmKFwidHlwZVwiIGluIHMuYXN0KSBmLnNldEF0dHJpYnV0ZShcImFzdF90eXBlXCIsc1tcImFzdF90eXBlXCJdKVxuXHRpZihcInZhbHVlXCIgaW4gcy5hc3QpIGYuc2V0QXR0cmlidXRlKFwiYXN0X3ZhbHVlXCIsc1tcImFzdF92YWx1ZVwiXSlcbiAgICB9XG4gICAgLy9pZihzWydjaGFyJ10pIGYuc2V0QXR0cmlidXRlKFwiY1wiLFwieWVzXCIpO1xuICAgIFxuICAgIHZhciBmaXJzdF9yZWYgPSAtMTtcbiAgICB2YXIgcmVmc19jb3VudCA9IDA7XG4gICAgdmFyIGxpc3RzID0ge31cbiAgICB2YXIgZmlyc3Q7XG5cbiAgICAvLyBNYWtlIHRoZSBiIG5vZGVzIGZvciByZW5kZXJpbmcgZWFjaCBvdXRwdXQgICAgXG4gICAgZm9yKHZhciB0IGluIHNbXCJvdXRwdXRcIl0pe1xuXHR2YXIgYiA9IGJhc2UuY3JlYXRlRWxlbWVudChcImJcIik7XG5cdGIuc2V0QXR0cmlidXRlKFwicFwiLHQpO1xuXG5cdHZhciBvdXQgPSBzW1wib3V0cHV0XCJdW3RdO1xuXHRpZih0eXBlb2Ygb3V0ID09ICdzdHJpbmcnKXtcblx0ICAgIG91dCA9IG91dC5zcGxpdCgvKFxce1xcJFswLTldKyg/Olxce1tefV0rXFx9KSpcXH0pL2cpO1xuXHQgICAgZm9yKHZhciBpID0gMDsgaSA8IG91dC5sZW5ndGg7IGkrKyl7XG5cdFx0bSA9IG91dFtpXS5tYXRjaCgvXlxce1xcJChbMC05XSspKCg/Olxce1tefV0rXFx9KSopXFx9JC8pO1xuXHRcdGlmKG0pe1xuXHRcdCAgICBvdXRbaV0gPSB7J3JlZic6cGFyc2VJbnQobVsxXSl9O1xuXHRcdCAgICBpZihtWzJdLmxlbmd0aCA+IDApe1xuXHRcdFx0bW0gPSBtWzJdLm1hdGNoKC9cXHtbXn1dKlxcfS9nKTtcblx0XHRcdG91dFtpXVsnZCddID0gbW0ubGVuZ3RoO1xuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IG1tLmxlbmd0aDsgaisrKXtcblx0XHRcdCAgICBvdXRbaV1bJ3NlcCcral0gPSBtbVtqXS5zdWJzdHJpbmcoMSxtbVtqXS5sZW5ndGgtMSk7XG5cdFx0XHR9XG5cdFx0ICAgIH1cblx0XHR9XG5cdCAgICB9XG5cdH1cblx0Zm9yKHZhciBpID0gMDsgaSA8IG91dC5sZW5ndGg7IGkrKyl7XG5cdCAgICBpZih0eXBlb2Ygb3V0W2ldID09ICdzdHJpbmcnIHx8IG91dFtpXSBpbnN0YW5jZW9mIFN0cmluZyl7XG5cdFx0dmFyIG50ID0gYmFzZS5jcmVhdGVUZXh0Tm9kZShvdXRbaV0pO1xuXHRcdGIuYXBwZW5kQ2hpbGQobnQpO1xuXHQgICAgfVxuXHQgICAgZWxzZXtcblx0XHR2YXIgbnQgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJyXCIpO1xuXHRcdGZvcih2YXIgYXR0ciBpbiBvdXRbaV0pe1xuXHRcdCAgICBudC5zZXRBdHRyaWJ1dGUoYXR0cixvdXRbaV1bYXR0cl0pO1xuXHRcdH1cblx0XHRpZih0ID09ICdsYXRleCcpIHtcblx0XHQgICAgaWYoZmlyc3RfcmVmID09IC0xKSBmaXJzdF9yZWYgPSBvdXRbaV1bJ3JlZiddO1xuXHRcdCAgICBpZignZCcgaW4gb3V0W2ldKSBsaXN0c1tyZWZzX2NvdW50XSA9IG91dFtpXVsnZCddXG5cdFx0ICAgIHJlZnNfY291bnQrKztcblx0XHR9XG5cdFx0Yi5hcHBlbmRDaGlsZChudCk7XG5cdCAgICB9XG5cdH1cblx0Zi5hcHBlbmRDaGlsZChiKTtcbiAgICB9XG4gICAgLy8gTm93IG1ha2UgdGhlIGMgbm9kZXMgZm9yIHN0b3JpbmcgdGhlIGNvbnRlbnRcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgcmVmc19jb3VudDsgaSsrKXtcblx0dmFyIG5jID0gYmFzZS5jcmVhdGVFbGVtZW50KFwiY1wiKTtcblx0aWYoaSBpbiBjb250ZW50KXtcblx0ICAgIHZhciBub2RlX2xpc3QgPSBjb250ZW50W2ldO1xuXHQgICAgZm9yKHZhciBzZSA9IDA7IHNlIDwgbm9kZV9saXN0Lmxlbmd0aDsgc2UrKyl7XG5cdFx0bmMuYXBwZW5kQ2hpbGQobm9kZV9saXN0W3NlXS5jbG9uZU5vZGUodHJ1ZSkpO1xuXHQgICAgfVxuXHR9XG5cdGVsc2UgbmMuYXBwZW5kQ2hpbGQodGhpcy5tYWtlX2UoXCJcIikpO1xuXHRpZihpKzEgPT0gZmlyc3RfcmVmKSBmaXJzdCA9IG5jLmxhc3RDaGlsZDtcblx0aWYoc1snYXJncyddKVxuXHQgICAgZm9yKHZhciBhIGluIChzWydhcmdzJ11baV0gfHwge30pKVxuXHRcdG5jLnNldEF0dHJpYnV0ZShhLHNbJ2FyZ3MnXVtpXVthXSk7XG5cdCAgICAvLyBmb3IodmFyIGEgaW4gc1snYXR0cnMnXSlcblx0ICAgIC8vIFx0aWYoc1snYXR0cnMnXVthXVtpXSAhPSAwKSBuYy5zZXRBdHRyaWJ1dGUoYSxzWydhdHRycyddW2FdW2ldKTtcblx0aWYoaSBpbiBsaXN0cyl7XG5cdCAgICB2YXIgcGFyID0gZjtcblx0ICAgIGZvcih2YXIgaiA9IDA7IGogPCBsaXN0c1tpXTsgaisrKXtcblx0XHR2YXIgbmwgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJsXCIpO1xuXHRcdG5sLnNldEF0dHJpYnV0ZShcInNcIixcIjFcIik7XG5cdFx0cGFyLmFwcGVuZENoaWxkKG5sKTtcblx0XHRwYXIgPSBubDtcblx0XHRpZihqID09IGxpc3RzW2ldLTEpIG5sLmFwcGVuZENoaWxkKG5jKTtcblx0ICAgIH1cblx0fVxuXHRlbHNlIGYuYXBwZW5kQ2hpbGQobmMpO1xuICAgIH1cbiAgICByZXR1cm4ge1wiZlwiOmYsIFwiZmlyc3RcIjpmaXJzdH07XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5pbnNlcnRfc3ltYm9sID0gZnVuY3Rpb24oc3ltX25hbWUpe1xuICAgIHZhciBzID0gdGhpcy5zeW1ib2xzW3N5bV9uYW1lXTtcbiAgICBpZihzLmF0dHJzICYmIHRoaXMuaXNfYmxhY2tsaXN0ZWQocy5hdHRycy50eXBlKSl7XG5cdHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdmFyIG5vZGVfbGlzdCA9IHt9O1xuICAgIHZhciBjb250ZW50ID0ge307XG4gICAgdmFyIGxlZnRfcGllY2UscmlnaHRfcGllY2U7XG4gICAgdmFyIGN1ciA9IChzLmN1cnJlbnQpID8gcy5jdXJyZW50LmluZGV4IHx8IDAgOiAwO1xuICAgIHZhciB0b19yZW1vdmUgPSBbXTtcbiAgICB2YXIgdG9fcmVwbGFjZSA9IG51bGw7XG4gICAgdmFyIHJlcGxhY2VfZiA9IGZhbHNlO1xuICAgIFxuICAgIGlmKGN1ciA+IDApe1xuXHRjdXItLTtcblx0aWYodGhpcy5zZWxfc3RhdHVzICE9IEd1cHB5QmFja2VuZC5TRUxfTk9ORSl7XG5cdCAgICB2YXIgc2VsID0gdGhpcy5zZWxfZ2V0KCk7XG5cdCAgICBzZWxfcGFyZW50ID0gc2VsLmludm9sdmVkWzBdLnBhcmVudE5vZGU7XG5cdCAgICB0b19yZW1vdmUgPSBzZWwuaW52b2x2ZWQ7XG5cdCAgICBsZWZ0X3BpZWNlID0gdGhpcy5tYWtlX2Uoc2VsLnJlbW5hbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoMCx0aGlzLnNlbF9zdGFydC5jYXJldCkpO1xuXHQgICAgcmlnaHRfcGllY2UgPSB0aGlzLm1ha2VfZShzZWwucmVtbmFudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSh0aGlzLnNlbF9zdGFydC5jYXJldCkpO1xuXHQgICAgY29udGVudFtjdXJdID0gc2VsLm5vZGVfbGlzdDtcblx0fVxuXHRlbHNlIGlmKHMuY3VycmVudCAmJiBzLmN1cnJlbnQudHlwZSA9PSAndG9rZW4nKXtcblx0ICAgIC8vIElmIHdlJ3JlIGF0IHRoZSBiZWdpbm5pbmcsIHRoZW4gdGhlIHRva2VuIGlzIHRoZSBwcmV2aW91cyBmIG5vZGVcblx0ICAgIGlmKHRoaXMuY2FyZXQgPT0gMCAmJiB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nICE9IG51bGwpe1xuXHRcdGNvbnRlbnRbY3VyXSA9IFt0aGlzLm1ha2VfZShcIlwiKSwgdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZywgdGhpcy5tYWtlX2UoXCJcIildO1xuXHRcdHRvX3JlcGxhY2UgPSB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xuXHRcdHJlcGxhY2VfZiA9IHRydWU7XG5cdCAgICB9XG5cdCAgICBlbHNle1xuXHRcdC8vIGxvb2sgZm9yIFswLTkuXSt8W2EtekEtWl0gaW1tZWRpYXRlbHkgcHJlY2VlZGluZyB0aGUgY2FyZXQgYW5kIHVzZSB0aGF0IGFzIHRva2VuXG5cdFx0dmFyIHByZXYgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKDAsdGhpcy5jYXJldCk7XG5cdFx0dmFyIHRva2VuID0gcHJldi5tYXRjaCgvWzAtOS5dKyR8W2EtekEtWl0kLyk7XG5cdFx0aWYodG9rZW4gIT0gbnVsbCAmJiB0b2tlbi5sZW5ndGggPiAwKXtcblx0XHQgICAgdG9rZW4gPSB0b2tlblswXTtcblx0XHQgICAgbGVmdF9waWVjZSA9IHRoaXMubWFrZV9lKHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSgwLHRoaXMuY2FyZXQtdG9rZW4ubGVuZ3RoKSk7XG5cdFx0ICAgIHJpZ2h0X3BpZWNlID0gdGhpcy5tYWtlX2UodGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKHRoaXMuY2FyZXQpKTtcblx0XHQgICAgY29udGVudFtjdXJdID0gW3RoaXMubWFrZV9lKHRva2VuKV07XG5cdFx0fVxuXHQgICAgfVxuXHR9XG4gICAgfVxuICAgIGlmKCFyZXBsYWNlX2YgJiYgKGxlZnRfcGllY2UgPT0gbnVsbCB8fCByaWdodF9waWVjZSA9PSBudWxsKSl7XG5cdGxlZnRfcGllY2UgPSB0aGlzLm1ha2VfZSh0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoMCx0aGlzLmNhcmV0KSk7XG5cdHJpZ2h0X3BpZWNlID0gdGhpcy5tYWtlX2UodGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKHRoaXMuY2FyZXQpKTtcblx0dG9fcmVtb3ZlID0gW3RoaXMuY3VycmVudF07XG4gICAgfVxuXG4gICAgLy8gQnkgbm93OlxuICAgIC8vIFxuICAgIC8vIGNvbnRlbnQgY29udGFpbnMgd2hhdGV2ZXIgd2Ugd2FudCB0byBwcmUtcG9wdWxhdGUgdGhlICdjdXJyZW50JyBmaWVsZCB3aXRoIChpZiBhbnkpXG4gICAgLy9cbiAgICAvLyByaWdodF9waWVjZSBjb250YWlucyB3aGF0ZXZlciBjb250ZW50IHdhcyBpbiBhbiBpbnZvbHZlZCBub2RlXG4gICAgLy8gdG8gdGhlIHJpZ2h0IG9mIHRoZSBjdXJzb3IgYnV0IGlzIG5vdCBwYXJ0IG9mIHRoZSBpbnNlcnRpb24uXG4gICAgLy8gQW5hbG9nb3VzbHkgZm9yIGxlZnRfcGllY2VcbiAgICAvL1xuICAgIC8vIFRodXMgYWxsIHdlIHNob3VsZCBoYXZlIHRvIGRvIG5vdyBpcyBzeW1ib2xfdG9fbm9kZShzeW1fdHlwZSxcbiAgICAvLyBjb250ZW50KSBhbmQgdGhlbiBhZGQgdGhlIGxlZnRfcGllY2UsIHJlc3VsdGluZyBub2RlLCBhbmRcbiAgICAvLyByaWdodF9waWVjZSBpbiB0aGF0IG9yZGVyLlxuICAgIFxuICAgIHZhciBuZXdfY3VycmVudCA9IG51bGw7XG4gICAgdmFyIGN1cnJlbnRfcGFyZW50ID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGU7XG4gICAgXG4gICAgdmFyIHN5bSA9IHRoaXMuc3ltYm9sX3RvX25vZGUoc3ltX25hbWUsY29udGVudCk7XG4gICAgdmFyIGYgPSBzeW0uZjtcbiAgICB2YXIgbmV3X2N1cnJlbnQgPSBzeW0uZmlyc3Q7XG5cbiAgICB2YXIgbmV4dCA9IHRoaXMuY3VycmVudC5uZXh0U2libGluZztcblxuICAgIGlmKHJlcGxhY2VfZil7XG5cdGN1cnJlbnRfcGFyZW50LnJlcGxhY2VDaGlsZChmLHRvX3JlcGxhY2UpO1xuICAgIH1cbiAgICBlbHNle1xuXHRpZih0b19yZW1vdmUubGVuZ3RoID09IDApIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuY3VycmVudCk7XG5cdFxuXHRmb3IodmFyIGkgPSAwOyBpIDwgdG9fcmVtb3ZlLmxlbmd0aDsgaSsrKXtcblx0ICAgIGlmKG5leHQgPT0gdG9fcmVtb3ZlW2ldKSBuZXh0ID0gbmV4dC5uZXh0U2libGluZztcblx0ICAgIGN1cnJlbnRfcGFyZW50LnJlbW92ZUNoaWxkKHRvX3JlbW92ZVtpXSk7XG5cdH1cblx0Y3VycmVudF9wYXJlbnQuaW5zZXJ0QmVmb3JlKGxlZnRfcGllY2UsIG5leHQpO1xuXHRjdXJyZW50X3BhcmVudC5pbnNlcnRCZWZvcmUoZiwgbmV4dCk7XG5cdGN1cnJlbnRfcGFyZW50Lmluc2VydEJlZm9yZShyaWdodF9waWVjZSwgbmV4dCk7XG4gICAgfVxuICAgIFxuICAgIHRoaXMuY2FyZXQgPSAwO1xuICAgIHRoaXMuY3VycmVudCA9IGY7XG4gICAgaWYocy5hdHRyc1snY2hhciddID09IFwieWVzXCIpe1xuXHR0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmc7XG4gICAgfVxuICAgIGVsc2UgdGhpcy5kb3duX2Zyb21fZl90b19ibGFuaygpO1xuXG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZWxfZ2V0ID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9OT05FKXtcblx0cmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHZhciBpbnZvbHZlZCA9IFtdO1xuICAgIHZhciBub2RlX2xpc3QgPSBbXTtcbiAgICB2YXIgcmVtbmFudCA9IG51bGw7XG5cbiAgICBpZih0aGlzLnNlbF9zdGFydC5ub2RlID09IHRoaXMuc2VsX2VuZC5ub2RlKXtcblx0cmV0dXJuIHtcIm5vZGVfbGlzdFwiOlt0aGlzLm1ha2VfZSh0aGlzLnNlbF9zdGFydC5ub2RlLmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZyh0aGlzLnNlbF9zdGFydC5jYXJldCwgdGhpcy5zZWxfZW5kLmNhcmV0KSldLFxuXHRcdFwicmVtbmFudFwiOnRoaXMubWFrZV9lKHRoaXMuc2VsX3N0YXJ0Lm5vZGUuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKDAsIHRoaXMuc2VsX3N0YXJ0LmNhcmV0KSArIHRoaXMuc2VsX2VuZC5ub2RlLmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZyh0aGlzLnNlbF9lbmQuY2FyZXQpKSxcblx0XHRcImludm9sdmVkXCI6W3RoaXMuc2VsX3N0YXJ0Lm5vZGVdfTtcbiAgICB9XG4gICAgXG4gICAgbm9kZV9saXN0LnB1c2godGhpcy5tYWtlX2UodGhpcy5zZWxfc3RhcnQubm9kZS5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5zZWxfc3RhcnQuY2FyZXQpKSk7XG4gICAgaW52b2x2ZWQucHVzaCh0aGlzLnNlbF9zdGFydC5ub2RlKTtcbiAgICBpbnZvbHZlZC5wdXNoKHRoaXMuc2VsX2VuZC5ub2RlKTtcbiAgICByZW1uYW50ID0gdGhpcy5tYWtlX2UodGhpcy5zZWxfc3RhcnQubm9kZS5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcoMCwgdGhpcy5zZWxfc3RhcnQuY2FyZXQpICsgdGhpcy5zZWxfZW5kLm5vZGUuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKHRoaXMuc2VsX2VuZC5jYXJldCkpO1xuICAgIHZhciBuID0gdGhpcy5zZWxfc3RhcnQubm9kZS5uZXh0U2libGluZztcbiAgICB3aGlsZShuICE9IG51bGwgJiYgbiAhPSB0aGlzLnNlbF9lbmQubm9kZSl7XG5cdGludm9sdmVkLnB1c2gobik7XG5cdG5vZGVfbGlzdC5wdXNoKG4pO1xuXHRuID0gbi5uZXh0U2libGluZztcbiAgICB9XG4gICAgbm9kZV9saXN0LnB1c2godGhpcy5tYWtlX2UodGhpcy5zZWxfZW5kLm5vZGUuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKDAsIHRoaXMuc2VsX2VuZC5jYXJldCkpKTtcbiAgICByZXR1cm4ge1wibm9kZV9saXN0XCI6bm9kZV9saXN0LFxuXHQgICAgXCJyZW1uYW50XCI6cmVtbmFudCxcblx0ICAgIFwiaW52b2x2ZWRcIjppbnZvbHZlZCxcblx0ICAgIFwiY3Vyc29yXCI6MH07XG59XG5cbi8vIEd1cHB5QmFja2VuZC5wcm90b3R5cGUucHJpbnRfc2VsZWN0aW9uID0gZnVuY3Rpb24oKXtcbi8vICAgICB2YXIgc2VsID0gdGhpcy5zZWxfZ2V0KCk7XG4vLyAgICAgaWYoc2VsID09IG51bGwpIHJldHVybiBcIltub25lXVwiO1xuLy8gICAgIHZhciBhbnMgPSBcIlwiO1xuLy8gICAgIGFucyArPSBcIm5vZGVfbGlzdDogXFxuXCI7XG4vLyAgICAgZm9yKHZhciBpID0gMDsgaSA8IHNlbC5ub2RlX2xpc3QubGVuZ3RoOyBpKyspe1xuLy8gXHR2YXIgbiA9IHNlbC5ub2RlX2xpc3RbaV07XG4vLyBcdGFucyArPSAobmV3IFhNTFNlcmlhbGl6ZXIoKSkuc2VyaWFsaXplVG9TdHJpbmcobikgKyBcIlxcblwiO1xuLy8gICAgIH1cbi8vICAgICBhbnMgKz0gXCJcXG5pbnZvbHZlZDogXFxuXCI7XG4vLyAgICAgZm9yKHZhciBpID0gMDsgaSA8IHNlbC5pbnZvbHZlZC5sZW5ndGg7IGkrKyl7XG4vLyBcdHZhciBuID0gc2VsLmludm9sdmVkW2ldO1xuLy8gXHRhbnMgKz0gKG5ldyBYTUxTZXJpYWxpemVyKCkpLnNlcmlhbGl6ZVRvU3RyaW5nKG4pICsgXCJcXG5cIjtcbi8vICAgICB9XG4vLyB9XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubWFrZV9lID0gZnVuY3Rpb24odGV4dCl7XG4gICAgdmFyIGJhc2UgPSB0aGlzLmRvYy5iYXNlO1xuICAgIHZhciBuZXdfbm9kZSA9IGJhc2UuY3JlYXRlRWxlbWVudChcImVcIik7XG4gICAgbmV3X25vZGUuYXBwZW5kQ2hpbGQoYmFzZS5jcmVhdGVUZXh0Tm9kZSh0ZXh0KSk7XG4gICAgcmV0dXJuIG5ld19ub2RlO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuaW5zZXJ0X3N0cmluZyA9IGZ1bmN0aW9uKHMpe1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyAhPSBHdXBweUJhY2tlbmQuU0VMX05PTkUpe1xuXHR0aGlzLnNlbF9kZWxldGUoKTtcblx0dGhpcy5zZWxfY2xlYXIoKTtcbiAgICB9XG4gICAgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNwbGljZSh0aGlzLmNhcmV0LHMpXG4gICAgdGhpcy5jYXJldCArPSBzLmxlbmd0aDtcbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcbiAgICBpZih0aGlzLmF1dG9yZXBsYWNlKSB0aGlzLmNoZWNrX2Zvcl9zeW1ib2woKTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNlbF9jb3B5ID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgc2VsID0gdGhpcy5zZWxfZ2V0KCk7XG4gICAgaWYoIXNlbCkgcmV0dXJuO1xuICAgIEd1cHB5QmFja2VuZC5jbGlwYm9hcmQgPSBbXTtcbiAgICB2YXIgY2xpcF90ZXh0ID0gXCJcIjtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgc2VsLm5vZGVfbGlzdC5sZW5ndGg7IGkrKyl7XG5cdHZhciBub2RlID0gc2VsLm5vZGVfbGlzdFtpXS5jbG9uZU5vZGUodHJ1ZSk7XG5cdEd1cHB5QmFja2VuZC5jbGlwYm9hcmQucHVzaChub2RlKTtcblx0aWYodGhpcy5jbGlwdHlwZSkgY2xpcF90ZXh0ICs9IHRoaXMuZG9jLm1hbnVhbF9yZW5kZXIodGhpcy5jbGlwdHlwZSwgbm9kZSk7XG4gICAgfVxuICAgIGlmKHRoaXMuY2xpcHR5cGUpIHRoaXMuc3lzdGVtX2NvcHkoY2xpcF90ZXh0KTtcbiAgICB0aGlzLnNlbF9jbGVhcigpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnN5c3RlbV9jb3B5ID0gZnVuY3Rpb24odGV4dCkge1xuICAgIGlmICh3aW5kb3cuY2xpcGJvYXJkRGF0YSAmJiB3aW5kb3cuY2xpcGJvYXJkRGF0YS5zZXREYXRhKVxuICAgICAgICByZXR1cm4gY2xpcGJvYXJkRGF0YS5zZXREYXRhKFwiVGV4dFwiLCB0ZXh0KTtcbiAgICBlbHNlIGlmIChkb2N1bWVudC5xdWVyeUNvbW1hbmRTdXBwb3J0ZWQgJiYgZG9jdW1lbnQucXVlcnlDb21tYW5kU3VwcG9ydGVkKFwiY29weVwiKSkge1xuICAgICAgICB2YXIgdGV4dGFyZWEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIik7XG4gICAgICAgIHRleHRhcmVhLnRleHRDb250ZW50ID0gdGV4dDtcbiAgICAgICAgdGV4dGFyZWEuc3R5bGUucG9zaXRpb24gPSBcImZpeGVkXCI7XG5cdHRleHRhcmVhLnN0eWxlLmJhY2tncm91bmQgPSBcInRyYW5zcGFyZW50XCI7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGV4dGFyZWEpO1xuICAgICAgICB0ZXh0YXJlYS5zZWxlY3QoKTtcbiAgICAgICAgdHJ5IHsgcmV0dXJuIGRvY3VtZW50LmV4ZWNDb21tYW5kKFwiY29weVwiKTsgfVxuXHRjYXRjaCAoZXgpIHsgcmV0dXJuIGZhbHNlOyB9XG4gICAgICAgIGZpbmFsbHkgeyBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRleHRhcmVhKTsgfVxuICAgIH1cbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNlbF9jdXQgPSBmdW5jdGlvbigpe1xuICAgIHZhciBub2RlX2xpc3QgPSB0aGlzLnNlbF9kZWxldGUoKTtcbiAgICBpZighbm9kZV9saXN0KSByZXR1cm47XG4gICAgR3VwcHlCYWNrZW5kLmNsaXBib2FyZCA9IFtdO1xuICAgIHZhciBjbGlwX3RleHQgPSBcIlwiO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBub2RlX2xpc3QubGVuZ3RoOyBpKyspe1xuXHR2YXIgbm9kZSA9IG5vZGVfbGlzdFtpXS5jbG9uZU5vZGUodHJ1ZSk7XG5cdEd1cHB5QmFja2VuZC5jbGlwYm9hcmQucHVzaChub2RlKTtcblx0aWYodGhpcy5jbGlwdHlwZSkgY2xpcF90ZXh0ICs9IHRoaXMuZG9jLm1hbnVhbF9yZW5kZXIodGhpcy5jbGlwdHlwZSwgbm9kZSk7XG4gICAgfVxuICAgIGlmKHRoaXMuY2xpcHR5cGUpIHRoaXMuc3lzdGVtX2NvcHkoY2xpcF90ZXh0KTtcbiAgICB0aGlzLnNlbF9jbGVhcigpO1xuICAgIHRoaXMuY2hlY2twb2ludCgpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmluc2VydF9ub2RlcyA9IGZ1bmN0aW9uKG5vZGVfbGlzdCwgbW92ZV9jdXJzb3Ipe1xuICAgIHZhciByZWFsX2NsaXBib2FyZCA9IFtdO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBub2RlX2xpc3QubGVuZ3RoOyBpKyspe1xuXHRyZWFsX2NsaXBib2FyZC5wdXNoKG5vZGVfbGlzdFtpXS5jbG9uZU5vZGUodHJ1ZSkpO1xuICAgIH1cblxuICAgIGlmKHJlYWxfY2xpcGJvYXJkLmxlbmd0aCA9PSAxKXtcblx0dGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZygwLHRoaXMuY2FyZXQpICsgcmVhbF9jbGlwYm9hcmRbMF0uZmlyc3RDaGlsZC5ub2RlVmFsdWUgKyB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKHRoaXMuY2FyZXQpO1xuXHRpZihtb3ZlX2N1cnNvcikgdGhpcy5jYXJldCArPSByZWFsX2NsaXBib2FyZFswXS5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGVsc2V7XG5cdHZhciBubiA9IHRoaXMubWFrZV9lKHJlYWxfY2xpcGJvYXJkW3JlYWxfY2xpcGJvYXJkLmxlbmd0aC0xXS5maXJzdENoaWxkLm5vZGVWYWx1ZSArIHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5jYXJldCkpO1xuXHR0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKDAsdGhpcy5jYXJldCkgKyByZWFsX2NsaXBib2FyZFswXS5maXJzdENoaWxkLm5vZGVWYWx1ZTtcblx0aWYodGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nID09IG51bGwpXG5cdCAgICB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5hcHBlbmRDaGlsZChubilcblx0ZWxzZVxuXHQgICAgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5uLCB0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcpXG5cdGZvcih2YXIgaSA9IDE7IGkgPCByZWFsX2NsaXBib2FyZC5sZW5ndGggLSAxOyBpKyspXG5cdCAgICB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocmVhbF9jbGlwYm9hcmRbaV0sIG5uKTtcblx0aWYobW92ZV9jdXJzb3Ipe1xuXHQgICAgdGhpcy5jdXJyZW50ID0gbm47XG5cdCAgICB0aGlzLmNhcmV0ID0gcmVhbF9jbGlwYm9hcmRbcmVhbF9jbGlwYm9hcmQubGVuZ3RoLTFdLmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aFxuXHR9XG4gICAgfVxufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX3Bhc3RlID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9kZWxldGUoKTtcbiAgICB0aGlzLnNlbF9jbGVhcigpO1xuICAgIGlmKCEoR3VwcHlCYWNrZW5kLmNsaXBib2FyZCkgfHwgR3VwcHlCYWNrZW5kLmNsaXBib2FyZC5sZW5ndGggPT0gMCkgcmV0dXJuO1xuICAgIHRoaXMuaW5zZXJ0X25vZGVzKEd1cHB5QmFja2VuZC5jbGlwYm9hcmQsIHRydWUpO1xuICAgIHRoaXMuY2hlY2twb2ludCgpO1xuICAgIHJldHVybjtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNlbF9jbGVhciA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfc3RhcnQgPSBudWxsOyAgICBcbiAgICB0aGlzLnNlbF9lbmQgPSBudWxsO1xuICAgIHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfTk9ORTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNlbF9kZWxldGUgPSBmdW5jdGlvbigpe1xuICAgIHZhciBzZWwgPSB0aGlzLnNlbF9nZXQoKTtcbiAgICBpZighc2VsKSByZXR1cm4gbnVsbDtcbiAgICBzZWxfcGFyZW50ID0gc2VsLmludm9sdmVkWzBdLnBhcmVudE5vZGU7XG4gICAgc2VsX3ByZXYgPSBzZWwuaW52b2x2ZWRbMF0ucHJldmlvdXNTaWJsaW5nO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzZWwuaW52b2x2ZWQubGVuZ3RoOyBpKyspe1xuXHR2YXIgbiA9IHNlbC5pbnZvbHZlZFtpXTtcblx0c2VsX3BhcmVudC5yZW1vdmVDaGlsZChuKTtcbiAgICB9XG4gICAgaWYoc2VsX3ByZXYgPT0gbnVsbCl7XG5cdGlmKHNlbF9wYXJlbnQuZmlyc3RDaGlsZCA9PSBudWxsKVxuXHQgICAgc2VsX3BhcmVudC5hcHBlbmRDaGlsZChzZWwucmVtbmFudCk7XG5cdGVsc2Vcblx0ICAgIHNlbF9wYXJlbnQuaW5zZXJ0QmVmb3JlKHNlbC5yZW1uYW50LCBzZWxfcGFyZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBlbHNlIGlmKHNlbF9wcmV2Lm5vZGVOYW1lID09ICdmJyl7XG5cdGlmKHNlbF9wcmV2Lm5leHRTaWJsaW5nID09IG51bGwpXG5cdCAgICBzZWxfcGFyZW50LmFwcGVuZENoaWxkKHNlbC5yZW1uYW50KTtcblx0ZWxzZVxuXHQgICAgc2VsX3BhcmVudC5pbnNlcnRCZWZvcmUoc2VsLnJlbW5hbnQsIHNlbF9wcmV2Lm5leHRTaWJsaW5nKTtcbiAgICB9XG4gICAgdGhpcy5jdXJyZW50ID0gc2VsLnJlbW5hbnRcbiAgICB0aGlzLmNhcmV0ID0gdGhpcy5zZWxfc3RhcnQuY2FyZXQ7XG4gICAgcmV0dXJuIHNlbC5ub2RlX2xpc3Q7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZWxfYWxsID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLmhvbWUoKTtcbiAgICB0aGlzLnNldF9zZWxfc3RhcnQoKTtcbiAgICB0aGlzLmVuZCgpO1xuICAgIHRoaXMuc2V0X3NlbF9lbmQoKTtcbiAgICBpZih0aGlzLnNlbF9zdGFydC5ub2RlICE9IHRoaXMuc2VsX2VuZC5ub2RlIHx8IHRoaXMuc2VsX3N0YXJ0LmNhcmV0ICE9IHRoaXMuc2VsX2VuZC5jYXJldClcblx0dGhpcy5zZWxfc3RhdHVzID0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX3JpZ2h0ID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9OT05FKXtcblx0dGhpcy5zZXRfc2VsX3N0YXJ0KCk7XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORDtcbiAgICB9XG4gICAgaWYodGhpcy5jYXJldCA+PSBHdXBweVV0aWxzLmdldF9sZW5ndGgodGhpcy5jdXJyZW50KSl7XG5cdHZhciBubiA9IHRoaXMuY3VycmVudC5uZXh0U2libGluZztcblx0aWYobm4gIT0gbnVsbCl7XG5cdCAgICB0aGlzLmN1cnJlbnQgPSBubi5uZXh0U2libGluZztcblx0ICAgIHRoaXMuY2FyZXQgPSAwO1xuXHQgICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCk7XG5cdH1cblx0ZWxzZXtcblx0ICAgIHRoaXMuc2V0X3NlbF9ib3VuZGFyeShHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpO1xuXHR9XG4gICAgfVxuICAgIGVsc2V7XG5cdHRoaXMuY2FyZXQgKz0gMTtcblx0dGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCk7XG4gICAgfVxuICAgIGlmKHRoaXMuc2VsX3N0YXJ0Lm5vZGUgPT0gdGhpcy5zZWxfZW5kLm5vZGUgJiYgdGhpcy5zZWxfc3RhcnQuY2FyZXQgPT0gdGhpcy5zZWxfZW5kLmNhcmV0KXtcblx0dGhpcy5zZWxfc3RhdHVzID0gR3VwcHlCYWNrZW5kLlNFTF9OT05FO1xuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZXRfc2VsX2JvdW5kYXJ5ID0gZnVuY3Rpb24oc3N0YXR1cywgbW91c2Upe1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX05PTkUgfHwgbW91c2UpIHRoaXMuc2VsX3N0YXR1cyA9IHNzdGF0dXM7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKVxuXHR0aGlzLnNldF9zZWxfc3RhcnQoKTtcbiAgICBlbHNlIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpXG5cdHRoaXMuc2V0X3NlbF9lbmQoKTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNlbF9sZWZ0ID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9OT05FKXtcblx0dGhpcy5zZXRfc2VsX2VuZCgpO1xuXHR0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVDtcbiAgICB9XG4gICAgaWYodGhpcy5jYXJldCA8PSAwKXtcblx0dmFyIG5uID0gdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZztcblx0aWYobm4gIT0gbnVsbCl7XG5cdCAgICB0aGlzLmN1cnJlbnQgPSBubi5wcmV2aW91c1NpYmxpbmc7XG5cdCAgICB0aGlzLmNhcmV0ID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aDtcblx0ICAgIHRoaXMuc2V0X3NlbF9ib3VuZGFyeShHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCk7XG5cdH1cblx0ZWxzZXtcblx0ICAgIHRoaXMuc2V0X3NlbF9ib3VuZGFyeShHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCk7XG5cdH1cbiAgICB9XG4gICAgZWxzZXtcblx0dGhpcy5jYXJldCAtPSAxO1xuXHR0aGlzLnNldF9zZWxfYm91bmRhcnkoR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQpO1xuICAgIH1cbiAgICBpZih0aGlzLnNlbF9zdGFydC5ub2RlID09IHRoaXMuc2VsX2VuZC5ub2RlICYmIHRoaXMuc2VsX3N0YXJ0LmNhcmV0ID09IHRoaXMuc2VsX2VuZC5jYXJldCl7XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfTk9ORTtcbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmRfY29weV9yaWdodCA9IGZ1bmN0aW9uKCl7dGhpcy5saXN0X2V4dGVuZChcInJpZ2h0XCIsIHRydWUpO31cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmRfY29weV9sZWZ0ID0gZnVuY3Rpb24oKXt0aGlzLmxpc3RfZXh0ZW5kKFwibGVmdFwiLCB0cnVlKTt9XG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kX3JpZ2h0ID0gZnVuY3Rpb24oKXt0aGlzLmxpc3RfZXh0ZW5kKFwicmlnaHRcIiwgZmFsc2UpO31cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmRfbGVmdCA9IGZ1bmN0aW9uKCl7dGhpcy5saXN0X2V4dGVuZChcImxlZnRcIiwgZmFsc2UpO31cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmRfdXAgPSBmdW5jdGlvbigpe3RoaXMubGlzdF9leHRlbmQoXCJ1cFwiLCBmYWxzZSk7fVxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF9kb3duID0gZnVuY3Rpb24oKXt0aGlzLmxpc3RfZXh0ZW5kKFwiZG93blwiLCBmYWxzZSk7fVxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF9jb3B5X3VwID0gZnVuY3Rpb24oKXt0aGlzLmxpc3RfZXh0ZW5kKFwidXBcIiwgdHJ1ZSk7fVxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF9jb3B5X2Rvd24gPSBmdW5jdGlvbigpe3RoaXMubGlzdF9leHRlbmQoXCJkb3duXCIsIHRydWUpO31cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfdmVydGljYWxfbW92ZSA9IGZ1bmN0aW9uKGRvd24pe1xuICAgIHZhciBuID0gdGhpcy5jdXJyZW50O1xuICAgIHdoaWxlKG4ucGFyZW50Tm9kZSAmJiBuLnBhcmVudE5vZGUucGFyZW50Tm9kZSAmJiAhKG4ubm9kZU5hbWUgPT0gJ2MnICYmIG4ucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcgJiYgbi5wYXJlbnROb2RlLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2wnKSl7XG5cdG4gPSBuLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIGlmKCFuLnBhcmVudE5vZGUpIHJldHVybjtcbiAgICB2YXIgcG9zID0gMTtcbiAgICB2YXIgY2MgPSBuO1xuICAgIHdoaWxlKGNjLnByZXZpb3VzU2libGluZyAhPSBudWxsKXtcblx0cG9zKys7XG5cdGNjID0gY2MucHJldmlvdXNTaWJsaW5nO1xuICAgIH1cbiAgICB2YXIgbmV3X2wgPSBkb3duID8gbi5wYXJlbnROb2RlLm5leHRTaWJsaW5nIDogbi5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZ1xuICAgIGlmKCFuZXdfbCkgcmV0dXJuO1xuICAgIHZhciBpZHggPSAxO1xuICAgIHZhciBubiA9IG5ld19sLmZpcnN0Q2hpbGQ7XG4gICAgd2hpbGUoaWR4IDwgcG9zKXtcblx0aWR4Kys7XG5cdG5uID0gbm4ubmV4dFNpYmxpbmc7XG4gICAgfVxuICAgIHRoaXMuY3VycmVudCA9IG5uLmZpcnN0Q2hpbGQ7XG4gICAgdGhpcy5jYXJldCA9IGRvd24gPyAwIDogdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQubGVuZ3RoO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmQgPSBmdW5jdGlvbihkaXJlY3Rpb24sIGNvcHkpe1xuICAgIHZhciBiYXNlID0gdGhpcy5kb2MuYmFzZTtcbiAgICB2YXIgdmVydGljYWwgPSBkaXJlY3Rpb24gPT0gXCJ1cFwiIHx8IGRpcmVjdGlvbiA9PSBcImRvd25cIjtcbiAgICB2YXIgYmVmb3JlID0gZGlyZWN0aW9uID09IFwidXBcIiB8fCBkaXJlY3Rpb24gPT0gXCJsZWZ0XCI7XG4gICAgdmFyIHRoaXNfbmFtZSA9IHZlcnRpY2FsID8gXCJsXCIgOiBcImNcIjtcbiAgICB2YXIgbiA9IHRoaXMuY3VycmVudDtcbiAgICB3aGlsZShuLnBhcmVudE5vZGUgJiYgIShuLm5vZGVOYW1lID09IHRoaXNfbmFtZSAmJiBuLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2wnKSl7XG5cdG4gPSBuLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIGlmKCFuLnBhcmVudE5vZGUpIHJldHVybjtcbiAgICB2YXIgdG9faW5zZXJ0O1xuICAgIFxuICAgIC8vIGNoZWNrIGlmIDJEIGFuZCBob3Jpem9udGFsIGFuZCBleHRlbmQgYWxsIHRoZSBvdGhlciByb3dzIGlmIHNvIFxuICAgIGlmKCF2ZXJ0aWNhbCAmJiBuLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSBcImxcIil7XG5cdHRvX2luc2VydCA9IGJhc2UuY3JlYXRlRWxlbWVudChcImNcIik7XG5cdHRvX2luc2VydC5hcHBlbmRDaGlsZCh0aGlzLm1ha2VfZShcIlwiKSk7XG5cdHZhciBwb3MgPSAxO1xuXHR2YXIgY2MgPSBuO1xuXHR3aGlsZShjYy5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCl7XG5cdCAgICBwb3MrKztcblx0ICAgIGNjID0gY2MucHJldmlvdXNTaWJsaW5nO1xuXHR9XG5cdHZhciB0b19tb2RpZnkgPSBbXTtcblx0dmFyIGl0ZXJhdG9yID0gdGhpcy5kb2MueHBhdGhfbGlzdChcIi4vbC9jW3Bvc2l0aW9uKCk9XCIrcG9zK1wiXVwiLCBuLnBhcmVudE5vZGUucGFyZW50Tm9kZSk7XG5cdHRyeXsgZm9yKHZhciBubiA9IGl0ZXJhdG9yLml0ZXJhdGVOZXh0KCk7IG5uICE9IG51bGw7IG5uID0gaXRlcmF0b3IuaXRlcmF0ZU5leHQoKSl7IHRvX21vZGlmeS5wdXNoKG5uKTsgfX1cblx0Y2F0Y2goZSkgeyB0aGlzLmZpcmVfZXZlbnQoXCJlcnJvclwiLHtcIm1lc3NhZ2VcIjonWE1MIG1vZGlmaWVkIGR1cmluZyBpdGVyYXRpb24/ICcgKyBlfSk7IH1cblx0Zm9yKHZhciBqID0gMDsgaiA8IHRvX21vZGlmeS5sZW5ndGg7IGorKyl7XG5cdCAgICB2YXIgbm4gPSB0b19tb2RpZnlbal07XG5cdCAgICBpZihjb3B5KSBubi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShubi5jbG9uZU5vZGUodHJ1ZSksIGJlZm9yZSA/IG5uIDogbm4ubmV4dFNpYmxpbmcpO1xuXHQgICAgZWxzZSBubi5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0b19pbnNlcnQuY2xvbmVOb2RlKHRydWUpLCBiZWZvcmUgPyBubiA6IG5uLm5leHRTaWJsaW5nKTtcblx0ICAgIG5uLnBhcmVudE5vZGUuc2V0QXR0cmlidXRlKFwic1wiLHBhcnNlSW50KG5uLnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwic1wiKSkrMSk7XG5cdH1cblx0dGhpcy5jdXJyZW50ID0gYmVmb3JlID8gbi5wcmV2aW91c1NpYmxpbmcubGFzdENoaWxkIDogbi5uZXh0U2libGluZy5maXJzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQubGVuZ3RoO1xuXHR0aGlzLmNoZWNrcG9pbnQoKTtcblx0cmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICBpZihjb3B5KXtcblx0dG9faW5zZXJ0ID0gbi5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgfVxuICAgIGVsc2V7XG5cdGlmKHZlcnRpY2FsKXtcblx0ICAgIHRvX2luc2VydCA9IGJhc2UuY3JlYXRlRWxlbWVudChcImxcIik7XG5cdCAgICB0b19pbnNlcnQuc2V0QXR0cmlidXRlKFwic1wiLG4uZ2V0QXR0cmlidXRlKFwic1wiKSlcblx0ICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwYXJzZUludChuLmdldEF0dHJpYnV0ZShcInNcIikpOyBpKyspe1xuXHRcdHZhciBjID0gYmFzZS5jcmVhdGVFbGVtZW50KFwiY1wiKTtcblx0XHRjLmFwcGVuZENoaWxkKHRoaXMubWFrZV9lKFwiXCIpKTtcblx0XHR0b19pbnNlcnQuYXBwZW5kQ2hpbGQoYyk7XG5cdCAgICB9XG5cdH1cblx0ZWxzZXtcblx0ICAgIHRvX2luc2VydCA9IGJhc2UuY3JlYXRlRWxlbWVudChcImNcIik7XG5cdCAgICB0b19pbnNlcnQuYXBwZW5kQ2hpbGQodGhpcy5tYWtlX2UoXCJcIikpO1xuXHR9XG4gICAgfVxuICAgIG4ucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoXCJzXCIscGFyc2VJbnQobi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcInNcIikpKzEpO1xuICAgIG4ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodG9faW5zZXJ0LCBiZWZvcmUgPyBuIDogbi5uZXh0U2libGluZyk7XG4gICAgaWYodmVydGljYWwpIHRoaXMuY3VycmVudCA9IHRvX2luc2VydC5maXJzdENoaWxkLmZpcnN0Q2hpbGQ7XG4gICAgZWxzZSB0aGlzLmN1cnJlbnQgPSB0b19pbnNlcnQuZmlyc3RDaGlsZDtcbiAgICB0aGlzLmNhcmV0ID0gMDtcbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfcmVtb3ZlX2NvbCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIG4gPSB0aGlzLmN1cnJlbnQ7XG4gICAgd2hpbGUobi5wYXJlbnROb2RlICYmIG4ucGFyZW50Tm9kZS5wYXJlbnROb2RlICYmICEobi5ub2RlTmFtZSA9PSAnYycgJiYgbi5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdsJyAmJiBuLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcpKXtcblx0biA9IG4ucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgaWYoIW4ucGFyZW50Tm9kZSkgcmV0dXJuO1xuICAgIFxuICAgIC8vIERvbid0IHJlbW92ZSBpZiB0aGVyZSBpcyBvbmx5IGEgc2luZ2xlIGNvbHVtbjpcbiAgICBpZihuLnByZXZpb3VzU2libGluZyAhPSBudWxsKXtcblx0dGhpcy5jdXJyZW50ID0gbi5wcmV2aW91c1NpYmxpbmcubGFzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gbi5wcmV2aW91c1NpYmxpbmcubGFzdENoaWxkLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQubGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIGlmKG4ubmV4dFNpYmxpbmcgIT0gbnVsbCl7XG5cdHRoaXMuY3VycmVudCA9IG4ubmV4dFNpYmxpbmcuZmlyc3RDaGlsZDtcblx0dGhpcy5jYXJldCA9IDA7XG4gICAgfVxuICAgIGVsc2UgcmV0dXJuO1xuICAgIFxuICAgIHZhciBwb3MgPSAxO1xuICAgIHZhciBjYyA9IG47XG4gICAgXG4gICAgLy8gRmluZCBwb3NpdGlvbiBvZiBjb2x1bW5cbiAgICB3aGlsZShjYy5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCl7XG5cdHBvcysrO1xuXHRjYyA9IGNjLnByZXZpb3VzU2libGluZztcbiAgICB9XG4gICAgdmFyIHRvX21vZGlmeSA9IFtdO1xuICAgIHZhciBpdGVyYXRvciA9IHRoaXMuZG9jLnhwYXRoX2xpc3QoXCIuL2wvY1twb3NpdGlvbigpPVwiK3BvcytcIl1cIiwgbi5wYXJlbnROb2RlLnBhcmVudE5vZGUpXG4gICAgdHJ5eyBmb3IodmFyIG5uID0gaXRlcmF0b3IuaXRlcmF0ZU5leHQoKTsgbm4gIT0gbnVsbDsgbm4gPSBpdGVyYXRvci5pdGVyYXRlTmV4dCgpKXsgdG9fbW9kaWZ5LnB1c2gobm4pOyB9fVxuICAgIGNhdGNoKGUpIHsgdGhpcy5maXJlX2V2ZW50KFwiZXJyb3JcIix7XCJtZXNzYWdlXCI6J1hNTCBtb2RpZmllZCBkdXJpbmcgaXRlcmF0aW9uPyAnICsgZX0pOyB9XG4gICAgZm9yKHZhciBqID0gMDsgaiA8IHRvX21vZGlmeS5sZW5ndGg7IGorKyl7XG5cdHZhciBubiA9IHRvX21vZGlmeVtqXTtcblx0bm4ucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoXCJzXCIscGFyc2VJbnQobm4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJzXCIpKS0xKTtcblx0bm4ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChubik7XG4gICAgfVxufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9yZW1vdmVfcm93ID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgbiA9IHRoaXMuY3VycmVudDtcbiAgICB3aGlsZShuLnBhcmVudE5vZGUgJiYgIShuLm5vZGVOYW1lID09ICdsJyAmJiBuLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2wnKSl7XG5cdG4gPSBuLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIGlmKCFuLnBhcmVudE5vZGUpIHJldHVybjtcbiAgICAvLyBEb24ndCByZW1vdmUgaWYgdGhlcmUgaXMgb25seSBhIHNpbmdsZSByb3c6XG4gICAgaWYobi5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCl7XG5cdHRoaXMuY3VycmVudCA9IG4ucHJldmlvdXNTaWJsaW5nLmZpcnN0Q2hpbGQubGFzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gbi5wcmV2aW91c1NpYmxpbmcubGFzdENoaWxkLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQubGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIGlmKG4ubmV4dFNpYmxpbmcgIT0gbnVsbCl7XG5cdHRoaXMuY3VycmVudCA9IG4ubmV4dFNpYmxpbmcuZmlyc3RDaGlsZC5maXJzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gMDtcbiAgICB9XG4gICAgZWxzZSByZXR1cm47XG5cbiAgICBuLnBhcmVudE5vZGUuc2V0QXR0cmlidXRlKFwic1wiLHBhcnNlSW50KG4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJzXCIpKS0xKTtcbiAgICBuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobik7XG59XG5cbi8qKiBcbiAgICBmdW5jdGlvblxuICAgIEBtZW1iZXJvZiBHdXBweUJhY2tlbmRcbiAgICBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHBhcmFtXG4qL1xuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X3JlbW92ZSA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIG4gPSB0aGlzLmN1cnJlbnQ7XG4gICAgd2hpbGUobi5wYXJlbnROb2RlICYmICEobi5ub2RlTmFtZSA9PSAnYycgJiYgbi5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdsJykpe1xuXHRuID0gbi5wYXJlbnROb2RlO1xuICAgIH1cbiAgICBpZighbi5wYXJlbnROb2RlKSByZXR1cm47XG4gICAgaWYobi5wYXJlbnROb2RlLnBhcmVudE5vZGUgJiYgbi5wYXJlbnROb2RlLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gXCJsXCIpe1xuXHR0aGlzLmxpc3RfcmVtb3ZlX2NvbCgpO1xuXHRyZXR1cm47XG4gICAgfVxuICAgIGlmKG4ucHJldmlvdXNTaWJsaW5nICE9IG51bGwpe1xuXHR0aGlzLmN1cnJlbnQgPSBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQ7XG5cdHRoaXMuY2FyZXQgPSBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQuZmlyc3RDaGlsZC50ZXh0Q29udGVudC5sZW5ndGg7XG4gICAgfVxuICAgIGVsc2UgaWYobi5uZXh0U2libGluZyAhPSBudWxsKXtcblx0dGhpcy5jdXJyZW50ID0gbi5uZXh0U2libGluZy5maXJzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gMDtcbiAgICB9XG4gICAgZWxzZSByZXR1cm47XG4gICAgbi5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZShcInNcIixwYXJzZUludChuLnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwic1wiKSktMSk7XG4gICAgbi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG4pO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUucmlnaHQgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgaWYodGhpcy5jYXJldCA+PSBHdXBweVV0aWxzLmdldF9sZW5ndGgodGhpcy5jdXJyZW50KSl7XG5cdHZhciBubiA9IHRoaXMuZG9jLnhwYXRoX25vZGUoXCJmb2xsb3dpbmc6OmVbMV1cIiwgdGhpcy5jdXJyZW50KTtcblx0aWYobm4gIT0gbnVsbCl7XG5cdCAgICB0aGlzLmN1cnJlbnQgPSBubjtcblx0ICAgIHRoaXMuY2FyZXQgPSAwO1xuXHR9XG5cdGVsc2V7XG5cdCAgICB0aGlzLmZpcmVfZXZlbnQoXCJyaWdodF9lbmRcIik7XG5cdH1cbiAgICB9XG4gICAgZWxzZXtcblx0dGhpcy5jYXJldCArPSAxO1xuICAgIH1cbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNwYWNlYmFyID0gZnVuY3Rpb24oKXtcbiAgICBpZihHdXBweVV0aWxzLmlzX3RleHQodGhpcy5jdXJyZW50KSkgdGhpcy5pbnNlcnRfc3RyaW5nKFwiIFwiKTtcbiAgICBlbHNlIHRoaXMuc3BhY2VfY2FyZXQgPSB0aGlzLmNhcmV0O1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGVmdCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBpZih0aGlzLmNhcmV0IDw9IDApe1xuXHR2YXIgcG4gPSB0aGlzLmRvYy54cGF0aF9ub2RlKFwicHJlY2VkaW5nOjplWzFdXCIsIHRoaXMuY3VycmVudCk7XG5cdGlmKHBuICE9IG51bGwpe1xuXHQgICAgdGhpcy5jdXJyZW50ID0gcG47XG5cdCAgICB0aGlzLmNhcmV0ID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aDtcblx0fVxuXHRlbHNle1xuXHQgICAgdGhpcy5maXJlX2V2ZW50KFwibGVmdF9lbmRcIik7XG5cdH1cbiAgICB9XG4gICAgZWxzZXtcblx0dGhpcy5jYXJldCAtPSAxO1xuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5kZWxldGVfZnJvbV9jID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgcG9zID0gMDtcbiAgICB2YXIgYyA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlO1xuICAgIHdoaWxlKGMgJiYgYy5ub2RlTmFtZSA9PSBcImNcIil7XG5cdHBvcysrO1xuXHRjID0gYy5wcmV2aW91c1NpYmxpbmc7XG4gICAgfVxuICAgIHZhciBpZHggPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJkZWxldGVcIik7XG4gICAgdmFyIHN1cnZpdm9yX25vZGUgPSB0aGlzLmRvYy54cGF0aF9ub2RlKFwiLi9jW3Bvc2l0aW9uKCk9XCIraWR4K1wiXVwiLCB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wYXJlbnROb2RlKTtcbiAgICB2YXIgc3Vydml2b3Jfbm9kZXMgPSBbXTtcbiAgICBmb3IodmFyIG4gPSBzdXJ2aXZvcl9ub2RlLmZpcnN0Q2hpbGQ7IG4gIT0gbnVsbDsgbiA9IG4ubmV4dFNpYmxpbmcpe1xuXHRzdXJ2aXZvcl9ub2Rlcy5wdXNoKG4pO1xuICAgIH1cbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xuICAgIHRoaXMuZGVsZXRlX2Zyb21fZigpO1xuICAgIHRoaXMuaW5zZXJ0X25vZGVzKHN1cnZpdm9yX25vZGVzLCBwb3MgPiBpZHgpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmRlbGV0ZV9mcm9tX2UgPSBmdW5jdGlvbigpe1xuICAgIC8vIHJldHVybiBmYWxzZSBpZiB3ZSBkZWxldGVkIHNvbWV0aGluZywgYW5kIHRydWUgb3RoZXJ3aXNlLlxuICAgIGlmKHRoaXMuY2FyZXQgPiAwKXtcblx0dGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNwbGljZW4odGhpcy5jYXJldC0xLFwiXCIsMSk7XG5cdHRoaXMuY2FyZXQtLTtcbiAgICB9XG4gICAgZWxzZXtcblx0Ly8gVGhlIG9yZGVyIG9mIHRoZXNlIGlzIGltcG9ydGFudFxuXHRpZih0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nICE9IG51bGwgJiYgdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZy5nZXRBdHRyaWJ1dGUoXCJjaGFyXCIpID09IFwieWVzXCIpe1xuXHQgICAgLy8gVGhlIHByZXZpb3VzIG5vZGUgaXMgYW4gZiBub2RlIGJ1dCBpcyByZWFsbHkganVzdCBhIGNoYXJhY3Rlci4gIERlbGV0ZSBpdC5cblx0ICAgIHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmc7XG5cdCAgICB0aGlzLmRlbGV0ZV9mcm9tX2YoKTtcblx0fVxuXHRlbHNlIGlmKHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCAmJiB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nLm5vZGVOYW1lID09ICdmJyl7XG5cdCAgICAvLyBXZSdyZSBpbiBhbiBlIG5vZGUganVzdCBhZnRlciBhbiBmIG5vZGUuICBNb3ZlIGJhY2sgaW50byB0aGUgZiBub2RlIChkZWxldGUgaXQ/KVxuXHQgICAgdGhpcy5sZWZ0KCk7XG5cdCAgICByZXR1cm4gZmFsc2U7XG5cdH1cblx0ZWxzZSBpZih0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCAmJiB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wcmV2aW91c1NpYmxpbmcubm9kZU5hbWUgPT0gJ2MnKXtcblx0ICAgIC8vIFdlJ3JlIGluIGEgYyBjaGlsZCBvZiBhbiBmIG5vZGUsIGJ1dCBub3QgdGhlIGZpcnN0IG9uZS4gIEdvIHRvIHRoZSBwcmV2aW91cyBjXG5cdCAgICBpZih0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5oYXNBdHRyaWJ1dGUoXCJkZWxldGVcIikpe1xuXHRcdHRoaXMuZGVsZXRlX2Zyb21fYygpO1xuXHQgICAgfVxuXHQgICAgZWxzZXtcblx0XHR0aGlzLmxlZnQoKTtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdCAgICB9XG5cdH1cblx0ZWxzZSBpZih0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nID09IG51bGwgJiYgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2MnICYmICh0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wcmV2aW91c1NpYmxpbmcgPT0gbnVsbCB8fCB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wcmV2aW91c1NpYmxpbmcubm9kZU5hbWUgIT0gJ2MnKSl7XG5cdCAgICAvLyBXZSdyZSBpbiB0aGUgZmlyc3QgYyBjaGlsZCBvZiBhbiBmIG5vZGUgYW5kIGF0IHRoZSBiZWdpbm5pbmctLWRlbGV0ZSB0aGUgZiBub2RlXG5cdCAgICB2YXIgcGFyID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGU7XG5cdCAgICB3aGlsZShwYXIucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcgfHwgcGFyLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2MnKXtcblx0XHRwYXIgPSBwYXIucGFyZW50Tm9kZTtcblx0ICAgIH1cblx0ICAgIGlmKHBhci5oYXNBdHRyaWJ1dGUoXCJkZWxldGVcIikpe1xuXHRcdHRoaXMuZGVsZXRlX2Zyb21fYygpO1xuXHQgICAgfVxuXHQgICAgZWxzZXtcblx0XHR0aGlzLmN1cnJlbnQgPSBwYXIucGFyZW50Tm9kZTtcblx0XHR0aGlzLmRlbGV0ZV9mcm9tX2YoKTtcblx0ICAgIH1cblx0fVxuXHRlbHNle1xuXHQgICAgLy8gV2UncmUgYXQgdGhlIGJlZ2lubmluZyAoaG9wZWZ1bGx5ISkgXG5cdCAgICByZXR1cm4gZmFsc2U7XG5cdH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZGVsZXRlX2ZvcndhcmRfZnJvbV9lID0gZnVuY3Rpb24oKXtcbiAgICAvLyByZXR1cm4gZmFsc2UgaWYgd2UgZGVsZXRlZCBzb21ldGhpbmcsIGFuZCB0cnVlIG90aGVyd2lzZS5cbiAgICBpZih0aGlzLmNhcmV0IDwgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aCl7XG5cdHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zcGxpY2VuKHRoaXMuY2FyZXQsXCJcIiwxKTtcbiAgICB9XG4gICAgZWxzZXtcblx0Ly9XZSdyZSBhdCB0aGUgZW5kXG5cdGlmKHRoaXMuY3VycmVudC5uZXh0U2libGluZyAhPSBudWxsKXtcblx0ICAgIC8vIFRoZSBuZXh0IG5vZGUgaXMgYW4gZiBub2RlLiAgRGVsZXRlIGl0LlxuXHQgICAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nO1xuXHQgICAgdGhpcy5kZWxldGVfZnJvbV9mKCk7XG5cdH1cblx0ZWxzZSBpZih0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnYycpe1xuXHQgICAgLy8gV2UncmUgaW4gYSBjIGNoaWxkIG9mIGFuIGYgbm9kZS4gIERvIG5vdGhpbmdcblx0ICAgIHJldHVybiBmYWxzZTtcblx0fVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmJhY2tzcGFjZSA9IGZ1bmN0aW9uKCl7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzICE9IEd1cHB5QmFja2VuZC5TRUxfTk9ORSl7XG5cdHRoaXMuc2VsX2RlbGV0ZSgpO1xuXHR0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX05PTkU7XG5cdHRoaXMuY2hlY2twb2ludCgpO1xuICAgIH1cbiAgICBlbHNlIGlmKHRoaXMuZGVsZXRlX2Zyb21fZSgpKXtcblx0dGhpcy5jaGVja3BvaW50KCk7XG4gICAgfVxufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZGVsZXRlX2tleSA9IGZ1bmN0aW9uKCl7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzICE9IEd1cHB5QmFja2VuZC5TRUxfTk9ORSl7XG5cdHRoaXMuc2VsX2RlbGV0ZSgpO1xuXHR0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX05PTkU7XG5cdHRoaXMuY2hlY2twb2ludCgpO1xuICAgIH1cbiAgICBlbHNlIGlmKHRoaXMuZGVsZXRlX2ZvcndhcmRfZnJvbV9lKCkpe1xuXHR0aGlzLmNoZWNrcG9pbnQoKTtcbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuYmFja3NsYXNoID0gZnVuY3Rpb24oKXtcbiAgICBpZihHdXBweVV0aWxzLmlzX3RleHQodGhpcy5jdXJyZW50KSkgcmV0dXJuO1xuICAgIHRoaXMuaW5zZXJ0X3N5bWJvbChcInN5bV9uYW1lXCIpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUudGFiID0gZnVuY3Rpb24oKXtcbiAgICBpZighR3VwcHlVdGlscy5pc19zeW1ib2wodGhpcy5jdXJyZW50KSl7XG5cdHRoaXMuY2hlY2tfZm9yX3N5bWJvbCgpO1xuXHRyZXR1cm47XG4gICAgfVxuICAgIHZhciBzeW1fbmFtZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLnRleHRDb250ZW50O1xuICAgIHZhciBjYW5kaWRhdGVzID0gW107XG4gICAgZm9yKHZhciBuIGluIHRoaXMuc3ltYm9scyl7XG5cdGlmKG4uc3RhcnRzV2l0aChzeW1fbmFtZSkpIGNhbmRpZGF0ZXMucHVzaChuKTtcbiAgICB9XG4gICAgaWYoY2FuZGlkYXRlcy5sZW5ndGggPT0gMSl7XG5cdHRoaXMuY3VycmVudC5maXJzdENoaWxkLnRleHRDb250ZW50ID0gY2FuZGlkYXRlc1swXTtcblx0dGhpcy5jYXJldCA9IGNhbmRpZGF0ZXNbMF0ubGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIHtcblx0dGhpcy5maXJlX2V2ZW50KFwiY29tcGxldGlvblwiLHtcImNhbmRpZGF0ZXNcIjpjYW5kaWRhdGVzfSk7XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnJpZ2h0X3BhcmVuID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLmN1cnJlbnQubm9kZU5hbWUgPT0gJ2UnICYmIHRoaXMuY2FyZXQgPCB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoIC0gMSkgcmV0dXJuO1xuICAgIGVsc2UgdGhpcy5yaWdodCgpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUudXAgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgaWYodGhpcy5jdXJyZW50LnBhcmVudE5vZGUuaGFzQXR0cmlidXRlKFwidXBcIikpe1xuXHR2YXIgdCA9IHBhcnNlSW50KHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcInVwXCIpKTtcblx0dmFyIGYgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xuXHR2YXIgbiA9IGYuZmlyc3RDaGlsZDtcblx0d2hpbGUobiAhPSBudWxsICYmIHQgPiAwKXtcblx0ICAgIGlmKG4ubm9kZU5hbWUgPT0gJ2MnKSB0LS07XG5cdCAgICBpZih0ID4gMCkgbiA9IG4ubmV4dFNpYmxpbmc7XG5cdH1cblx0dGhpcy5jdXJyZW50ID0gbi5sYXN0Q2hpbGQ7XG5cdHRoaXMuY2FyZXQgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIHRoaXMubGlzdF92ZXJ0aWNhbF9tb3ZlKGZhbHNlKTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmRvd24gPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgaWYodGhpcy5jdXJyZW50LnBhcmVudE5vZGUuaGFzQXR0cmlidXRlKFwiZG93blwiKSl7XG5cdHZhciB0ID0gcGFyc2VJbnQodGhpcy5jdXJyZW50LnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwiZG93blwiKSk7XG5cdHZhciBmID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucGFyZW50Tm9kZTtcblx0dmFyIG4gPSBmLmZpcnN0Q2hpbGQ7XG5cdHdoaWxlKG4gIT0gbnVsbCAmJiB0ID4gMCl7XG5cdCAgICBpZihuLm5vZGVOYW1lID09ICdjJykgdC0tO1xuXHQgICAgaWYodCA+IDApIG4gPSBuLm5leHRTaWJsaW5nO1xuXHR9XG5cdHRoaXMuY3VycmVudCA9IG4ubGFzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aDtcbiAgICB9XG4gICAgZWxzZSB0aGlzLmxpc3RfdmVydGljYWxfbW92ZSh0cnVlKTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmhvbWUgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuZG9jLnJvb3QoKS5maXJzdENoaWxkO1xuICAgIHRoaXMuY2FyZXQgPSAwO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmRvYy5yb290KCkubGFzdENoaWxkO1xuICAgIHRoaXMuY2FyZXQgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmNoZWNrcG9pbnQgPSBmdW5jdGlvbigpe1xuICAgIHZhciBiYXNlID0gdGhpcy5kb2MuYmFzZTtcbiAgICB0aGlzLmN1cnJlbnQuc2V0QXR0cmlidXRlKFwiY3VycmVudFwiLFwieWVzXCIpO1xuICAgIHRoaXMuY3VycmVudC5zZXRBdHRyaWJ1dGUoXCJjYXJldFwiLHRoaXMuY2FyZXQudG9TdHJpbmcoKSk7XG4gICAgdGhpcy51bmRvX25vdysrO1xuICAgIHRoaXMudW5kb19kYXRhW3RoaXMudW5kb19ub3ddID0gYmFzZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgdGhpcy51bmRvX2RhdGEuc3BsaWNlKHRoaXMudW5kb19ub3crMSwgdGhpcy51bmRvX2RhdGEubGVuZ3RoKTtcbiAgICB0aGlzLmZpcmVfZXZlbnQoXCJjaGFuZ2VcIix7XCJvbGRcIjp0aGlzLnVuZG9fZGF0YVt0aGlzLnVuZG9fbm93LTFdLFwibmV3XCI6dGhpcy51bmRvX2RhdGFbdGhpcy51bmRvX25vd119KTtcbiAgICB0aGlzLmN1cnJlbnQucmVtb3ZlQXR0cmlidXRlKFwiY3VycmVudFwiKTtcbiAgICB0aGlzLmN1cnJlbnQucmVtb3ZlQXR0cmlidXRlKFwiY2FyZXRcIik7XG4gICAgaWYodGhpcy5wYXJlbnQgJiYgdGhpcy5wYXJlbnQucmVhZHkpIHRoaXMucGFyZW50LnJlbmRlcih0cnVlKTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5yZXN0b3JlID0gZnVuY3Rpb24odCl7XG4gICAgdGhpcy5kb2MuYmFzZSA9IHRoaXMudW5kb19kYXRhW3RdLmNsb25lTm9kZSh0cnVlKTtcbiAgICB0aGlzLmZpbmRfY3VycmVudCgpO1xuICAgIHRoaXMuY3VycmVudC5yZW1vdmVBdHRyaWJ1dGUoXCJjdXJyZW50XCIpO1xuICAgIHRoaXMuY3VycmVudC5yZW1vdmVBdHRyaWJ1dGUoXCJjYXJldFwiKTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5maW5kX2N1cnJlbnQgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuZG9jLnhwYXRoX25vZGUoXCIvLypbQGN1cnJlbnQ9J3llcyddXCIpO1xuICAgIHRoaXMuY2FyZXQgPSBwYXJzZUludCh0aGlzLmN1cnJlbnQuZ2V0QXR0cmlidXRlKFwiY2FyZXRcIikpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUudW5kbyA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBpZih0aGlzLnVuZG9fbm93IDw9IDApIHJldHVybjtcbiAgICB0aGlzLnVuZG9fbm93LS07XG4gICAgdGhpcy5yZXN0b3JlKHRoaXMudW5kb19ub3cpO1xufVxuXG4vKiogXG4gICAgZnVuY3Rpb25cbiAgICBAbWVtYmVyb2YgR3VwcHlCYWNrZW5kXG4gICAgQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBwYXJhbVxuKi9cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUucmVkbyA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBpZih0aGlzLnVuZG9fbm93ID49IHRoaXMudW5kb19kYXRhLmxlbmd0aC0xKSByZXR1cm47XG4gICAgdGhpcy51bmRvX25vdysrO1xuICAgIHRoaXMucmVzdG9yZSh0aGlzLnVuZG9fbm93KTtcbn1cblxuLyoqIFxuICAgIGZ1bmN0aW9uXG4gICAgQG1lbWJlcm9mIEd1cHB5QmFja2VuZFxuICAgIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gcGFyYW1cbiovXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmRvbmUgPSBmdW5jdGlvbihzKXtcbiAgICBpZihHdXBweVV0aWxzLmlzX3N5bWJvbCh0aGlzLmN1cnJlbnQpKSB0aGlzLmNvbXBsZXRlX3N5bWJvbCgpO1xuICAgIGVsc2UgdGhpcy5maXJlX2V2ZW50KFwiZG9uZVwiKTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5jb21wbGV0ZV9zeW1ib2wgPSBmdW5jdGlvbigpe1xuICAgIHZhciBzeW1fbmFtZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLnRleHRDb250ZW50O1xuICAgIGlmKCEodGhpcy5zeW1ib2xzW3N5bV9uYW1lXSkpIHJldHVybjtcbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xuICAgIHRoaXMuZGVsZXRlX2Zyb21fZigpO1xuICAgIHRoaXMuaW5zZXJ0X3N5bWJvbChzeW1fbmFtZSk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUucHJvYmxlbSA9IGZ1bmN0aW9uKG1lc3NhZ2Upe1xuICAgIHRoaXMuZmlyZV9ldmVudChcImVycm9yXCIse1wibWVzc2FnZVwiOm1lc3NhZ2V9KTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5pc19ibGFja2xpc3RlZCA9IGZ1bmN0aW9uKHN5bWJfdHlwZSl7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHRoaXMuYmxhY2tsaXN0Lmxlbmd0aDsgaSsrKVxuXHRpZihzeW1iX3R5cGUgPT0gdGhpcy5ibGFja2xpc3RbaV0pIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5jaGVja19mb3Jfc3ltYm9sID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgaW5zdGFuY2UgPSB0aGlzO1xuICAgIGlmKEd1cHB5VXRpbHMuaXNfdGV4dCh0aGlzLmN1cnJlbnQpKSByZXR1cm47XG4gICAgZm9yKHZhciBzIGluIHRoaXMuc3ltYm9scyl7XG5cdGlmKGluc3RhbmNlLmN1cnJlbnQubm9kZU5hbWUgPT0gJ2UnICYmIHMubGVuZ3RoIDw9IChpbnN0YW5jZS5jYXJldCAtIGluc3RhbmNlLnNwYWNlX2NhcmV0KSAmJiAhKEd1cHB5VXRpbHMuaXNfYmxhbmsoaW5zdGFuY2UuY3VycmVudCkpICYmIGluc3RhbmNlLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2VhcmNoX2F0KGluc3RhbmNlLmNhcmV0LHMpKXtcblx0ICAgIHZhciB0ZW1wID0gaW5zdGFuY2UuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZTtcblx0ICAgIHZhciB0ZW1wX2NhcmV0ID0gaW5zdGFuY2UuY2FyZXQ7XG5cdCAgICBpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gaW5zdGFuY2UuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSgwLGluc3RhbmNlLmNhcmV0LXMubGVuZ3RoKStpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKGluc3RhbmNlLmNhcmV0KTtcblx0ICAgIGluc3RhbmNlLmNhcmV0IC09IHMubGVuZ3RoO1xuXHQgICAgdmFyIHN1Y2Nlc3MgPSBpbnN0YW5jZS5pbnNlcnRfc3ltYm9sKHMpO1xuXHQgICAgaWYoIXN1Y2Nlc3Mpe1xuXHRcdGluc3RhbmNlLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0ZW1wO1xuXHRcdGluc3RhbmNlLmNhcmV0ID0gdGVtcF9jYXJldDtcblx0ICAgIH1cblx0ICAgIGJyZWFrO1xuXHR9XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEd1cHB5QmFja2VuZDtcbiIsIi8qKlxuICAgQGNsYXNzXG4gICBAY2xhc3NkZXNjIEEgY2xhc3MgcmVwcmVzZW50aW5nIGEgR3VwcHkgZG9jdW1lbnRcbiAgIEBwYXJhbSB7c3RyaW5nfSBbZG9jPTxtPjxlPjwvZT48L20+XSAtIEFuIFhNTCBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBkb2N1bWVudFxuICAgQGNvbnN0cnVjdG9yIFxuICovXG52YXIgR3VwcHlEb2MgPSBmdW5jdGlvbihkb2Mpe1xuICAgIGRvYyA9IGRvYyB8fCBcIjxtPjxlPjwvZT48L20+XCI7XG4gICAgdGhpcy5zZXRfY29udGVudChkb2MpO1xufVxuXG5HdXBweURvYy5wcm90b3R5cGUuaXNfc21hbGwgPSBmdW5jdGlvbihubil7XG4gICAgdmFyIG4gPSBubi5wYXJlbnROb2RlO1xuICAgIHdoaWxlKG4gIT0gbnVsbCAmJiBuLm5vZGVOYW1lICE9ICdtJyl7XG5cdGlmKG4uZ2V0QXR0cmlidXRlKFwic21hbGxcIikgPT0gXCJ5ZXNcIikgcmV0dXJuIHRydWU7XG5cdG4gPSBuLnBhcmVudE5vZGVcblx0d2hpbGUobiAhPSBudWxsICYmIG4ubm9kZU5hbWUgIT0gJ2MnKSBuID0gbi5wYXJlbnROb2RlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cbkd1cHB5RG9jLnByb3RvdHlwZS5lbnN1cmVfdGV4dF9ub2RlcyA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIGwgPSB0aGlzLmJhc2UuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJlXCIpO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBsLmxlbmd0aDsgaSsrKXtcblx0aWYoIShsW2ldLmZpcnN0Q2hpbGQpKSBsW2ldLmFwcGVuZENoaWxkKHRoaXMuYmFzZS5jcmVhdGVUZXh0Tm9kZShcIlwiKSk7XG4gICAgfVxufVxuXG4vKiogXG4gICAgQ2hlY2sgaWYgZG9jdW1lbnQgaXMgZW1wdHlcbiAgICBAbWVtYmVyb2YgR3VwcHlEb2NcbiAgICBAcmV0dXJucyB7Ym9vbGVhbn1cbiovXG5HdXBweURvYy5wcm90b3R5cGUuaXNfYmxhbmsgPSBmdW5jdGlvbigpe1xuICAgIGlmKHRoaXMuYmFzZS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImZcIikubGVuZ3RoID4gMCkgcmV0dXJuIGZhbHNlO1xuICAgIHZhciBsID0gdGhpcy5iYXNlLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiZVwiKTtcbiAgICBpZihsLmxlbmd0aCA9PSAxICYmICghKGxbMF0uZmlyc3RDaGlsZCkgfHwgbFswXS5maXJzdENoaWxkLnRleHRDb250ZW50ID09IFwiXCIpKSByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gZmFsc2U7XG59XG5cblxuLyoqIFxuICAgIEdldCB0aGUgZG9jdW1lbnQgYXMgYSBET00gb2JqZWN0XG4gICAgQG1lbWJlcm9mIEd1cHB5RG9jXG4gICAgQHJldHVybnMge0VsZW1lbnR9XG4qL1xuR3VwcHlEb2MucHJvdG90eXBlLnJvb3QgPSBmdW5jdGlvbigpe1xuICAgIHJldHVybiB0aGlzLmJhc2UuZG9jdW1lbnRFbGVtZW50O1xufVxuXG4vKiogXG4gICAgR2V0IHRoZSBjb250ZW50IG9mIHRoZSBkb2N1bWVudCBhcyBhIHN0cmluZ1xuICAgIEBtZW1iZXJvZiBHdXBweURvY1xuICAgIEBwYXJhbSB7c3RyaW5nfSB0IC0gVGhlIHJlbmRlcmluZyBtZXRob2QgdG8gdXNlIChcImxhdGV4XCIsIFwidGV4dFwiLCBcImFzdFwiIChmb3Igc3ludGF4IHRyZWUpLCBvciBcInhtbFwiIChmb3IgaW50ZXJuYWwgWE1MIHJlcHJlc2VudGF0aW9uKSlcbiAgICBAcmV0dXJucyB7c3RyaW5nfVxuKi9cbkd1cHB5RG9jLnByb3RvdHlwZS5nZXRfY29udGVudCA9IGZ1bmN0aW9uKHQscil7XG4gICAgaWYodCA9PSBcInhtbFwiKSByZXR1cm4gKG5ldyBYTUxTZXJpYWxpemVyKCkpLnNlcmlhbGl6ZVRvU3RyaW5nKHRoaXMuYmFzZSk7XG4gICAgZWxzZSBpZih0ID09IFwiYXN0XCIpIHJldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLnN5bnRheF90cmVlKCkpO1xuICAgIGVsc2UgcmV0dXJuIHRoaXMubWFudWFsX3JlbmRlcih0LHRoaXMucm9vdCgpLHIpO1xufVxuXG5HdXBweURvYy5wcm90b3R5cGUuc3ludGF4X3RyZWUgPSBmdW5jdGlvbihuKXtcbiAgICBuID0gbiB8fCB0aGlzLnJvb3QoKVxuICAgIGlmKG4ubm9kZU5hbWUgPT0gXCJlXCIpe1xuXHRjb25zb2xlLmxvZyhcIlNob3VsZCBuZXZlciBoYXBwZW5cIik7XG5cdC8vYW5zID0gbi5maXJzdENoaWxkLnRleHRDb250ZW50O1xuICAgIH1cbiAgICBlbHNlIGlmKG4ubm9kZU5hbWUgPT0gXCJmXCIpe1xuXHR2YXIgYW5zID0ge1wiYXJnc1wiOltdLCBcImt3YXJnc1wiOnt9fTtcblx0YW5zWyd2YWx1ZSddID0gbi5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpO1xuXHRhbnNbJ3R5cGUnXSA9IFwiZnVuY3Rpb25cIjtcblx0aWYobi5oYXNBdHRyaWJ1dGUoXCJhc3RfdmFsdWVcIikpIGFuc1sndmFsdWUnXSA9IG4uZ2V0QXR0cmlidXRlKFwiYXN0X3ZhbHVlXCIpO1xuXHRpZihuLmhhc0F0dHJpYnV0ZShcImFzdF90eXBlXCIpKSBhbnNbJ3R5cGUnXSA9IG4uZ2V0QXR0cmlidXRlKFwiYXN0X3R5cGVcIik7XG5cdGVsc2UgaWYobi5nZXRBdHRyaWJ1dGUoXCJjaGFyXCIpID09IFwieWVzXCIpIGFuc1sndHlwZSddID0gXCJuYW1lXCI7XG5cdFxuXHR2YXIgaXRlcmF0b3IgPSB0aGlzLnhwYXRoX2xpc3QoXCIuLypbbmFtZSgpPSdjJyBvciBuYW1lKCk9J2wnXVwiLCBuKVxuXHRmb3IodmFyIG5uID0gaXRlcmF0b3IuaXRlcmF0ZU5leHQoKTsgbm4gIT0gbnVsbDsgbm4gPSBpdGVyYXRvci5pdGVyYXRlTmV4dCgpKXtcblx0ICAgIGlmKG5uLmhhc0F0dHJpYnV0ZShcIm5hbWVcIikpIGFucy5rd2FyZ3Nbbm4uZ2V0QXR0cmlidXRlKFwibmFtZVwiKV0gPSB0aGlzLnN5bnRheF90cmVlKG5uKVxuXHQgICAgZWxzZSBhbnMuYXJncy5wdXNoKHRoaXMuc3ludGF4X3RyZWUobm4pKVxuXHR9XG4gICAgfVxuICAgIGVsc2UgaWYobi5ub2RlTmFtZSA9PSBcImxcIil7XG5cdGFucyA9IFtdO1xuXHRmb3IodmFyIG5uID0gbi5maXJzdENoaWxkOyBubiAhPSBudWxsOyBubiA9IG5uLm5leHRTaWJsaW5nKXtcblx0ICAgIGFucy5wdXNoKHRoaXMuc3ludGF4X3RyZWUobm4pKTtcblx0fVxuICAgIH1cbiAgICBlbHNlIGlmKG4ubm9kZU5hbWUgPT0gXCJjXCIgfHwgbi5ub2RlTmFtZSA9PSBcIm1cIil7XG5cdHZhciB0b2tlbnMgPSBbXVxuXHRmb3IodmFyIG5uID0gbi5maXJzdENoaWxkOyBubiAhPSBudWxsOyBubiA9IG5uLm5leHRTaWJsaW5nKXtcblx0ICAgIGlmKG5uLm5vZGVOYW1lID09IFwiZVwiKXtcblx0XHR0b2tlbnMgPSB0b2tlbnMuY29uY2F0KEd1cHB5RG9jLnRva2VuaXNlKG5uLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQpKTtcblx0ICAgIH1cblx0ICAgIGVsc2UgaWYobm4ubm9kZU5hbWUgPT0gXCJmXCIpe1xuXHRcdHRva2Vucy5wdXNoKHRoaXMuc3ludGF4X3RyZWUobm4pKTtcblx0ICAgIH1cblx0fVxuXHRhbnMgPSBHdXBweURvYy5wYXJzZSh0b2tlbnMpO1xuICAgIH1cbiAgICByZXR1cm4gYW5zO1xufVxuXG5HdXBweURvYy5wcm90b3R5cGUueHBhdGhfbm9kZSA9IGZ1bmN0aW9uKHhwYXRoLCBub2RlKXtcbiAgICBub2RlID0gbm9kZSB8fCB0aGlzLnJvb3QoKVxuICAgIHJldHVybiB0aGlzLmJhc2UuZXZhbHVhdGUoeHBhdGgsIG5vZGUsIG51bGwsIFhQYXRoUmVzdWx0LkZJUlNUX09SREVSRURfTk9ERV9UWVBFLCBudWxsKS5zaW5nbGVOb2RlVmFsdWU7XG59XG5cbkd1cHB5RG9jLnByb3RvdHlwZS54cGF0aF9saXN0ID0gZnVuY3Rpb24oeHBhdGgsIG5vZGUpe1xuICAgIG5vZGUgPSBub2RlIHx8IHRoaXMucm9vdCgpXG4gICAgcmV0dXJuIHRoaXMuYmFzZS5ldmFsdWF0ZSh4cGF0aCwgbm9kZSwgbnVsbCwgWFBhdGhSZXN1bHQuT1JERVJFRF9OT0RFX0lURVJBVE9SX1RZUEUsIG51bGwpO1xufVxuXG4vKiogXG4gICAgR2V0IHRoZSBuYW1lcyBvZiBzeW1ib2xzIHVzZWQgaW4gdGhpcyBkb2N1bWVudFxuICAgIEBtZW1iZXJvZiBHdXBweURvY1xuICAgIEBwYXJhbSB7c3RyaW5nW119IFtncm91cHNdIC0gQSBsaXN0IG9mIGdyb3VwcyB5b3Ugd2FudCBzdHJpbmdzIGZvclxuICAgIEByZXR1cm5zIHtzdHJpbmdbXX1cbiovXG5HdXBweURvYy5wcm90b3R5cGUuZ2V0X3N5bWJvbHMgPSBmdW5jdGlvbihncm91cHMpe1xuICAgIHZhciB0eXBlcyA9IHt9O1xuICAgIHZhciBhbnMgPSBbXTtcbiAgICB2YXIgaXRlcmF0b3IgPSBncm91cHMgPyB0aGlzLnhwYXRoX2xpc3QoXCIvL2ZcIikgOiB0aGlzLnhwYXRoX2xpc3QoXCIvL2ZbQGdyb3VwPSdcIitncm91cHNbaV0rXCInXVwiKTtcbiAgICBmb3IodmFyIG5uID0gaXRlcmF0b3IuaXRlcmF0ZU5leHQoKTsgbm4gIT0gbnVsbDsgbm4gPSBpdGVyYXRvci5pdGVyYXRlTmV4dCgpKVxuXHR0eXBlc1tubi5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpXSA9IHRydWU7XG4gICAgZm9yKHZhciB0IGluIHR5cGVzKVxuXHRhbnMucHVzaCh0KTtcbiAgICByZXR1cm4gYW5zO1xufVxuXG4vKiogXG4gICAgU2V0IHRoZSBjb250ZW50IG9mIHRoZSBkb2N1bWVudFxuICAgIEBtZW1iZXJvZiBHdXBweURvY1xuICAgIEBwYXJhbSB7c3RyaW5nfSB4bWxfZGF0YSAtIEFuIFhNTCBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBjb250ZW50IG9mIHRoZSBkb2N1bWVudFxuKi9cbkd1cHB5RG9jLnByb3RvdHlwZS5zZXRfY29udGVudCA9IGZ1bmN0aW9uKHhtbF9kYXRhKXtcbiAgICB0aGlzLmJhc2UgPSAobmV3IHdpbmRvdy5ET01QYXJzZXIoKSkucGFyc2VGcm9tU3RyaW5nKHhtbF9kYXRhLCBcInRleHQveG1sXCIpO1xuICAgIHRoaXMuZW5zdXJlX3RleHRfbm9kZXMoKTtcbn1cblxuR3VwcHlEb2MuYnJhY2tldF94cGF0aCA9IFwiKGNvdW50KC4vKikgIT0gMSBhbmQgbm90IFxcXG5cdFx0ICAgICAgICAgICggXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudCguL2UpPTIgYW5kIFxcXG5cdFx0XHQgICAgY291bnQoLi9mKT0xIGFuZCBcXFxuXHRcdFx0ICAgIGNvdW50KC4vZVtzdHJpbmctbGVuZ3RoKHRleHQoKSk9MF0pPTIgYW5kIFxcXG5cdFx0XHQgICAgKCBcXFxuXHRcdFx0ICAgICAgKFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50KC4vZi9jKT0xIGFuZFxcXG5cdFx0XHQgICAgICAgIGNvdW50KC4vZi9jW0Bpc19icmFja2V0PSd5ZXMnXSk9MVxcXG5cdFx0XHQgICAgICApXFxcblx0XHRcdCAgICAgIG9yXFxcblx0XHRcdCAgICAgIChcXFxuXHRcdFx0ICAgICAgICBmL0BjPSd5ZXMnIGFuZCBcXFxuXHRcdFx0XHRjb3VudCguL2VbQGN1cnJlbnQ9J3llcyddKT0wIGFuZCBcXFxuXHRcdFx0XHRjb3VudCguL2VbQHRlbXA9J3llcyddKT0wIFxcXG5cdFx0XHQgICAgICApXFxcblx0XHRcdCAgICApXFxcblx0XHRcdCAgKVxcXG5cdFx0XHQpICBcXFxuXHRcdFx0b3JcXFxuXHRcdCAgICAgICAgKFxcXG5cdFx0XHQgIGNvdW50KC4vKikgPSAxIGFuZCBcXFxuXHRcdFx0ICBzdHJpbmctbGVuZ3RoKC4vZS90ZXh0KCkpICE9IDEgYW5kIFxcXG5cdFx0XHQgIG51bWJlciguL2UvdGV4dCgpKSAhPSAuL2UvdGV4dCgpIFxcXG5cdFx0XHQpIFxcXG5cdFx0XHRvciBcXFxuXHRcdCAgICAgICAgKCBcXFxuXHRcdFx0ICBjb3VudCguLyopID0gMSBhbmQgXFxcblx0XHRcdCAgLi9lL0BjdXJyZW50ID0gJ3llcycgXFxcblx0XHRcdCkgXFxcblx0XHRcdG9yIFxcXG5cdFx0ICAgICAgICAoIFxcXG5cdFx0XHQgIGNvdW50KC4vKikgPSAxIGFuZCBcXFxuXHRcdFx0ICAuL2UvQHRlbXAgPSAneWVzJyBcXFxuXHRcdFx0KVwiXG5cbkd1cHB5RG9jLnByb3RvdHlwZS5tYW51YWxfcmVuZGVyID0gZnVuY3Rpb24odCxuLHIpe1xuICAgIHZhciBhbnMgPSBcIlwiO1xuICAgIGlmKG4ubm9kZU5hbWUgPT0gXCJlXCIpe1xuXHRpZih0ID09IFwibGF0ZXhcIiAmJiByKXtcblx0ICAgIGFucyA9IG4uZ2V0QXR0cmlidXRlKFwicmVuZGVyXCIpO1xuXHR9XG5cdGVsc2UgaWYodCA9PSBcInRleHRcIil7XG5cdCAgICBhbnMgPSBuLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQ7XG5cdCAgICBpZihuLnByZXZpb3VzU2libGluZyAmJiBuLm5leHRTaWJsaW5nICYmIGFucyA9PSBcIlwiKVxuXHRcdGFucyA9IFwiICogXCI7XG5cdCAgICBlbHNlIHtcblx0XHRhbnMgPSBhbnMucmVwbGFjZSgvKC4pKFteYS16QS1aMC05Ll0pKC4pL2csXCIkMSAkMiAkM1wiKTtcblx0XHRhbnMgPSBhbnMucmVwbGFjZSgvKFthLXpBLVpdKSg/PVxcLikvZyxcIiQxICogXCIpO1xuXHRcdGFucyA9IGFucy5yZXBsYWNlKC8oXFwuKSg/PVthLXpBLVpdKS9nLFwiJDEgKiBcIik7XG5cdFx0YW5zID0gYW5zLnJlcGxhY2UoLyhbYS16QS1aXSkoPz1bYS16QS1aMC05XSkvZyxcIiQxICogXCIpO1xuXHRcdGFucyA9IGFucy5yZXBsYWNlKC8oW2EtekEtWjAtOV0pKD89W2EtekEtWl0pL2csXCIkMSAqIFwiKTtcblx0XHRpZihuLnByZXZpb3VzU2libGluZyAmJiBuLnByZXZpb3VzU2libGluZy5nZXRBdHRyaWJ1dGUoXCJncm91cFwiKSAhPSBcIm9wZXJhdGlvbnNcIikgYW5zID0gYW5zLnJlcGxhY2UoL14oW2EtekEtWjAtOV0pL2csXCIgKiAkMVwiKTtcblx0XHRpZihuLm5leHRTaWJsaW5nICYmIG4ubmV4dFNpYmxpbmcuZ2V0QXR0cmlidXRlKFwiZ3JvdXBcIikgIT0gXCJvcGVyYXRpb25zXCIpIGFucyA9IGFucy5yZXBsYWNlKC8oW2EtekEtWjAtOV0pJC9nLFwiJDEgKiBcIik7XG5cdFx0YW5zID0gXCIgXCIrYW5zK1wiIFwiO1xuXHQgICAgfVxuXHR9XG5cdGVsc2V7XG5cdCAgICBhbnMgPSBuLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQ7XG5cdH1cbiAgICB9XG4gICAgZWxzZSBpZihuLm5vZGVOYW1lID09IFwiZlwiKXtcblx0dmFyIHJlYWxfdHlwZSA9ICh0ID09IFwibGF0ZXhcIiAmJiB0aGlzLmlzX3NtYWxsKG4pKSA/IFwic21hbGxfbGF0ZXhcIiA6IHQ7XG5cdHZhciBubiA9IHRoaXMueHBhdGhfbm9kZShcIi4vYltAcD0nXCIrcmVhbF90eXBlK1wiJ11cIiwgbikgfHwgdGhpcy54cGF0aF9ub2RlKFwiLi9iW0BwPSdcIit0K1wiJ11cIiwgbik7XG5cdGlmKG5uKSBhbnMgPSB0aGlzLm1hbnVhbF9yZW5kZXIodCxubixyKTtcbiAgICB9XG4gICAgZWxzZSBpZihuLm5vZGVOYW1lID09IFwiYlwiKXtcblx0dmFyIGNzID0gW11cblx0dmFyIGkgPSAxO1xuXHR2YXIgcGFyID0gbi5wYXJlbnROb2RlO1xuXHRmb3IodmFyIG5uID0gcGFyLmZpcnN0Q2hpbGQ7IG5uICE9IG51bGw7IG5uID0gbm4ubmV4dFNpYmxpbmcpXG5cdCAgICBpZihubi5ub2RlTmFtZSA9PSBcImNcIiB8fCBubi5ub2RlTmFtZSA9PSBcImxcIikgY3NbaSsrXSA9IHRoaXMubWFudWFsX3JlbmRlcih0LG5uLHIpO1xuXHRmb3IodmFyIG5uID0gbi5maXJzdENoaWxkOyBubiAhPSBudWxsOyBubiA9IG5uLm5leHRTaWJsaW5nKXtcblx0ICAgIGlmKG5uLm5vZGVUeXBlID09IDMpIGFucyArPSBubi50ZXh0Q29udGVudDtcblx0ICAgIGVsc2UgaWYobm4ubm9kZVR5cGUgPT0gMSl7XG5cdFx0aWYobm4uaGFzQXR0cmlidXRlKFwiZFwiKSl7XG5cdFx0ICAgIHZhciBkaW0gPSBwYXJzZUludChubi5nZXRBdHRyaWJ1dGUoXCJkXCIpKTtcblx0XHQgICAgdmFyIGpvaW5lciA9IGZ1bmN0aW9uKGQsbCl7XG5cdFx0XHRpZihkID4gMSkgZm9yKHZhciBrID0gMDsgayA8IGwubGVuZ3RoOyBrKyspIGxba10gPSBqb2luZXIoZC0xLGxba10pO1xuXHRcdFx0cmV0dXJuIGwuam9pbihubi5nZXRBdHRyaWJ1dGUoJ3NlcCcrKGQtMSkpKTtcblx0XHQgICAgfVxuXHRcdCAgICBhbnMgKz0gam9pbmVyKGRpbSxjc1twYXJzZUludChubi5nZXRBdHRyaWJ1dGUoXCJyZWZcIikpXSk7XG5cdFx0fVxuXHRcdGVsc2UgYW5zICs9IGNzW3BhcnNlSW50KG5uLmdldEF0dHJpYnV0ZShcInJlZlwiKSldO1xuXHQgICAgfVxuXHR9XG4gICAgfVxuICAgIGVsc2UgaWYobi5ub2RlTmFtZSA9PSBcImxcIil7XG5cdGFucyA9IFtdO1xuXHR2YXIgaSA9IDA7XG5cdGZvcih2YXIgbm4gPSBuLmZpcnN0Q2hpbGQ7IG5uICE9IG51bGw7IG5uID0gbm4ubmV4dFNpYmxpbmcpe1xuXHQgICAgYW5zW2krK10gPSB0aGlzLm1hbnVhbF9yZW5kZXIodCxubixyKTtcblx0fVxuICAgIH1cbiAgICBlbHNlIGlmKG4ubm9kZU5hbWUgPT0gXCJjXCIgfHwgbi5ub2RlTmFtZSA9PSBcIm1cIil7XG5cdGZvcih2YXIgbm4gPSBuLmZpcnN0Q2hpbGQ7IG5uICE9IG51bGw7IG5uID0gbm4ubmV4dFNpYmxpbmcpXG5cdCAgICBhbnMgKz0gdGhpcy5tYW51YWxfcmVuZGVyKHQsbm4scik7XG5cdGlmKHQgPT0gXCJsYXRleFwiICYmXG4gICAgICAgICAgIG4uZ2V0QXR0cmlidXRlKFwiYnJhY2tldFwiKSA9PSBcInllc1wiICYmXG5cdCAgIHRoaXMuYmFzZS5ldmFsdWF0ZShHdXBweURvYy5icmFja2V0X3hwYXRoLCBuLCBudWxsLFxuXHRcdFx0IFhQYXRoUmVzdWx0LkJPT0xFQU5fVFlQRSwgbnVsbCkuYm9vbGVhblZhbHVlKXsgXG5cdCAgICBhbnMgPSBcIlxcXFxsZWZ0KFwiK2FucytcIlxcXFxyaWdodClcIjtcblx0fVxuICAgIH1cbiAgICByZXR1cm4gYW5zO1xufVxuXG5HdXBweURvYy5wcm90b3R5cGUucGF0aF90byA9IGZ1bmN0aW9uKG4pe1xuICAgIHZhciBuYW1lID0gbi5ub2RlTmFtZTtcbiAgICBpZihuYW1lID09IFwibVwiKSByZXR1cm4gXCJndXBweV9sb2NfbVwiO1xuICAgIHZhciBucyA9IDA7XG4gICAgZm9yKHZhciBubiA9IG47IG5uICE9IG51bGw7IG5uID0gbm4ucHJldmlvdXNTaWJsaW5nKSBpZihubi5ub2RlVHlwZSA9PSAxICYmIG5uLm5vZGVOYW1lID09IG5hbWUpIG5zKys7XG4gICAgcmV0dXJuIHRoaXMucGF0aF90byhuLnBhcmVudE5vZGUpK1wiX1wiK25hbWUrXCJcIitucztcbn1cblxuR3VwcHlEb2MudG9rZW5pc2UgPSBmdW5jdGlvbihzKXtcbiAgICB2YXIgdG9rZW5zID0gW1xuXHR7XCJ0eXBlXCI6XCJudW1iZXJcIiwgXCJyZVwiOlwiXlswLTldKyhcXFxcLlswLTldKyk/XCIsIFwidmFsdWVcIjpmdW5jdGlvbihtKXtyZXR1cm4gTnVtYmVyKG0pfX0sXG5cdHtcInR5cGVcIjpcIm9wZXJhdG9yXCIsIFwicmVcIjpcIl5bXFwtKyovIV1cIiwgXCJ2YWx1ZVwiOmZ1bmN0aW9uKG0pe3JldHVybiBtfX0sXG5cdHtcInR5cGVcIjpcIm5hbWVcIiwgXCJyZVwiOlwiXlthLXpBLVpdXCIsIFwidmFsdWVcIjpmdW5jdGlvbihtKXtyZXR1cm4gbX19LFxuXHR7XCJ0eXBlXCI6XCJzcGFjZVwiLCBcInJlXCI6XCJeXFxcXHMrXCIsIFwidmFsdWVcIjpmdW5jdGlvbihtKXtyZXR1cm4gbX19LFxuICAgIF07XG4gICAgdmFyIGFucyA9IFtdO1xuICAgIHdoaWxlKHMubGVuZ3RoID4gMCl7XG5cdHZhciBvayA9IGZhbHNlO1xuXHRmb3IodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKXtcblx0ICAgIHZhciB0ID0gdG9rZW5zW2ldO1xuXHQgICAgcmUgPSBSZWdFeHAodC5yZSk7XG5cdCAgICB2YXIgbSA9IHJlLmV4ZWMocyk7XG5cdCAgICBpZihtKXtcblx0XHRtID0gbVswXTtcblx0XHRzID0gcy5zdWJzdHJpbmcobS5sZW5ndGgpO1xuXHRcdG9rID0gdHJ1ZTtcblx0XHRpZih0LnR5cGUgIT0gXCJzcGFjZVwiKSBhbnMucHVzaCh7XCJ0eXBlXCI6dC50eXBlLCBcInZhbHVlXCI6IHQudmFsdWUobSl9KVxuXHRcdGJyZWFrO1xuXHQgICAgfVxuXHR9XG5cdGlmKCFvayl7XG5cdCAgICBjb25zb2xlLmxvZyhcIlRva2VuaXNpbmcgZXJyb3JcIik7XG5cdCAgICByZXR1cm4gW107XG5cdH1cbiAgICB9XG4gICAgcmV0dXJuIGFucztcbn1cblxuR3VwcHlEb2MucGFyc2UgPSBmdW5jdGlvbih0b2tlbnMpe1xuICAgIHZhciBzeW1ib2xfdGFibGUgPSB7fTtcblxuICAgIHZhciBvcmlnaW5hbF9zeW1ib2wgPSB7XG5cdG51ZDogZnVuY3Rpb24gKCkgeyB0aHJvdyBFcnJvcihcIlVuZGVmaW5lZFwiKTsgfSxcblx0bGVkOiBmdW5jdGlvbiAobGVmdCkgeyB0aHJvdyBFcnJvcihcIk1pc3Npbmcgb3BlcmF0b3JcIik7IH1cbiAgICB9O1xuXG4gICAgdmFyIG11bCA9IGZ1bmN0aW9uKGxlZnQpeyByZXR1cm4gW1wiKlwiLCBbbGVmdCwgdGhpcy5udWQoKV1dOyB9O1xuICAgIFxuICAgIHZhciBzeW1ib2wgPSBmdW5jdGlvbiAoaWQsIGJwKSB7XG5cdHZhciBzID0gc3ltYm9sX3RhYmxlW2lkXTtcblx0YnAgPSBicCB8fCAwO1xuXHRpZiAocykge1xuICAgICAgICAgICAgaWYgKGJwID49IHMubGJwKSB7XG5cdFx0cy5sYnAgPSBicDtcbiAgICAgICAgICAgIH1cblx0fSBlbHNlIHtcbiAgICAgICAgICAgIHMgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsX3N5bWJvbCk7XG4gICAgICAgICAgICBzLmlkID0gcy52YWx1ZSA9IGlkO1xuICAgICAgICAgICAgcy5sYnAgPSBicDtcbiAgICAgICAgICAgIHN5bWJvbF90YWJsZVtpZF0gPSBzO1xuXHR9XG5cdHJldHVybiBzO1xuICAgIH07XG5cbiAgICBzeW1ib2woXCIoZW5kKVwiKTtcblxuICAgIHMgPSBzeW1ib2woXCIoYmxhbmspXCIsIDYwKTtcbiAgICBzLm51ZCA9IGZ1bmN0aW9uKCl7IHJldHVybiBbXCJibGFua1wiXTt9O1xuICAgIFxuICAgIHMgPSBzeW1ib2woXCIoZnVuY3Rpb24pXCIsIDYwKTtcbiAgICBzLmxlZCA9IG11bDtcbiAgICBzLm51ZCA9IGZ1bmN0aW9uKCl7IHJldHVybiBbdGhpcy52YWx1ZSwgdGhpcy5hcmdzIHx8IFtdLCB0aGlzLmt3YXJncyB8fCB7fV07fTtcbiAgICBcbiAgICBzID0gc3ltYm9sKFwiKGxpdGVyYWwpXCIsIDYwKTtcbiAgICBzLmxlZCA9IG11bDtcbiAgICBzLm51ZCA9IGZ1bmN0aW9uKCl7IHJldHVybiBbXCJ2YWxcIiwgW3RoaXMudmFsdWVdXSB9O1xuXG4gICAgcyA9IHN5bWJvbChcIih2YXIpXCIsIDYwKTtcbiAgICBzLmxlZCA9IG11bDtcbiAgICBzLm51ZCA9IGZ1bmN0aW9uKCl7IHJldHVybiBbXCJ2YXJcIiwgW3RoaXMudmFsdWVdXSB9O1xuXG4gICAgdmFyIHRva2VuO1xuICAgIHZhciB0b2tlbl9uciA9IDA7XG5cbiAgICB2YXIgYWR2YW5jZSA9IGZ1bmN0aW9uIChpZCkge1xuXHR2YXIgYSwgbywgdCwgdjtcblx0aWYgKGlkICYmIHRva2VuLmlkICE9PSBpZCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJFeHBlY3RlZCAnXCIgKyBpZCArIFwiJ1wiKTtcblx0fVxuXHRpZiAodG9rZW5fbnIgPj0gdG9rZW5zLmxlbmd0aCkge1xuICAgICAgICAgICAgdG9rZW4gPSBzeW1ib2xfdGFibGVbXCIoZW5kKVwiXTtcbiAgICAgICAgICAgIHJldHVybjtcblx0fVxuXHR0ID0gdG9rZW5zW3Rva2VuX25yXTtcblx0dG9rZW5fbnIgKz0gMTtcblx0diA9IHQudmFsdWU7XG5cdHZhciBhcmdzID0gbnVsbDtcblx0dmFyIGt3YXJncyA9IG51bGw7XG5cdGEgPSB0LnR5cGU7XG5cdGlmIChhID09PSBcIm5hbWVcIikge1xuICAgICAgICAgICAgbyA9IHN5bWJvbF90YWJsZVtcIih2YXIpXCJdO1xuXHR9IGVsc2UgaWYgKGEgPT09IFwib3BlcmF0b3JcIikge1xuICAgICAgICAgICAgbyA9IHN5bWJvbF90YWJsZVt2XTtcbiAgICAgICAgICAgIGlmICghbykge1xuXHRcdHQuZXJyb3IoXCJVbmtub3duIG9wZXJhdG9yLlwiKTtcbiAgICAgICAgICAgIH1cblx0fSBlbHNlIGlmIChhID09PSAgXCJudW1iZXJcIikge1xuICAgICAgICAgICAgYSA9IFwibGl0ZXJhbFwiO1xuICAgICAgICAgICAgbyA9IHN5bWJvbF90YWJsZVtcIihsaXRlcmFsKVwiXTtcblx0fSBlbHNlIGlmIChhID09PSAgXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBhID0gXCJmdW5jdGlvblwiO1xuICAgICAgICAgICAgbyA9IHN5bWJvbF90YWJsZVtcIihmdW5jdGlvbilcIl07XG5cdCAgICBhcmdzID0gdC5hcmdzO1xuXHQgICAga3dhcmdzID0gdC5rd2FyZ3M7XG5cdH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIlVuZXhwZWN0ZWQgdG9rZW5cIix0KTtcblx0fVxuXHR0b2tlbiA9IE9iamVjdC5jcmVhdGUobyk7XG5cdHRva2VuLnR5cGUgPSBhO1xuXHR0b2tlbi52YWx1ZSA9IHY7XG5cdGlmKGFyZ3MpIHRva2VuLmFyZ3MgPSBhcmdzO1xuXHRpZihrd2FyZ3MpIHRva2VuLmt3YXJncyA9IGt3YXJncztcblx0cmV0dXJuIHRva2VuO1xuICAgIH07XG5cblxuICAgIHZhciBleHByZXNzaW9uID0gZnVuY3Rpb24gKHJicCkge1xuXHR2YXIgbGVmdDtcblx0dmFyIHQgPSB0b2tlbjtcblx0YWR2YW5jZSgpO1xuXHRsZWZ0ID0gdC5udWQoKTtcblx0d2hpbGUgKHJicCA8IHRva2VuLmxicCkge1xuICAgICAgICAgICAgdCA9IHRva2VuO1xuICAgICAgICAgICAgYWR2YW5jZSgpO1xuICAgICAgICAgICAgbGVmdCA9IHQubGVkKGxlZnQpO1xuXHR9XG5cdHJldHVybiBsZWZ0O1xuICAgIH07XG5cbiAgICB2YXIgaW5maXggPSBmdW5jdGlvbiAoaWQsIGJwLCBsZWQpIHtcblx0dmFyIHMgPSBzeW1ib2woaWQsIGJwKTtcblx0cy5sZWQgPSBsZWQgfHwgZnVuY3Rpb24gKGxlZnQpIHtcbiAgICAgICAgICAgIHJldHVybiBbdGhpcy52YWx1ZSwgW2xlZnQsIGV4cHJlc3Npb24oYnApXV07XG5cdH07XG5cdHJldHVybiBzO1xuICAgIH1cblxuICAgIGluZml4KFwiK1wiLCA1MCk7XG4gICAgaW5maXgoXCItXCIsIDUwKTtcbiAgICBpbmZpeChcIipcIiwgNjApO1xuICAgIGluZml4KFwiL1wiLCA2MCk7XG4gICAgdmFyIHByZWZpeCA9IGZ1bmN0aW9uIChpZCwgbnVkKSB7XG5cdHZhciBzID0gc3ltYm9sKGlkKTtcblx0cy5udWQgPSBudWQgfHwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIFt0aGlzLnZhbHVlLCBbZXhwcmVzc2lvbig3MCldXTtcblx0fTtcblx0cmV0dXJuIHM7XG4gICAgfVxuXG4gICAgcHJlZml4KFwiLVwiKTtcbiAgICBwcmVmaXgoXCIhXCIpO1xuICAgIHByZWZpeChcInR5cGVvZlwiKTtcblxuICAgIGlmKHRva2Vucy5sZW5ndGggPT0gMCkgcmV0dXJuIFtcImJsYW5rXCJdO1xuICAgIFxuICAgIGFkdmFuY2UoKTtcbiAgICBcbiAgICByZXR1cm4gZXhwcmVzc2lvbigxMCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gR3VwcHlEb2M7XG4iLCJHdXBweUhlbHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuR3VwcHlIZWxwLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsXCJndXBweV9oZWxwXCIpO1xuR3VwcHlIZWxwLnN0eWxlID0gXCJwYWRkaW5nOjEwcHg7Ym9yZGVyOjFweCBzb2xpZCBibGFjazsgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7ZGlzcGxheTpub25lO1wiO1xuR3VwcHlIZWxwLmlubmVySFRNTCA9IGBTdGFydCB0eXBpbmcgYSBtYXRoZW1hdGljYWwgZnVuY3Rpb24gdG8gYXV0b21hdGljYWxseSBpbnNlcnQgaXQuICA8c3R5bGU+dGR7IHZlcnRpY2FsLWFsaWduOnRvcDtwYWRkaW5nOiAycHg7fTwvc3R5bGU+XG48dGFibGUgc3R5bGU9XCJ3aWR0aDoxMDAlO3RhYmxlLWxheW91dDpmaXhlZFwiPlxuPHRyPjx0ZCBzdHlsZT1cInZlcnRpY2FsLWFsaWduOnRvcDtib3JkZXItcmlnaHQ6MXB4IHNvbGlkIGJsYWNrO3BhZGRpbmctcmlnaHQ6MTVweDtcIj5cbjx0YWJsZSBjZWxsLXBhZGRpbmc9XCI1cHhcIj5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD48Yj5UeXBlLi4uPC9iPjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD48Yj4uLi50byBjcmVhdGU8L2I+PC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPmV4cCBvciBePC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+RXhwb25lbnQ8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+c3ViIG9yIF88L2ZvbnQ+XG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD5TdWJzY3JpcHQ8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+ZnJhYyBvciAvIDwvZm9udD5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkPkJpZyBmcmFjdGlvbjwvdGQ+XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxmb250IGZhY2U9XCJtb25vc3BhY2VcIj5zaGlmdC0vIDwvZm9udD5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkPkRpdmlzaW9uPC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPmFiczwvZm9udD5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkPkFic29sdXRlIHZhbHVlPC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPnNxcnQ8L2ZvbnQ+XG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD5TcXVhcmUgcm9vdDwvdGQ+XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxmb250IGZhY2U9XCJtb25vc3BhY2VcIj5yb290PC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+bnRoIHJvb3Q8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+cGk8L2ZvbnQ+XG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD5waTwvdGQ+XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxmb250IGZhY2U9XCJtb25vc3BhY2VcIj5zaW4vY29zL3RhbjwvZm9udD5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlNpbmUvY29zaW5lL3RhbmdlbnQ8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+bG9nIG9yIGxuPC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+TmF0dXJhbCBsb2dhcml0aG08L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+ZGVyaXY8L2ZvbnQ+XG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD5EZXJpdmF0aXZlPC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPmludDwvZm9udD5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkPkluZGVmaW5pdGUgaW50ZWdyYWw8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+ZGVmaTwvZm9udD5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkPkRlZmluaXRlIGludGVncmFsPC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPnN1bTwvZm9udD5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlN1bW1hdGlvbjwvdGQ+XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxmb250IGZhY2U9XCJtb25vc3BhY2VcIj52ZWM8L2ZvbnQ+XG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD5WZWN0b3I8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+bWF0PC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+TWF0cml4PC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90YWJsZT48L3RkPjx0ZCBzdHlsZT1cInZlcnRpY2FsLWFsaWduOnRvcDtwYWRkaW5nLWxlZnQ6MTVweDtcIj5cbiAgICAgICAgICAgIDx0YWJsZT5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD48Yj5QcmVzcy4uLjwvYj48L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+PGI+Li4udG8gZG88L2I+PC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPmxlZnQvcmlnaHQgYXJyb3dzPC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+TW92ZSBjdXJzb3I8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+c2hpZnQrbGVmdC9yaWdodCBhcnJvd3M8L2ZvbnQ+XG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZD5TZWxlY3QgcmVnaW9uPC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPmN0cmwrYTwvZm9udD5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlNlbGVjdCBhbGw8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+Y3RybCt4L2MvdjwvZm9udD5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkPkN1dC9jb3B5L3Bhc3RlPC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPmN0cmwrei95PC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+VW5kby9yZWRvPC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPmN0cmwrbGVmdC9yaWdodDwvZm9udD5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkPkFkZCBlbnRyeSB0byBsaXN0IG9yIGNvbHVtbiB0byBtYXRyaXg8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+c2hpZnQrY3RybCtsZWZ0L3JpZ2h0PC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+QWRkIGNvcHkgb2YgY3VycmVudCBlbnRyeS9jb2x1bW4gdG8gdG8gbGlzdC9tYXRyaXg8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+Y3RybCt1cC9kb3duPC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+QWRkIHJvdyB0byBtYXRyaXg8L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Zm9udCBmYWNlPVwibW9ub3NwYWNlXCI+c2hpZnQrY3RybCt1cC9kb3duPC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+QWRkIGNvcHkgb2YgY3VycmVudCByb3cgdG8gbWF0cml4PC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPmN0cmwrYmFja3NwYWNlPC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+RGVsZXRlIGN1cnJlbnQgZW50cnkgaW4gbGlzdCBvciBjb2x1bW4gaW5cbiAgICAgICAgICAgICAgICAgICAgbWF0cml4PC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvbnQgZmFjZT1cIm1vbm9zcGFjZVwiPmN0cmwrc2hpZnQrYmFja3NwYWNlPC9mb250PlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQ+RGVsZXRlIGN1cnJlbnQgcm93IGluIG1hdHJpeDwvdGQ+XG4gICAgICAgICAgICAgICAgPC90cj5cbjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+YDtcblxubW9kdWxlLmV4cG9ydHMgPSBHdXBweUhlbHA7XG4iLCJHdXBweVN5bWJvbHMgPSB7XCJzeW1ib2xzXCI6e319O1xuXG5HdXBweVN5bWJvbHMuZXZhbF90ZW1wbGF0ZSA9IGZ1bmN0aW9uKHRlbXBsYXRlLCBuYW1lLCBhcmdzKXtcbiAgICBhcmdzWyduYW1lJ10gPSBuYW1lO1xuICAgIGlmKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0ZW1wbGF0ZSkgPT0gXCJbb2JqZWN0IFN0cmluZ11cIil7XG5cdHZhciBhbnMgPSB0ZW1wbGF0ZTtcblx0Zm9yKHZhciBuYW1lIGluIGFyZ3Mpe1xuXHQgICAgYW5zID0gYW5zLnJlcGxhY2UobmV3IFJlZ0V4cChcIlxcXFx7XFxcXCRcIituYW1lK1wiXFxcXH1cIiksYXJnc1tuYW1lXSk7XG5cdH1cblx0cmV0dXJuIGFucztcbiAgICB9XG4gICAgZWxzZXtcblx0Zm9yKHZhciB4IGluIHRlbXBsYXRlKSB7XG5cdCAgICB0ZW1wbGF0ZVt4XSA9IEd1cHB5U3ltYm9scy5ldmFsX3RlbXBsYXRlKHRlbXBsYXRlW3hdLCBuYW1lLCBhcmdzKVxuXHR9XG5cdHJldHVybiB0ZW1wbGF0ZTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gR3VwcHlTeW1ib2xzO1xuIiwidmFyIEd1cHB5VXRpbHMgPSB7fTtcblxuR3VwcHlVdGlscy5DQVJFVCA9IFwiXFxcXGN1cnNvclstMC4yZXhdezAuN2VtfVwiXG5HdXBweVV0aWxzLlRFTVBfU01BTExfQ0FSRVQgPSBcIlxcXFxjdXJzb3JbMGVtXXswLjZlbX1cIlxuR3VwcHlVdGlscy5URU1QX0NBUkVUID0gXCJcXFxcY3Vyc29yWy0wLjJleF17MC43ZW19XCJcbkd1cHB5VXRpbHMuU01BTExfQ0FSRVQgPSBcIlxcXFxjdXJzb3JbLTAuMDVlbV17MC41ZW19XCJcbkd1cHB5VXRpbHMuU0VMX0NBUkVUID0gXCJcXFxcY3Vyc29yWy0wLjJleF17MC43ZW19XCJcbkd1cHB5VXRpbHMuU01BTExfU0VMX0NBUkVUID0gXCJcXFxcY3Vyc29yWy0wLjA1ZW1dezAuNWVtfVwiXG5HdXBweVV0aWxzLlNFTF9DT0xPUiA9IFwicmVkXCJcblxuR3VwcHlVdGlscy5pc19ibGFuayA9IGZ1bmN0aW9uKG4pe1xuICAgIHJldHVybiBuLmZpcnN0Q2hpbGQgPT0gbnVsbCB8fCBuLmZpcnN0Q2hpbGQubm9kZVZhbHVlID09ICcnO1xufVxuXG5HdXBweVV0aWxzLmdldF9sZW5ndGggPSBmdW5jdGlvbihuKXtcbiAgICBpZihHdXBweVV0aWxzLmlzX2JsYW5rKG4pIHx8IG4ubm9kZU5hbWUgPT0gJ2YnKSByZXR1cm4gMFxuICAgIHJldHVybiBuLmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aDtcbn1cblxuR3VwcHlVdGlscy5wYXRoX3RvID0gZnVuY3Rpb24obil7XG4gICAgdmFyIG5hbWUgPSBuLm5vZGVOYW1lO1xuICAgIGlmKG5hbWUgPT0gXCJtXCIpIHJldHVybiBcImd1cHB5X2xvY19tXCI7XG4gICAgdmFyIG5zID0gMDtcbiAgICBmb3IodmFyIG5uID0gbjsgbm4gIT0gbnVsbDsgbm4gPSBubi5wcmV2aW91c1NpYmxpbmcpIGlmKG5uLm5vZGVUeXBlID09IDEgJiYgbm4ubm9kZU5hbWUgPT0gbmFtZSkgbnMrKztcbiAgICByZXR1cm4gR3VwcHlVdGlscy5wYXRoX3RvKG4ucGFyZW50Tm9kZSkrXCJfXCIrbmFtZStcIlwiK25zO1xufVxuXG5HdXBweVV0aWxzLmlzX3RleHQgPSBmdW5jdGlvbihubil7XG4gICAgcmV0dXJuIG5uLnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwibW9kZVwiKSAmJiAobm4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJtb2RlXCIpID09IFwidGV4dFwiIHx8IG5uLnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwibW9kZVwiKSA9PSBcInN5bWJvbFwiKTtcbn1cblxuR3VwcHlVdGlscy5pc19zeW1ib2wgPSBmdW5jdGlvbihubil7XG4gICAgcmV0dXJuIG5uLnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwibW9kZVwiKSAmJiBubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcIm1vZGVcIikgPT0gXCJzeW1ib2xcIjtcbn1cblxuR3VwcHlVdGlscy5pc19zbWFsbCA9IGZ1bmN0aW9uKG5uKXtcbiAgICB2YXIgbiA9IG5uLnBhcmVudE5vZGU7XG4gICAgd2hpbGUobiAhPSBudWxsICYmIG4ubm9kZU5hbWUgIT0gJ20nKXtcblx0aWYobi5nZXRBdHRyaWJ1dGUoXCJzbWFsbFwiKSA9PSBcInllc1wiKXtcblx0ICAgIHJldHVybiB0cnVlO1xuXHR9XG5cdG4gPSBuLnBhcmVudE5vZGVcblx0d2hpbGUobiAhPSBudWxsICYmIG4ubm9kZU5hbWUgIT0gJ2MnKVxuXHQgICAgbiA9IG4ucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEd1cHB5VXRpbHM7XG4iXX0=
